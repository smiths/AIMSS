00:00:02 Interviewer 

Yeah, and perhaps we can just start with our interviews. OK, first question, could you please give us a short introduction about yourself so your current position, your title and maybe our degrees? 

00:00:18 Developer 

OK, well let's see. We can start from the beginning. I have a computer science bachelors degree from University of California at Berkeley I. I had a masters and a PhD from MIT. 

00:00:30 Developer 

In Media Arts and Sciences, it was the media lab at MIT and I did my PhD thesis and my masters thesis on computer aided plastic surgery. 

00:00:40 Developer 

So simulation of surgical procedures and soft tissue deformation, and then I worked on various industrial projects before and academic. 

00:00:50 Developer 

Projects, but pretty much for the last 20 years I have been the CEO of my own company called I Samix Inc which is. 

00:00:58 Developer 

It's a technology development consulting company that is involved heavily in medical research and software development, and I work very closely with people at primarily Harvard Medical School, Brigham and Women's Hospital Mass General Hospital, but also with other places around the world. I also. 

00:01:19 Developer 

I'm a founder and co-owner of a company called EBIT Inca in Spain, which also offers customization of software for medical device purposes. 

00:01:28 Developer 

Most of the work that I do is with the 3D Slicer software. I've been basically the chief architect of that for the last 20 years. 

00:01:36 Developer 

And work with lots of people around the world on that. 

00:01:41 Interviewer 

Yeah, thank you. So my question is that, uh? 

00:01:45 Interviewer 

You have told us that you are the chief architect at catch up 3D slicer, but could you please give us more description about your relationship with 3D Slicer? 

00:01:56 Developer 

Well so. 

00:01:59 Developer 

Some good way to put it so I started working on it when it was fairly new IT had started a few years earlier by a master student at MIT and then was the subject of some work by other PhD students at MIT and I joined the project too. 

00:02:18 Developer 

You know, because I had experience in industry and I had experience developing surgery planning systems. 

00:02:24 Developer 

And we were able to successfully get grant funding from the US National Institutes of Health for Development and application of the software to different things. 

00:02:34 Developer 

So I kind of took over, uh, redesigning some of the internals of it, and over the years have been kind of like maybe the the. 

00:02:44 Developer 

Longest term kind of consistent member of the core development staff. Since that time we also have. 

00:02:49 Developer 

Had quite a few improvements to the software thanks to contributions from in fact, a lot of folks from Queens University in Canada, but also from companies such as General Electric and Kitware, both of which worked with us on various grant applications. 

00:03:09 Developer 

So the things that I mostly work on helping answer questions on the forum I am working on customizing for different applications that are of interest to my research and a lot of that takes place. 

00:03:24 Developer 

In terms of, let's say, prototyping, new analysis pipelines, or integrating different features that are specifically needed, integration, different visualization methodologies, interactive techniques, geometric analysis, that sort of thing. 

00:03:43 Interviewer 

Yeah, thank you. So my next question is that, uh? 

00:03:49 Interviewer 

I think you just answered this question, but maybe you can give us more details. How long have you been working in this project? 

00:03:56 Interviewer 

3D Slicer project. 

00:03:58 Developer 

It's been pretty. I wouldn't say it's been 100% full time because a lot of what I do is applying slicer to different applications, but pretty much on a daily basis for almost. 

00:04:09 Developer 

20 years now and uhm, I also work on some other related projects. I don't know if the the. 

00:04:16 Developer 

Open Health imaging foundation. Oh HF, maybe showed up on your radar, but that's a different set of software, more web oriented, so JavaScript implementation. 

00:04:22 Interviewer 

Yeah, Yep. 

00:04:28 Developer 

So, you know Slicer is C++ and Python, but it has a little bit of web usage. 

00:04:36 Developer 

Use case, but uh, HF is more natively a web application, and so I've been spending time on that as well. 

00:04:45 Developer 

But maybe in the last five years, say yeah. 

00:04:45 Interviewer 

 

00:04:47 Interviewer 

Yes, thank you and to confirm that yes, so HF is one of the software in our past. 

00:04:52 Interviewer 

 

00:04:53 Interviewer 

Could you please give us more information about your development group or large? Is it and maybe some brief ideas are there? Are they all developers? Or maybe do have project managers? Thanks. 

00:05:07 Developer 

OK, let's see. So it's a. It's a very loosely coupled group. Because of the nature of the open source software and funding model is, uh, is such that it's more typically about people who are making use of the software for particular applications is how they get funded. And then it's kind of a group effort to keep the core. 

00:05:14 Developer 

 

00:05:14 Developer 

 

00:05:27 Developer 

Maintenance in place. So of I would say there are probably at this point. 

00:05:35 Developer 

What's about maybe? 

00:05:38 Developer 

 

00:05:38 Developer 

 

00:05:38 Developer 

Maybe 5FT es if you counted people from various groups. You know, working on pretty much regular slicer activities, but there is also some something like 170 extensions that have been written by different people who may or may not be full time. 

00:05:58 Developer 

Lesser developers, but they knew enough to contribute some code, UM. 

00:06:05 Developer 

Yeah, I would say of those that they're probably. 

00:06:12 Developer 

I don't know. 

00:06:14 Developer 

Six, probably five or six kind of different institutions that are involved that have people who are funded who are full time, yeah. 

00:06:20 Interviewer 

OK. 

00:06:23 

OK. 

00:06:23 

OK. 

00:06:23 

 

00:06:25 Interviewer 

Uh, yeah, I think you just mentioned that there are some, uh. 

00:06:31 Interviewer 

Maybe some contributors who contribute their codes. Could you please give us more detail? 

00:06:36 Interviewer 

About the process for accepting new contributions into your team. 

00:06:42 Developer 

Sure, we try to encourage people to do what we call extensions for specific use cases. So for example there are extensions for Slicer that are specific to just recently one on COVID. 

00:06:57 Developer 

Lung analysis lung disease analysis, for example. Or there's a whole set of tools for radiation treatment planning? And there's a whole set of tools for. 

00:07:09 Developer 

Things like cranio maxillofacial surgery for, uhm, you know what? Uh, there's even astronomy analysis, so these extensions are really geared towards specific communities, so we encourage people who want to do something to that is specific to go down that path sometimes. 

00:07:29 Developer 

 

00:07:29 Developer 

There are, you know, things that people want for their specific purposes, like there's a A colleague in Norway who's working on the liver resection planning tool. 

00:07:38 Developer 

But in order to make his liver resection planning tool better, he's contributing changes to the Core 3 dimensional annotation system because. 

00:07:49 Developer 

That'll help it make it easier for him and that's. 

00:07:52 Developer 

Kind of where we draw the line, we would like people to make you know general purpose functionality available in the base platform and then customize it in their in their extension and wouldn't so our process when we do things in the core is to invite people to have a a meeting like this to discuss them. 

00:08:12 Developer 

We start to you know page is either a document or a wiki page. 

00:08:18 Developer 

And then the code actually takes place in a in a GitHub pull request that then gets reviewed by the core developers there. 

00:08:25 Developer 

There are three of us who went kitware, one at Queens and and myself. So Joan Christophe feeling romantic hit where and hundreds lasso at Queens who are kind of the three you know. 

00:08:37 Developer 

Core developer team. 

00:08:40 Developer 

Reviewers and so you know, there are a few other people who also would review code and then decide if it's appropriate to put it into the. 

00:08:48 Interviewer 

To be like. 

00:08:48 Interviewer 

 

00:08:48 Interviewer 

Yeah, thank you. I think the idea of extensions of building extensions is very interesting. It sounds like that 3D slicer is very maybe expandable, so yeah, if you have good ideas, you can just put your own ideas into 3D slicer via the extensions I really like. 

00:09:08 Interviewer 

 

00:09:09 Interviewer 

So yeah. 

00:09:09 Developer 

Yeah, it works really well and I should say it's also contractible in the same sense, because sometimes you know these extensions want to hide. 

00:09:14 

OK. 

00:09:18 Developer 

A detail right because you want to focus on on something, so it's also possible to kind of rebuild the user interface from scratch and do something you know slightly different than the core software, but yeah. 

00:09:20 Developer 

Uh-huh yeah. 

00:09:20 Developer 

 

00:09:26 Developer 

 

00:09:26 Developer 

 

00:09:30 Interviewer 

Yeah my my follow my follow up question is that how did you come up with this idea? I mean using extensions and inquire currently the community to contribute the extensions. 

00:09:30 Interviewer 

My my follow my follow up question is that how did you come up with this idea? I mean using extensions and inquire currently the community to contribute the extensions. 

00:09:43 Developer 

 

00:09:45 Developer 

Umm, I do remember doing it. I don't remember how I came up. I do remember just getting a a supplement or a grant or something to with with the specific intention of creating this extension functionality and I think maybe it's because we had. We had experience with adding some. 

00:09:56 Interviewer 

OK. 

00:10:07 Developer 

Code that in in retrospect, was of relatively focused interest. You know features and capabilities that you know members of the team at the time were interested in, but in retrospect they didn't really have a broad application and was very specific to a particular kind of imaging acquisition. 

00:10:26 Developer 

So over the years we had kind of intended always to factor that out, but we still wanted to take advantage of the, you know, the the common methodologies. So we we wanted to. 

00:10:39 Developer 

Make it clearly be part of Slicer, community and ecosystem, but not part that everybody had to. You know install. 

00:10:48 Interviewer 

OK, thank you so my next question on the list is the background of a developer. Maybe some typical background. 

00:10:56 Interviewer 

You talked about that. There are some, maybe full time employees. Maybe just give us an example about one person. 

00:11:04 Developer 

Well, let's see so, uh, a good example would be maybe Andras Lasso, who's a research faculty at Queens University and works very closely with the lab there. That's researching certain kinds of clinical procedures. Computer aided. 

00:11:25 Developer 

Medical procedures and he's. 

00:11:28 Developer 

Got a pH D. He had history working at General Electric and went into academia when he moved, relocated from Hungary to Canada and you know, very prolific developer is a mentor to a number of students who end up contributing quite a bit as well and as. 

00:11:48 Developer 

Other people he worked. 

00:11:49 Developer 

 

00:11:50 Developer 

Uhm, so that's one example. 

00:11:53 Interviewer 

OK, it sounds to me that a developer, uh? 

00:11:57 Interviewer 

Should be some person maybe also working in this domain, not only some, maybe a software developer from another domain. 

00:12:07 Developer 

Pretty much, yeah. You know, I think the way it's turned out that the people who are. 

00:12:07 Interviewer 

OK. 

00:12:14 Developer 

Motivated to really dig into the details, typically have a problem they're trying to solve which is bigger than just a programming problem. 

00:12:20 Developer 

Bigger than you. 

00:12:20 Developer 

 

00:12:21 Developer 

It's a, uh, it's an application to a interesting medical domain and they, you know, they realize that developing the software is a good way to solve their problem. 

00:12:34 Developer 

But you know, they're they're not just pure software developers, yeah? 

00:12:40 Interviewer 

Yeah, OK, next question, what is your estimated number of users? I know that three decisor must have has a lot of users, so do you have a number? 

00:12:51 Developer 

Well and and I don't know whether this is a, uh. 

00:12:56 Developer 

An element of success. We've always been very open and very non restrictive and very, you know, hands off of our users so we know. 

00:13:04 Developer 

I know that there are a lot of people that we have no way of knowing whether they're using it or not because we don't ask them to review, but we have indirect measures I I would say we have, you know, on Google Scholar, if you look for a certain search terms that you know. So there's one thing as citations. 

00:13:10 Interviewer 

OK. 

00:13:24 Developer 

Papers we have some very highly cited papers, but a lot of times papers do not. 

00:13:31 Developer 

Reflect the you know they don't necessarily cite the paper as much as just maybe mention in a footnote, slicer, or 3D slicer. 

00:13:32 

 

00:13:39 Developer 

So we came up with a search term for Google Scholar. That was, we think, works well. We sort of spot, check that it brings up relevant hits, but it's somewhere around 11,000. 

00:13:51 Developer 

Citations for Slicer in publications. So how that translates into users? 

00:13:58 Developer 

Again, it's a little hard to to map that, but there have been, you know, I think over over 3/4 of a million downloads from the website and how many of those people actually going to use it. We don't know. There are our get our forum on discourse dot slicer. 

00:14:18 Developer 

Dot Org has about 15,000 posts a year, so that's you know, again, probably a subset of the people, and the same people post a lot sometimes so. 

00:14:30 Developer 

You know, I mean, it's definitely many, many thousands of people, maybe 100,000. I don't know. But then there are also places in China, for example, where it's hard for them to get to any of our web resources just for for reasons. 

00:14:43 Developer 

So we know there are mirrors, and in fact there's also a slicer.cn, which is a very active forum. I mean, I I. 

00:14:50 Developer 

Sometimes go and look at it and it's really amazing and we know some neurosurgeons in China that have been really promoting use of slicer for their clinical work. 

00:14:59 Developer 

Which is just in in. It's really interesting and and Google Translate does a pretty good job of making that content available and readable to me. 

00:14:59 Developer 

OK. 

00:14:59 Developer 

 

00:15:08 Developer 

But it's also hard to know, you know, sort of that. What that represents is, if lots of there's lots of people in China doing lots of things. So how many of them doing slicer? I don't know. 

00:15:14 Interviewer 

OK. 

00:15:17 Interviewer 

 

00:15:20 Interviewer 

Yeah, even Umm from China I have no idea about it. 

00:15:25 Developer 

Well, you. 

00:15:25 Developer 

 

00:15:25 Developer 

You want to know more? I look at slicer.cn. You can probably. 

00:15:28 Interviewer 

Sure, sure, sure thank you for letting me know that I will check that. 

00:15:32 Developer 

There's a we chat channel too with a. 

00:15:33 Developer 

Lot of stuff, yeah. 

00:15:33 Interviewer 

Oh really, oh nice. 

00:15:36 Interviewer 

Yeah, I think your answer is informative enough. We don't expect anyone to know the exact number. But yeah, I think that's good enough. Thanks, so next question. 

00:15:50 Interviewer 

Do you have any idea about the typical background of a user? 

00:15:56 Developer 

That's a good question. I would say that there are probably a few. 

00:16:01 Developer 

Two stereotypical user types I, I would say the most common is a sort of a masters or PhD student who's been assigned to get some job done and researches what options there are and kind of ends up in slicer. As a you know. 

00:16:21 Developer 

As a choice that compared to MATLAB or some other, you know system that they might have used and, uhm, I think there's a fair number of those. And then people who. 

00:16:32 Developer 

Who adopt it as part of their research careers? You know, and they tend to, you know, be more like the developers in this in that sense. 

00:16:36 

 

00:16:41 Developer 

And ideally we would expect those users to, you know, not all, but at least a good chunk of them to maybe learn a little bit of Python scripting in order to like enable some stuff they want to do. 

00:16:53 Developer 

The the second kind of big category. It may be and I don't know in terms of size. Again, it's hard to know, but then there's this sort of I don't know which they technically oriented clinician, so clinician researcher usually or somebody who's like you know we get. 

00:17:08 Developer 

 

00:17:08 Developer 

 

00:17:12 Developer 

Orthopedic surgeons and, you know, craniofacial surgeons. And sometimes you know radiation therapy practitioners who you know will post a request on the forum for advice on how to do something, and they'll, and we'll say, well, maybe you can write a Python script. And no, no, I'm an orthopedic surgeon. I'm never going to write a Python script. 

00:17:33 Developer 

And you know, so there's a quite a quite a bit of that. You know, people who are trying to get something done maybe get past limitations of commercial systems and. 

00:17:44 Developer 

So we help out those people we can. We also have people who are literally patients who say. 

00:17:49 Developer 

Boy, I really never quit I, you know I wanted to better understand what was wrong with me and so I and sometimes that you find a combination of people who are like both researchers and patients who are like OK. There is one guy and it's just a little side street is totally. 

00:18:03 Developer 

OK. 

00:18:03 Developer 

 

00:18:06 Developer 

Just tell you there's one guy who I got to meet and a really nice guy. Very smart. He would programmer researcher. 

00:18:06 Developer 

Who I got to meet and a really nice guy. Very smart. He would programmer researcher. 

00:18:12 Developer 

And he got this thing that was like a problem in the roof of his mouth. Based on some, you know, surgery that he had gotten that really led to like constant headaches and he couldn't understand. 

00:18:24 Developer 

And none of the doctors believe, you know. I mean, they didn't disbelieve that he had constant headaches, but they didn't know what to do about it. But he got a CT scan of his head and he like. 

00:18:32 Developer 

Looked around and he figured it out, you know. 

00:18:34 Developer 

You know, like what was wrong and then was able to kind of, you know, relieve the pressure that was causing the headaches and built his own little device that pressed on a certain part of the roof of his mouth to help relieve the pressure that was causing the headache. 

00:18:48 Developer 

So you know that's kind of a special case that somebody could do something like that, but it's a real, it was. 

00:18:54 Developer 

An interesting one. 

00:18:56 Interviewer 

Yeah, thank you. I think that last person sounds really like a programmer. 

00:19:00 Interviewer 

 

00:19:00 Developer 

It is. 

00:19:01 Interviewer 

 

00:19:01 Interviewer 

 

00:19:02 Interviewer 

Always trying to solving problems. 

00:19:04 

 

00:19:06 Interviewer 

OK, next question. So currently what are the most significant obstacles in your development process? 

00:19:17 Developer 

Oh, good question. I mean, I think part of it is just that the codebase is so big and complicated now that only a few of us really understand how to work with it. 

00:19:27 Developer 

And even then we have to like you know, there's a like, I say, a sort of a circle of experts. A lot of people are probably overwhelmed by some of the detail. 

00:19:38 Developer 

Uhm, and also the. 

00:19:42 Developer 

The the kind of, uh, probably. 

00:19:46 Developer 

Scale of changes that we might imagine doing takes a lot of effort and we don't have, you know, at different times. In the past we've had. 

00:19:57 Developer 

Grant funding that paid for big chunks of time, like a senior engineer for two or three years to work on refactoring code or changing. 

00:20:06 Developer 

Things so right now, we've we've, you know, not been able to. Kind of like secure that kind of funding that would give us people full time people to work on stuff. 

00:20:17 Developer 

So instead, like I say a lot, most of the people who are working on things or kind of like fixing things on the side that are kind of related to what they may want to do. So probably the biggest thing right now. 

00:20:26 Developer 

I said we're a little bit on the. 

00:20:28 Developer 

Stability side which is fine 'cause it's pretty good and pretty stable, but we're not able to take on big big challenges and big changes, and we're always looking for new opportunities. 

00:20:37 Developer 

But that kind of that kind of, you know, because it's free. You know if it was a product, we might be able to kind of make the argument that we'd sell more copies if we improved it. 

00:20:48 Developer 

But we're always kind of, you know, wanting to keep it free, and so we have to find ways to convince government funding. 

00:20:54 Developer 

For example, to help us improve it, and a lot of times the government funding is, you know, a little hard to get for maintenance and software as opposed to, you know, research. 

00:21:06 Interviewer 

Yeah, one one step of our study is downloading all these repos and do some code analysis and I can remember that 3D Slicer has one of the largest. 

00:21:21 Developer 

 

00:21:21 Developer 

 

00:21:22 Interviewer 

Yeah, since you told me that you encourage users to develop their own extensions. 

00:21:29 Interviewer 

I'm I was wondering why the code base can still be so large. I mean maybe many functions can be maybe dividend and maybe keep kept somewhere else. 

00:21:41 Developer 

Well, yeah, probably they should. Maybe that's part of what I was part of. 

00:21:48 Developer 

Why some of the stuff I was saying could be done if we had more resources, we might. We might choose to do some of that. 

00:21:52 Interviewer 

Yeah yeah, yeah. 

00:21:55 Developer 

Realistically, if you tried to build it, you'd find that there's a whole lot more code that comes with it, right? So basically we use something we call the superbuild technique, which is that the slicer code is. 

00:22:08 Developer 

Dependent on a number of other pieces of code that get brought in at compile time, so the entire build tree for Slicer is something 1314 gigabytes of of code that gets downloaded and compiled and whatnot. 

00:22:23 Developer 

Right, and you know it is big and part of it is just because it does a lot of things I guess. 

00:22:30 Developer 

I mean it, it in spite of you know, we think that the things it does are very general purpose, so we wouldn't want to include stuff that was not you know that was just I mean, it's a little special purpose. 

00:22:43 Developer 

To be medical imaging software, but a lot of the things it has with 3D segmentation and transformation management and visualization. And you know it adds up. 

00:22:57 Interviewer 

Yeah definitely. Actually I have a follow up question which is not on our list, so it's just my personal question. 

00:23:05 Interviewer 

Do you think the soundings to a project can affect the quality of the codes? Or maybe the quality of the software? 

00:23:14 Developer 

I I think it can for sure it it's not a one to one relationship and it's not a clear you know. I always think you know I this is just. 

00:23:26 Developer 

Take this for what it's worth. I always say like software is like poetry. It's not always good that it be long. It's not always good. Did it be short? You know it's. 

00:23:30 

 

00:23:33 Developer 

Gotta be gotta, it's it's a creative output, right? So you can pour lots of money in and get really bad stuff out and you can have somebody who just in their spare time is really devoted to solving a problem. 

00:23:43 Developer 

 

00:23:43 Developer 

 

00:23:43 Developer 

In there. 

00:23:43 Developer 

 

00:23:46 Developer 

Who writes really good software and it's kind of hard to predict in advance where how things are going to turn out. 

00:23:53 Interviewer 

OK, thanks, next question. How might you change your development process to remove or reduce these obstacles? So maybe with limited resources maybe? What kind of changes you might you might take in the future. 

00:24:06 Interviewer 

 

00:24:06 Interviewer 

 

00:24:11 Developer 

Uhm, that's a good question, so let me think how to best to answer that. 

00:24:15 Developer 

We we do. 

00:24:18 Developer 

We do. 

00:24:21 Developer 

I mean, it seems like we have done things that reduce, uh, that change our dependency, uhm? 

00:24:31 Developer 

 

00:24:33 Developer 

Well, we did consciously try for quite a while. So basically, here's part of the answer. Is that historically, we had a a block of time for about 10 years, maybe a little longer, where we had, like. I say, some dedicated funding to implement some of the core features of the of the application. 

00:24:53 Developer 

And that was very helpful because we made a lot of progress and we fixed a lot of things. And then when that project ended we still had the software. But then we had to figure out like how are we going to keep it going. 

00:25:07 Developer 

And we tried a couple times to get follow up funding that was more focused on the software engineering and that turned out to be very difficult for the reasons I've said. 

00:25:14 

 

00:25:16 Developer 

So we did shift consciously to more of a maintenance mode with the idea that people would focus on their, you know, their various use cases 'cause. 

00:25:26 Developer 

They're clinically driven as opposed to technically driven, and one of the things that we have done, and I think we will continue to do and is it was it was always sort of the plan, but we didn't focus on it as much as we are now. 

00:25:40 Developer 

But the plan has always been to make the code and all of it all of this software. 

00:25:47 Developer 

Very uh, commercially friendly, if you will. I don't know how much you've looked at the software licenses and their impact on commercial adapt, adoption of software technologies, but you know, we we wanted to make it so that people could, if they wished, take all or part of Slicer to use. 

00:26:07 Developer 

In a software based medical pro. 

00:26:10 Developer 

Product and so you know as a result of that there have been, you know there are commercial products on the market, based on Slicer that they don't look like Slicer, but underneath they have some code. 

00:26:21 Developer 

OK, so we're doing more of that now. We're just, you know, more of the projects may be supported by by commercialization efforts, which actually is, I think, really good because the project we always started. So we chose the licensing model. 

00:26:25 Developer 

 

00:26:25 Developer 

 

00:26:37 Developer 

We did and we actually made it part of our grant proposals to say look if if this Advanced Research in medical you know technology basically is going to make it into the hands of clinicians who are treating patients on a routine basis. It really needs to be commercialized, otherwise you won't go through the FDA. 

00:26:57 Developer 

You won't be able to sell it as a medical device. 

00:27:00 Developer 

So it's a good thing it's a good transition, but it it? You know it is different than getting just money from the government. 

00:27:07 Interviewer 

Yeah, thank you another follow-up question. I just thought about it so you talked about commercializing the software, so supposedly you are going to start another project. 

00:27:21 Interviewer 

A medical imaging software or something related to that where you choose it to be an open source project or maybe commercialized project? Which one do you think is better for setting a project? 

00:27:33 Developer 

Uhm, well, I'm pretty well set in my ways now. I don't tend to do. 

00:27:37 

OK. 

00:27:38 Developer 

No, I I would say that modern commercial and this may be a topic that you can you know prove me right or wrong based on your academic research, but I would say it there are no purely commercial products anymore. Almost every software product is built on open source one way or another. I mean they may have. 

00:27:47 

 

00:27:53 Developer 

 

00:27:53 Developer 

 

00:27:59 Developer 

 

00:28:01 Developer 

You know, sort of magic sauce that they put inside to like solve a particular piece, but the idea that a company would, you know, start with a blank screen and start typing in code from scratch to implement an entire software package is is, you know it may be. 

00:28:20 Developer 

Theoretically possible, but it would be financially stupid, right? Because there's so much open software that can do 99% of what you need to do, and it isn't your core business to redevelop all that. 

00:28:26 Developer 

 

00:28:26 Developer 

 

00:28:32 Developer 

So I think even if you look at iPhones with BSD kernels and you know all the all the free code that comes from the Chromium project or from Mozilla or from you know Linux new all this stuff. It would be really unusual for me to imagine someone. 

00:28:52 Developer 

Starting a project and not having a core amount of it be open. Now whether you know so with that what the logical corollary is as it has played out in the slicer world, is that when I do stuff, most of it's open because I think that's just a business model for me, but I usually build it on top of slicer, but. 

00:29:11 Developer 

I also say that when we do projects with people who do want to be commercial, we just say look OK. 

00:29:17 Developer 

Just it's really only a narrow piece like like less than 1% of the entire codebase. That is your secret part, and so you know, don't don't try to make anything else more complicated than it needs to be. 

00:29:30 Developer 

Just use what's already been debug. 

00:29:32 Interviewer 

Yeah, thank you very much for your answer. Actually the question was just for my personal interests. OK, yeah I'm a software engineer and I really am interested in such topics. 

00:29:43 Interviewer 

So again, for any questions we discussed during this interview, if you do not want me to get them involved in the study, just let me know. 

00:29:52 Interviewer 

And for the last question, perhaps I won't include it in my study. 

00:29:56 Developer 

Uh, OK, well I'll say too that you know, maybe to get to the essence of your question if you were curious about like what what would be most valuable to you. 

00:30:04 Developer 

I think my experience is that it's very difficult to kind of get momentum around a non public. You know the if you have strings attached to your software and you go to try to convince. 

00:30:16 Developer 

 

00:30:17 Developer 

You know, let's say it's a library and you want people to use your library, but you want them to pay you for it. 

00:30:22 Developer 

You know you'd have to be pretty unique in order for that to work. On the other hand, you know, I think what's happened for Slicer developers, especially in this transition to commercial applications, is that you know by working on a free software. 

00:30:23 Developer 

It has to be, yeah. 

00:30:23 Developer 

 

00:30:26 Interviewer 

 

00:30:38 Developer 

You develop expertise that other people can't easily get, and so they really value that expertise in you as a developer and so at least for us, we say, well, hey, all this slicer stuff. I mean, yeah, and like you say there's a. 

00:30:50 Developer 

None of it. We say OK, all that's available for free. Just dig in it and we show examples worked out to the greatest detail about how it can be adapted to all these different areas. 

00:31:01 Developer 

And then people go well, yes, I I agree it's a great deal. I get that all for free and I don't have to. You know, pay anybody. I don't have any restrictions. I can repackage it, change all the colors. 

00:31:11 Developer 

And the button names and all the stuff I want. 

00:31:13 Developer 

But I still have to know how to do that and once they get to that level of realizing how much is possible, but how much expertise might help to make that efficient, the more market there is for people whose you know experience allows them to perform that more efficiently. So that's really in the end the. 

00:31:34 Developer 

The business model around this kind of a open source technology. 

00:31:39 Interviewer 

Yeah, I agree with you. Thank you very much for your suggestions. So next question, how does documentation fit into your development process? 

00:31:49 Developer 

Oh, it's a necessary important thing we we are in the process of migrating. We had used Mediawiki and still used Mediawiki, which is the core software for Wikipedia and we you know developed practices that worked. But the problem is. 

00:32:09 Developer 

It really doesn't have a versioning system that works for our purposes, and so we're in the process of migrating all that to read the docs, and so now we're putting a core documentation in the GitHub repository. 

00:32:22 Developer 

And then auto generating or read the docs which makes it a lot easier to keep the documentation and the software In Sync. We still have a little bit of a problem because we you know we have a highly visual. 

00:32:34 Developer 

Program you know we want to be able to show examples of pictures and we don't want all those pictures in our GitHub repository, so we've had kind of a. 

00:32:42 Developer 

Kind of a back and forth of how best to maintain the media. I mean, even 'cause we even like movies and sometimes we link off to YouTube would, I would say the documentation is very important and a lot of time. 

00:32:55 Developer 

 

00:32:56 Developer 

You know, I don't know to what extent people go to the forum and can't find the documentation, but you know they'll ask a question and we'll refer to the documentation. 

00:33:04 Developer 

So we'd like people to be more readily able to figure things out and find the documentation and and it you know. Of course it's always incomplete and is always. 

00:33:16 Developer 

Too much, you know. 

00:33:16 Developer 

Much, you know? 

00:33:16 Developer 

 

00:33:16 Developer 

Too much, you know. People people always complain there's too much to read because there's a lot of detail. But then at the same time they don't always find what they're looking for, so it's it's. It's a challenge for sure. 

00:33:25 Interviewer 

 

00:33:27 Interviewer 

Yeah, I think actually 3D slicer is one of the software packages with the best documentation. 

00:33:34 Interviewer 

So we analyzed 29 software and for 3D Slicer I could almost find everything I needed such as tutorials. 

00:33:35 Developer 

OK. 

00:33:46 Interviewer 

How should I do if I want to join the development team? How should I provide my contributions these? 

00:33:54 Interviewer 

Are very detailed. 

00:33:55 Interviewer 

Good and my. 

00:33:56 Interviewer 

Follow up question is that you talked about the large code base which could cause some obstacles, do you think? 

00:34:06 Interviewer 

Improve documentation. Even though 3D Slicer has very good documentation, do you think? Improve documentation will help with these obstacles? 

00:34:16 Developer 

I do I I wish it you know what's the right way to put this. I mean, I personally when I sit down, I do write a lot of documentation. 

00:34:27 Developer 

It means fair amount and I certainly interact a lot with users on the forum, and I do find sometimes when I answering a quick question. OK, that's easy because it's very goal directed writing good documentation. 

00:34:28 Developer 

Can I speak? 

00:34:28 Developer 

 

00:34:40 Developer 

I find harder because what I would rather do is rewrite the code rather than the documentation is 'cause a lot of times you need the documentation 'cause the code isn't well written or the interface is confusing and it would be easier to rewrite the interface than to write the documentation to describe the bad interface. 

00:34:58 Developer 

Yeah, so there are definitely cases like that and and there are also cases where for the programming documentation the. 

00:35:06 Developer 

You know concepts can be difficult and the you know the level of diagramming to really explain how all the pieces fit together is is, you know, a challenge in itself. 

00:35:09 Interviewer 

 

00:35:20 Interviewer 

Yeah, thanks next question, in the past, is there any major obstacle to your development process that has been solved and how to solve it? 

00:35:33 Developer 

Oh, there's probably been many. We you know, what were some good examples? Uhm. 

00:35:39 Developer 

Major obstacle to development. 

00:35:42 Developer 

Uhm, we did have. Well, I think I think one example is that we used to use. 

00:35:53 Developer 

It's something called SVN. I don't know if you're familiar with it, the source navigate its subversion, a software versioning system and older version, and we migrated to GitHub for quite a quite a number of years. We had a kind of a 2. 

00:36:08 Developer 

Two part system with core was in subversion and then we used Git for development. And finally we just gave up on the subversion and switched over to to get in it. Yeah, a lot of times you know there are big. 

00:36:09 Developer 

OK. 

00:36:09 Developer 

 

00:36:23 Developer 

You know, big kind of like engineering processes. You gotta go through and fortunately we have some people who are very good at process. 

00:36:31 Developer 

Jean Christophe filling Rob and did the did a lot of things in slicer like core maintenance of the build system and and so every every so often there are some major pieces of. 

00:36:43 Developer 

Work that unfortunately require weeks of planning and execution and careful attention to detail, and you know. 

00:36:53 Developer 

So they they do become obstacles because over time it just becomes more and more annoying to live with the old system. But then getting out of them and getting everything to work right in the new system. 

00:37:02 Developer 

Tim is. 

00:37:02 Developer 

 

00:37:03 Developer 

Is is not, uh? I mean, we still have stuff that we probably should revamp, but haven't ever gotten the momentum to do. 

00:37:13 Interviewer 

So, do you mean that with the right person with the right developers with the right knowledge? 

00:37:20 Interviewer 

Page you solve this problem of moving from cyber version. Yeah to get. 

00:37:28 Developer 

OK, yeah. 

00:37:28 Developer 

OK. 

00:37:29 Developer 

Yeah, and it it it, it really is. Yeah, in the end you know the system is the systems and the subsystems and the parts really require somebody to really have both the expertise and the time and the energy to carry off some of these larger efforts. 

00:37:33 Developer 

 

00:37:33 Developer 

 

00:37:46 Interviewer 

Yeah yeah, thanks for answers and I noticed that. 

00:37:50 Interviewer 

For some projects in my list, they are still maintaining maybe two pieces of. 

00:37:57 Interviewer 

Code code basis. Maybe one, then, uh. 

00:38:01 Interviewer 

Like it'll add another in GitHub such situations and there are a couple of them. They are still using subversion and another one which is not great. So yeah, and for most of the projects majority of the projects and now people use. 

00:38:22 Interviewer 

At least gate and gate on GitHub. 

00:38:24 Interviewer 

Gate and the majority of the gate projects they use GitHub. 

00:38:30 Interviewer 

OK. 

00:38:31 Developer 

Yeah, I think that's good and and we've, you know, had many discussions and alternatives. Reviews of alternatives. I think the main reason that we use GitHub is because everybody else uses GitHub and so you get some knowledge transfer. You know, big cross projects, I don't, I don't. 

00:38:47 Developer 

You know? 

00:38:47 Developer 

 

00:38:50 Developer 

Love get you know like OK? 

00:38:52 Interviewer 

I don't. 

00:38:53 Developer 

Hate it, I just, you know, sometimes I hate it, but mostly I don't hate it. 

00:38:58 Developer 

But, uh, but it is a nice system, and it it is is worked very well for our purposes and. 

00:39:03 Developer 

And yeah, I can totally imagine. I certainly understand why people you know hit have that kind of legacy of, you know, we made this decision 10 years ago and it's too much trouble to change. 

00:39:15 Developer 

 

00:39:16 Interviewer 

Yeah, yeah, definitely OK. Next question. Could you please give me some details about maybe not details, some basic information about your software development model? For example, do you use waterfall model or maybe your development process is using a gel? 

00:39:36 Developer 

Uhm, I would say it's closer to agile, but I even that might be a stretch. I mean like I say we're kind of in. 

00:39:45 

 

00:39:47 Developer 

I guess if we're if we're if we're more or less in maintenance mode. I mean, that's not really true. 

00:39:52 Developer 

We're not in maintenance mode 'cause we continue to add features, but we're not really in agile or waterfall mode either. 

00:39:59 Interviewer 

OK. 

00:39:59 Developer 

I mean, it's more like we have sort of the core thing we do. What we do is we have what are called the factory machines. So we have a a set of. 

00:40:08 Developer 

Windows, Linux and Mac development build machines and with every night we build the latest source code from GitHub and we make those binaries available and then we also these extensions and there's close to two. 

00:40:24 Developer 

Three of them. We build each one of those, both for the stable version and for the nightly so people can actually independently move like the extensions. 

00:40:35 Developer 

You can tell a a user OK, get the most recent stable version and then update my extension. You'll get the latest code on the stable base sometimes. 

00:40:44 Developer 

People have to. Their extensions depend on things from the latest development release. So they say OK, get the latest nightly build and then get the latest version of the extension for that nightly build. 

00:40:53 Developer 

So those two things are kind of the foundation of our development methodology. Whether you call that agile or not. 

00:41:02 Developer 

I don't know, I know, OK? 

00:41:04 Interviewer 

So follow up question, is that do you assign different stories to different developers? 

00:41:10 Interviewer 

I think that's one part of major partner jail is that your working process? 

00:41:15 Developer 

I I think it's maybe the opposite in the sense that. 

00:41:21 Developer 

Well, maybe whether you call them stories or not. I mean it. The developers tend to be driven by their own needs and or their their clinical or their colleagues needs or their research needs. 

00:41:23 Interviewer 

Severe features. 

00:41:28 Developer 

OK. 

00:41:28 Developer 

 

00:41:32 Developer 

So it's not exactly the same as, like you know, the marketing department got a story from some prototype user and then they go back and try to explain to the developer like. 

00:41:43 Developer 

OK, here's what the user wants that might be more traditional. It's more like the developer is working with the clinician and the clinician says. 

00:41:52 Developer 

I don't want all these buttons, I only need three things and I need them to do this this and this. 

00:41:56 Developer 

Is there any way you could make that happen and then the developer goes? Oh yeah, I know what you mean. 

00:42:00 Developer 

'cause I also want to publish a paper about how the buttons work. So I'm going to make the buttons work the way that works for both. 

00:42:06 Developer 

To this and you know, it's not like a story as much as a goal directed development. 

00:42:14 Interviewer 

Yeah, so sorry. Maybe features request from clients and you implement them. I think that sounds like a gel, but not exactly. So do you? Do you see that? 

00:42:24 Interviewer 

Yeah, did you? 

00:42:24 Interviewer 

 

00:42:26 Interviewer 

You build every night, every day, so that's a new version every day. 

00:42:30 Developer 

 

00:42:32 Developer 

Yeah, new version every day, absolutely super. 

00:42:32 Developer 

Yeah, new version. 

00:42:32 Developer 

 

00:42:34 Interviewer 

OK. 

00:42:35 Developer 

Sure, yeah, super up to the moment and that means, yeah, that people and people do depend on it and you'll often see you know. 

00:42:35 

 

00:42:43 Developer 

I don't know this is sometimes pretty. I don't know if it's unique to the slicer environment, but because the developers are also very active in the support forum, it's not like we have. 

00:42:55 Developer 

We don't have anyone who's like a. 

00:42:57 Developer 

You know help desk, right? There's no help desk, there's just the user forum, and it turns out that several of us who also know how to fix things also participate in the forum. 

00:43:00 Interviewer 

OK. 

00:43:08 Developer 

And so it's very common. You know, we can find lots of examples where somebody asks a question and then one of the developers says. 

00:43:16 Developer 

Oh yeah, that's a good idea. It's going to be available. I just I just implemented it and it's going to be available in tomorrow's build and you can get it. 

00:43:23 Developer 

Or if you if you can't wait till then download this Python script and you can use it and it'll be ready right away. And the main reason is because when you know. 

00:43:32 Developer 

So how to fix things? And you and you recognize that? Yeah, that's a legitimate problem. They the button doesn't work or the you can't find the you know or the typo in the documentation. 

00:43:39 Developer 

Move back. 

00:43:39 Developer 

 

00:43:43 Developer 

Like you, people just tend to fix them rather than like. I mean, sometimes we do have a lot of issues, of course, but sometimes it's easier just to fix the issue and then. 

00:43:52 Developer 

So people get to. 

00:43:53 Interviewer 

 

00:43:54 Interviewer 

I'd say that that's a very fast pace, even for a gel. Sometimes it takes maybe two weeks for the end user to get new features in on your side. It's much faster, yes? 

00:44:04 Developer 

Yes, and we do. We do fix things on the fly, I mean because so much of it is scripted. 

00:44:04 Developer 

And we do. We do fix things on the fly, I mean, because so much of it is scripted. 

00:44:09 Developer 

You know, I mean, some of the C++ code you have to wait for the next day, but it's. 

00:44:12 Developer 

But it's even when even with clinical users I can tell them sometimes. OK, here's the new. Here's the GitHub page with the new Python script you just save it to over a a file with the same name in this directory. 

00:44:25 Developer 

Restart the application and you'll get the new code. 

00:44:27 Interviewer 

 

00:44:28 Interviewer 

OK, so next question is about project management and could you please give us some introduction about your project management process and do think improving this process can tackle some of current problems. Maybe the large codebase problem, or maybe the funding problem, any of them. 

00:44:48 Developer 

Uhm yeah. Well because it's people don't all work for the same place. The same boss or anything. There's not so much of a project management infrastructure per southeast, which is kind of OK because it it sort of fosters more of a team approach. 

00:45:08 Developer 

Self directed, you know people working on things they think are important for their own purposes. 

00:45:14 Developer 

But in terms of. 

00:45:17 Developer 

Let me think in terms of the way we do project management. 

00:45:25 Developer 

Yeah, we we have weekly meetings and we get together and we discuss goals we we are kind of. Yeah, there's what's the right way to put this. 

00:45:32 

 

00:45:36 Developer 

The organization is organic. It is very, uh. 

00:45:43 Developer 

Non committal, let's say. Like we've been wanting to release a new major version for several months and then we work on this and the other thing. 

00:45:51 Developer 

And it's not. It's not so much because we don't want to get it done or we haven't been working towards it as much as we haven't had a since there's there's no kind of like, you know. 

00:45:57 Developer 

 

00:45:57 Developer 

 

00:46:02 Developer 

There's no incentive, I guess maybe it's the right word for it for people to stick to a hard deadline when new things come up, and you know, we realize that they're just. 

00:46:14 Developer 

Things that need to be done and so we have a version five we we wanted to get out in November and well would have done it earlier. 

00:46:23 Developer 

But you know. So now we're a few months past where we wanted to get. Get it out. Would a better pro. I don't know where their project management would have affected that because I think all the people who. 

00:46:34 Developer 

You know we we stopped because we wanted to add a new feature. That feature led to some issues as issue had to be fixed. 

00:46:43 Developer 

I don't think the people involved would have done any better if they were a project management infrastructure that like reminded them that they were late. 

00:46:51 Developer 

They already knew they weren't, they weren't. And then then the the fixes had to be fixed. So yeah, yeah, maybe not a big project management fan. I mean planning, you know for a project like this. 

00:46:51 Developer 

They work with. 

00:46:51 Developer 

 

00:47:02 Developer 

Where you're not really. It's not like we have a big bunch of money. We're trying to spend efficiently. We're just working on something as a team, and so we things happen when they happen. 

00:47:12 Interviewer 

Sure, do you use any tools? Maybe software tools or other tools for your weekly meeting and planning? 

00:47:19 Interviewer 

Adam Platt 

00:47:19 Interviewer 

 

00:47:20 Developer 

We use, uh, what do we use? We do we have zoom? We use? Well, no, we do a Google meet actually for that and we use Google Doc to keep track of notes of what we've been doing. And we also use GitHub issues and wiki pages. 

00:47:29 Developer 

OK. 

00:47:29 Developer 

 

00:47:30 Developer 

Actually for that. 

00:47:30 Developer 

 

00:47:38 Developer 

 

00:47:38 Developer 

 

00:47:41 Developer 

We typically when we have a new project to work on, we create what we call a labs page, which is a wiki page with ideas and trade offs and discussion, and then those translate into GitHub issues which then correspondingly have GitHub pull requests and when. 

00:47:47 Developer 

 

00:47:47 Developer 

 

00:47:57 Developer 

We have mandatory review or the pull requests and then those get integrated in when everybody reaches consensus. 

00:48:05 Interviewer 

OK, thank you now six questions remaining and half an hour for us. I think we're under good check. Yeah so next one is about correctness. Was it hard to ensure the correctness of the software? 

00:48:12 Developer 

OK. 

00:48:18 Interviewer 

 

00:48:18 Interviewer 

 

00:48:24 Interviewer 

If there were any obstacles, what methods have been considered or practiced to improve the situation? 

00:48:31 Developer 

Yeah, there is quite a bit of concern about that. Obviously you know. I mean we we have what I consider to be a kind of a a a fundamental complexity in our in our target area which is. 

00:48:36 Developer 

 

00:48:36 Developer 

 

00:48:49 Developer 

That we. 

00:48:52 Developer 

We have a goal to provide medical imaging software that works with clinical systems and those clinical systems. 

00:49:01 Developer 

Produce data in a variety of formats. Most of what we work with is DICOM data. I think you are familiar with that and you may or may not be familiar with the DICOM. Data is quite a complex standard and very sophisticated, but also. 

00:49:16 Interviewer 

I I know just a little bit about. 

00:49:18 Interviewer 

That that's very. 

00:49:18 Developer 

OK, well it's a big complicated standard and it's it's universal you know, or global within radiology departments. Everybody uses this. 

00:49:30 Developer 

But because it's so complicated, it is also quite common for there to be variability in the different implementations and vendor assumptions, and when it's applied to CT scans versus MRI scans versus dental scanners versus veterinary scanners right? There can be quite a quite a broad. 

00:49:50 Developer 

Range of data types and hundreds and hundreds of different. 

00:49:55 Developer 

You know machines, millions of machines around the world, new ones coming out all the time, so they all create data in slightly different ways, and we want to be. 

00:50:05 Developer 

We want to help our users make use of their data, so that's one side of the equation is incredible complexity and diversity, and you know the software that manages. 

00:50:15 Developer 

DICOM is, you know some of the most. 

00:50:20 Developer 

Uh, complex software you'll find. 

00:50:23 Developer 

On the other hand, most of the data that people want to work with is private and they can't share it with you even if you needed to see it for debugging so that you see that where I get to with this dilemma where those two realities you know make it very hard to to develop the software. So that is a super challenge. 

00:50:31 Developer 

So yeah. 

00:50:31 Developer 

 

00:50:43 Developer 

That we work with that we deal with all all the time. 

00:50:46 Developer 

Uhm, and so because we want to. 

00:50:53 Developer 

You know also you know we show pictures on our website and our publications of patients you know. Like literally doctors with their hands inside of the patients head and looking at the slicer screen at the same time, right? 

00:51:05 Developer 

So correctness is really important to us. We want them to be in the wrong place doing the wrong thing to the wrong part of the head, so. 

00:51:08 Developer 

We don't. 

00:51:08 Developer 

 

00:51:13 Developer 

Right? 

00:51:13 Developer 

 

00:51:13 Developer 

Yeah, so given that fundamental complexity of it and the importance of what we're trying to accomplish. 

00:51:20 Developer 

We do take correctness very very seriously, and so we have quite a bit of you know 3 dimensional coordinate systems and nonlinear transformations, and you know annotation spots that need to stay in the right place and not be different when you load them from the disk. So we do have lots of testing. So another thing we do during our. 

00:51:41 Developer 

Factory processes we have a a number of tests and maybe you've done a study of this and you know that there are component tests and integration tests and smoke tests and self tests and all these different things and we try to do as many of those as we can so that we don't get you know regressions based on. 

00:51:57 Developer 

You know, regret. 

00:51:57 Developer 

 

00:52:00 Developer 

You know side effects from code we didn't expect so so it can take many, many hours to run all those tests and and then we also rely on, you know, on this two stage development process where the stable release is out, but it will also have the nightly news that people can report any issues that they come. They will run across. 

00:52:06 

 

00:52:21 Developer 

And you know, I mean, obviously things happen in software. 

00:52:25 Developer 

But I think the self test is the one that I like the most. I it was one of those things that I kind of lobbied for and did the implementation of 'cause I thought it was really important and what we end up doing is we take the tutorials that we use for, you know, training purposes and we basically convert those into Python scripts and so effectively the software. 

00:52:45 Developer 

You know, with a one click button you can run through all the features that are part of the tutorial so that we're sure that when we install the new version on the machines we maybe in the old days when we used to go to meetings, we would install like you know, 100 PCs with the same software, and then everybody in the room is going through the same steps. 

00:53:04 Developer 

We wanted to make sure that that version of the software was going to do what we said do the tutorials should have it do so? Yeah, that's that's kind of our biggest correctness effort. 

00:53:15 Interviewer 

Yeah, that sounds good. Did your strategies work? I mean all these tests and reporting issues from users. 

00:53:22 Developer 

Oh yeah, I think they do and then you know there there's a. You know I fact I would just dug it up from uh for for a book that a friend of mine is writing. I mentioned to him that there was this paper about the. 

00:53:37 Developer 

Technical theoretical impossibility of actually testing software because you know each branch and each loop, and each conditional can take you down a different code path and it's impossible to test them all. 

00:53:50 Developer 

But you know, that doesn't mean that testing is not worthwhile. It just means that you you have to focus not on trying to be exhaustive. 

00:53:58 Developer 

But I'm being intelligent about your testing and so it it has worked pretty well and especially when we were doing a lot of development and then running the IT was sort of a. 

00:54:02 Developer 

So it. 

00:54:02 Developer 

 

00:54:10 Developer 

A real game changer to have these self tests. When we were releasing new versions and fixing bugs at the same time we were developing the tutorials and planning to give them to large groups of people because you could, really, you know, avoid this sort of like the term. Whack a mole. You know where you like? Think that you fix the bug but it. 

00:54:30 Developer 

Pops up somewhere else, then pops up somewhere else. It's kind of like the. 

00:54:34 Developer 

The situation that could otherwise occur. 

00:54:37 Interviewer 

Thank you oh you just mentioned that to respect the privacy of the patients. Maybe there is a lack of enough data set for tests for debugging. How did you solve this problem? 

00:54:42 Interviewer 

 

00:54:42 Interviewer 

 

00:54:51 Developer 

It's a very difficult problem to solve. Sometimes you you know it's sort of like playing some kind of kids game where you can't really see the thing, but you have to ask them questions to describe what happens. If you do this, what happens if you do that? 

00:55:07 Developer 

Uhm, sometimes you have, you know, I work closely with the hospital, so sometimes we, you know have seen similar things with. 

00:55:17 Developer 

This happened in hospital sometimes. You know you just have to give up. 

00:55:22 Developer 

What we tend to do, you know, it's also problematic because the, uh, the things that you would need to do to share the data to remove patient identifying data. 

00:55:32 Developer 

It also changed the data in a way that it's no longer reproducing the same issue, so we do face this on a regular basis. 

00:55:39 Developer 

We have basically an FAQ that tells people if you're running into problems with your DICOM data. Do this this, this and this and. 

00:55:48 Developer 

If you can send us a deidentified copy. If not, you know. 

00:55:54 Developer 

I mean, what can we do really? We mean, we've been we're good at it. We've been doing it for a long time, but still it can be. 

00:56:01 Developer 

Sometimes there are. There are dead ends. 

00:56:04 Interviewer 

Yeah, thanks next question is about maintainability. So when designing this software, did you consider the ease of future changes? 

00:56:13 Interviewer 

For example, will it be hard to change the structure of the system modules, or maybe code blocks of the software? 

00:56:21 Developer 

Oh, there's always a there's always a yes and no answer to that because you know, anytime you sort of design something as a structure, you know that piece that you've kind of. 

00:56:34 Developer 

Put in place. It's going to be harder to change, but if you think about it in terms of taking those pieces you've built and rearranging them, then maybe that part is easy, so you're always kind of like trading up. Which part is easy versus which part is hard. 

00:56:48 Developer 

But I would say yeah, we did pay a lot of attention to that. And yeah, I like the design. 

00:56:53 Developer 

I mean, I'm partial, I suppose. But one thing that you know I always use as an example is, you know sometimes you'll see architecture diagrams for software. 

00:57:07 Developer 

And they look like jigsaw puzzle pieces that fit together. You've probably seen such a diagram, and I always think that that's a really poor metaphor for software, because you think about. 

00:57:15 Developer 

Because you think. 

00:57:15 Developer 

 

00:57:17 Developer 

Jigsaw puzzles only go together one way, and they only make one picture right? So it's like you don't. That's actually not what you want your software to be. 

00:57:25 Developer 

You want your software to be Lego bricks, or you know some other building material that's you know you could take apart and reuse in different ways, so I I would say Slicer design is. 

00:57:36 Developer 

Pretty good. That way we have a event what we call an event driven MVC pattern, which is, uh, there's sort of a core memory database is. 

00:57:48 Developer 

The state of the scene. We call it a scene and the individual components we call nodes. But you know, kind of arbitrary. 

00:57:55 Developer 

But basically the idea is that the in memory representation can at any time be serialized to disk and reconstituted back the way it was. Just maybe not so amazing, but that's some people don't have that. 

00:58:08 Developer 

So it's an important thing to have. 

00:58:11 Developer 

And then also the different components of the system are layered. So there's this data model, and then there's what we call the logic, which is just pure operations on the data model, and then it is what we call the GUI layer, which is the user interface. 

00:58:25 Developer 

And in the history of the application we have at one point completely stripped away one GUI layer and replaced it with another one. 

00:58:32 Developer 

And may end up doing that again. We have to think about it. 

00:58:37 Developer 

But yeah, we we'd have that modularity in mind everything. All the you know, sort of. There's a core framework of slicer, but then what we call modules are sort of. 

00:58:50 Developer 

Well, they're what we call Slicer modules, and they themselves are made up with they. They can declare their own data structure types, they can expose their own logic and they can expose a GUI. 

00:59:01 Developer 

And there's hooks for all that's all object oriented, and those are. They're still a legacy of probably half a dozen built in modules, but most of the modules. 

00:59:11 Developer 

They're all discovered at runtime. They're all shared libraries, so when an extension gets installed, it's adding new modules which get discovered by configuration at runtime, and so it's, you know, really designed to be modular from that point of view, and reusable. 

00:59:28 Developer 

So I think we did a good job on that. It's never perfect. 

00:59:33 Interviewer 

Yeah, thanks. I I think we were. You mentioned that Jigsaw pictures versus Legos. I think that's very good expression. Have you already written some papers for designing philosophies? 

00:59:47 Developer 

Well, I've given presentations that one, yeah, you know, it's it's interesting. We do have a lot of you know we do have publications and we participate in publications, but they don't tend to be sort of software development publications. You know, we probably could. 

00:59:51 Interviewer 

 

01:00:01 Interviewer 

OK, yeah. 

01:00:04 Developer 

But it's I feel the same way. 

01:00:06 Developer 

 

01:00:07 Developer 

Publications as I feel about documentation is like by the time I sit down to write something like that, I'm like, oh, I should just go fix the code instead. There's more. It's always more coding, and it's always so much more fun and motivating. 

01:00:17 Interviewer 

Yeah, yeah, yeah yeah, that's silly. I love Cody, yeah. 

01:00:22 Interviewer 

 

01:00:23 Interviewer 

OK, next question is about understood ability. Do you have any instances that the users cannot understand the software? Maybe they misunderstood their software. 

01:00:35 Developer 

Yeah, for sure, and it's a big. It's a big ongoing you know topic for us to think about in terms of you know, coming up with I mean one of our other colleagues. 

01:00:51 Developer 

You know, I mean, I don't know if he's quoting somebody, but he he, he's always saying we should try to make simple things simple and complicated things possible because you know, right now, there's just a million ways to do different things, and it is a. 

01:01:04 Developer 

It is a challenge we we only we had the benefit of some designers at during the development, but they were. 

01:01:11 Developer 

Sort of. 

01:01:12 Developer 

Part time designers and part time researchers and part time developers. So it was. It's never been the case that we have had, you know, real user experience, design capability and so. 

01:01:26 Developer 

I mean it would it it so there's a lot of things that feel like they're kind of like engineering concepts. 

01:01:33 Developer 

Exposed in ways that are not completely discoverable and understandable by users, and I'm not sure that we're fully equipped to fix that, but. 

01:01:44 Developer 

We do try UM. 

01:01:48 Interviewer 

Have you already taken any actions to maybe improve this situation? 

01:01:53 Developer 

We we we do from time to time and and a lot of that is another resource issue where you know even just simple things like. 

01:02:04 Developer 

You know we would like to rework some of the icons to make the visual. 

01:02:10 Developer 

Expression more clear, right like? 

01:02:13 Developer 

Some of the icons we have were designed from, you know. 

01:02:17 Developer 

20 You know 1520 years ago and the monitor resolutions were different, and so you know the pixel, it'll pixelated. 

01:02:25 Developer 

Indication of what this thing is supposed to be, but it's not really clear you know, unless you know. 

01:02:30 Developer 

 

01:02:31 Developer 

 

01:02:31 Developer 

 

01:02:31 Developer 

So even just having a designer with the right experience to sort of redo all the look and feel so that it's more obvious to users what all the buttons mean, that's already a big chunk of work and and if for whatever reason, and I maybe they've got you know more important work to be done, but you know it's we haven't found volunteers with a lot of skill set. 

01:02:37 Developer 

 

01:02:37 Developer 

 

01:02:52 Developer 

 

01:02:52 Developer 

 

01:02:52 Developer 

Icon design who want to take that on. 

01:02:56 Developer 

But we do find people who want to do COVID lung analysis tools and make their results available. So it's just it just turns out that you know different different development tasks. Summer easy, easier for us to find volunteers for than others. 

01:03:09 Interviewer 

Yeah, another question about understandability is not from the point of other users. I know a lot of other users they might want to develop extensions for themselves, so there are also potential developers. Do you think your code is easy to understand for for them to give their own? 

01:03:29 Interviewer 

 

01:03:31 Interviewer 

 

01:03:32 Developer 

Yeah, well, no, I think it's not, but I don't know that there's much we can do. I mean, it's it's not that. 

01:03:41 Developer 

It depends so much. I mean it a little bit depends on the person. I have to say and it's not anything negative about people. It's just that you know it is a level of kind of. 

01:03:44 Interviewer 

OK. 

01:03:47 

 

01:03:53 Developer 

Investment and you know commitment to like work through the layers. I don't. I think the layers are actually pretty clean and and reasonably discoverable, but only by somebody who has kind of the right combination of. 

01:04:01 Interviewer 

At 10 

01:04:10 Developer 

Training and will willingness and you know, kind of. 

01:04:17 Developer 

You know, I don't know it it it. It is no question. Some of it is quite complicated and some of it is hard to discover. I mean we have people who are pH D's who. 

01:04:25 Developer 

And with quite a bit of experience, who do get frustrated 'cause they just hit a wall and it just feels like too much and they've got other things they need to do. 

01:04:25 Developer 

Quite a bit of experience who do get frustrated 'cause they just hit a wall and it just feels like too much and they've got other things they need to do. 

01:04:33 Developer 

And then we have other people who are like, oh, you know, well, yeah, there's a lot, but it's really super powerful once I learn it. So you know, I mean you can. You can sort of imagine that. 

01:04:46 Developer 

It could be easier for people, but I don't know if it could be a lot easier fundamentally because it's doing so many different things and some of the things just require, you know learning you have to know certain level of experience with coordinate systems and graphics, and you know medical procedures. 

01:05:06 Developer 

And programming concepts and. 

01:05:09 Interviewer 

Yeah sure yeah, thanks. Next question is about usability. What if any actions were taken to address usability issues? 

01:05:20 Developer 

Uhm, we do quite a bit of that when people point out something they're that's really bad. We we do go back through it. 

01:05:27 Developer 

We put in like for one of the projects we so we traditionally. Let's say it was a good example of this, so we had like a traditional kind of flow for reading images that. 

01:05:40 Developer 

Works well, especially for DICOM images, but for a lot of research studies it was kind of OK, but then we started working on another project to work on. 

01:05:48 Developer 

And more bio. Biological research like specimens like you know. 

01:05:56 Developer 

Lizards and snakes and fish that people collect and then they can do 3D scans of these either specimens from, you know, captured and then preserved, or else you know archaeological or you know fossil specimens. So anyway they however they get them, they say. 

01:06:13 Developer 

And them and they tend to be. You know, maybe like a stack of JPEG files or they have some other kind of data type. 

01:06:20 Developer 

So we did specifically design some of our interfaces to facilitate that kind of analysis, make it easier for people to, you know, downsample as part of their load process. 

01:06:33 Developer 

So sometimes you mean just too large to fit in their memory, and so we do. We do a fair amount of that kind of stuff and we do it usually in the context of these custom module installations or extensions. 

01:06:46 Developer 

But you know, I'm sure there's always more stuff we could be doing. 

01:06:51 Interviewer 

I'm curious that have you ever heard any feedbacks from the first time users? 

01:06:56 Interviewer 

Do they think the 3D slicer is good to use? Maybe easy to use or maybe hard to use? 

01:07:04 Developer 

Uhm, I think it must be hard to use. I know it must be hard to use. 

01:07:10 Developer 

I guess you know. Again, I'm probably biased a little bit, but I think of myself. You know, if I think of things that it's I that I think it's fair to compare with and I think of things like. 

01:07:22 Developer 

Like I don't know you in Microsoft Word or Photoshop or MATLAB or you know. 

01:07:27 Developer 

 

01:07:27 Developer 

 

01:07:31 Developer 

Blender, I don't know if you ever use blender, but you know things that do sophisticated things or. 

01:07:37 Developer 

CAD Cam software. I mean, all of them are hard. I don't think even word. It seems very confusing. Sometimes the feature you. 

01:07:43 Interviewer 

 

01:07:44 Developer 

Right, and so Slicer doesn't magically isn't magically a lot better than that, but I don't know if it's so much worse and and you know, and it's big program too, but you know 'cause. 

01:07:57 Developer 

It's like when you install it. It's maybe like 1.2 gigs, so there's even like just installing it takes some time, but then it was looking like Adobe Acrobat is 340 megabytes. 

01:08:06 Developer 

And I mean it like just shows documents, right? It's like not anything so. 

01:08:11 Developer 

So you know there's there's this there's, I think a legitimate question is sort of like well, if you tried to make it easier for the first time user, what should it be? 

01:08:21 Developer 

And you know, like how much of it were they is it just going to be a different version of the same stuff? And that's an open question for me. I mean, so are our. 

01:08:31 Developer 

Kind of strategy has not been to try to make. 

01:08:33 Developer 

 

01:08:34 Developer 

The general purpose tool, more easy to be general purpose, but more to make the specific tasks easier, so that's why you know we have a slicer morph which is for morphology. 

01:08:47 Developer 

We have a Astro for astronomy. We have these different ones and in this commercialization process I was telling you about. 

01:08:55 Developer 

They the end product often doesn't even look like slicer at all, so it's really just got like 3 buttons and a custom look and. 

01:08:59 

 

01:09:03 Developer 

Feel and so you know. Then it's much more obvious so there's only like one thing I can do. I can load a patient well and I do that and so so I think that's probably what we'll continue to do. 

01:09:15 Developer 

And and frankly, the way it works and because we have a number of these is often we'll have like this customized streamlined. 

01:09:23 Developer 

Front end and then you'll get to, uh, you know, and it'll kind of walk you through what you're supposed to do, but for the, you know, sophisticated user. 

01:09:32 Developer 

There's a button at the bottom that says switch back into regular slicer mode, and then you get the data tree and you can look at turn on debugging features and you can do all kinds of. 

01:09:41 Developer 

Stuff, so I think that's probably the way we'll continue to develop. 

01:09:46 Interviewer 

Yeah, I think that sounds like a good idea to me and you did give a give me some good examples I, I think that Adobe Photoshop is an example of very hard to use. 

01:09:58 Interviewer 

The other buttons functions. Yeah, next question is, uh? 

01:10:04 Interviewer 

Documentation, do you think the current documentation can already clearly convey all necessary knowledge to the users? 

01:10:14 Developer 

Oh, I'm sure not. I'm sure not. I mean, there's a lot of a lot more documentation that should be written, and if it's more screenshots and so forth, it should be added for sure. 

01:10:23 Developer 

But I think we've reached a kind of a plateau where where the core things, or at least mentioned people often follow up with questions and so. 

01:10:34 Developer 

It's to the point where what I'd really like, and I don't know whether we'll get there is there is always going to be people who there will be people who do not read the instructions. 

01:10:43 Developer 

No matter what you know they, but they will ask a question and I think it's to the point now where users are helping each other by linking to the documentation and pointing to previous. 

01:10:54 Developer 

Answers on the discourse forum. I think it's a it's it's that's a challenge I would like to see a way to get over is how to. 

01:11:02 Developer 

How to kind of like? 

01:11:05 Developer 

That's the right word for it. Sort of triage. I think a little bit the questions, because right now obviously the experts can answer all the questions, or you know they're the best suited to answer any other questions. But there are other questions where the expertise is more broad. You know, like lots of people could. 

01:11:22 Developer 

Answer, But they tend not to, because maybe they're not 100% sure. Or maybe they're like waiting for somebody else to answer, so I wish I. 

01:11:31 Developer 

I don't know if that's a technical feature of the forum software or just a policy that we should try to impose, but you know, I mean, I guess maybe. 

01:11:42 Developer 

As an example, it is a little bit. 

01:11:45 Developer 

You know it's kind of for indirect reasons, but if you think about like slicer.cn for example, right like there, I think you I know you have Chinese speaking experts who help each other out and sometimes they will come and ask. 

01:11:50 Developer 

 

01:11:50 Developer 

 

01:11:59 Developer 

You know a lot of the guys we know speak English and you know go back and forth and you know. But but there there's. 

01:12:06 Developer 

Kind of like. Obviously they're not waiting for they're going to wait for me to answer in Chinese. They're going to wait for quite a while, but but you know the the same sort of thing doesn't happen in the English language for him because. 

01:12:12 Interviewer 

 

01:12:18 Developer 

You know they're kind of like is Oh well, you know they're the experts are going to answer, so the experts just we'll just wait for them to jump in. 

01:12:27 Developer 

Don't try to. You know other people don't necessarily jump right in to answer, so that would that's something that it's me. 

01:12:35 Developer 

It's just kind of as we're discussing it. It kind of reminds me that that's something that I wish there was a. 

01:12:40 Developer 

A good solution for 'cause I think you know how it is. Sometimes people will even write a personal message to a friend to ask a question that they don't really feel comfortable asking on the forum and the friend will then be in the position of trying to be the expert, even though if they were on the form they wouldn't have tried to answer either so. 

01:12:56 

 

01:12:56 Developer 

There's it's an interesting style of communication thing that that we probably should keep thinking about. How to improve. 

01:13:04 Interviewer 

Yeah, I think this this raises 1 interesting question. 

01:13:10 Interviewer 

Do you think, uh, at least I'm not asking you, just let you know this question. Do you think the? 

01:13:16 Interviewer 

The Forum discussion is one kind of documentation, so maybe there is no answer, sure. 

01:13:23 Developer 

Oh yeah, sure, no. We often refer people to previous discussions to answer their questions. The other thing that I started doing informally and it did work the last time I tried it, so I might try it out. 

01:13:36 Developer 

Again, if somebody posted a question to the forum and they didn't get an answer right away and so they emailed me directly. 

01:13:44 Developer 

And I said, well, you know, the guy who answered the question. Yeah, he started answering and then he stopped and it was a few days. I said he, probably, you know, didn't quite. 

01:13:53 Developer 

Have time to finish answering or whatever you know I said, but what you could do is you could offer to write, you know to say hey if you help me I I will take your answer and write documentation based on your answer and contribute it and I think that's now technically an interesting little hook because. 

01:14:11 

 

01:14:12 Developer 

Is the discourse forum we use is markdown and so you can actually draft your markdown. You know pretty much in final form and then it's not that much different than the markdown for the read the docs so you can almost take the discourse forum post directly into a pull request to the read the docs and it's. 

01:14:12 Developer 

 

01:14:12 Developer 

 

01:14:31 Developer 

You know it worked pretty well in that case that the person who wanted to know the answer to the question was willing to write it up in the form of documentation. And so we'll we'll see if we can get more mileage out of that approach. 

01:14:31 Developer 

Know it worked pretty well in that case that the person who wanted to know the answer to the question was willing to write it up in the form of documentation. And so we'll we'll see if we can get more mileage out of that approach. 

01:14:41 

 

01:14:45 Interviewer 

Yeah, thanks last question finally last ones. Do you have any concern that your computational results won't be reproducible in the future? 

01:14:59 Developer 

Yes, we're very much concerned about that, and it's not just the software, but it's also the data and the process that people went through. So we're pretty adamant that people. 

01:15:14 Developer 

You know, practice good academic you know processes so you know. We think it's very important when people describe their methods for achieving a computational result that they you know, make the data that they used available and clearly document which versions or what. Maybe provide checksums of the data. 

01:15:34 Developer 

Point to the archives that they use for it, but also we're very, you know, skeptical of closed source software publications. 

01:15:43 Developer 

I mean, there's sort of like the almost meaningless. In my mind, you know, and so you know we're very, very. 

01:15:50 Developer 

 

01:15:50 Developer 

 

01:15:53 Developer 

Fastidious about publishing our exact versions and making sure that that's all available and we also, you know, have these regression tests which we think are very important, and when we you know our template for creating a new module that you might use is the you know kind of core of some custom computation includes. 

01:16:12 Developer 

The testing infrastructure as part of the template. 

01:16:16 Developer 

So hopefully that allows people to say OK, here's now the way exact way that I computed this. 

01:16:22 Developer 

 

01:16:23 Developer 

And and we also have a dockerized version of the slice of the software that we produce regularly, so people can you know at least have that level of slicer is pretty well insulated from the environment like it brings along. 

01:16:36 Developer 

One of the reasons it's so big is that it brings along its own copies of, you know, the exact versions of all the dependencies. 

01:16:43 Developer 

That it requires, so it's it's very unusual for people to have some of the more common sources of non reproducibility where two different versions of some. 

01:16:56 Developer 

Or mathematical library or used or something like that. But you know, there's always the CPU variability. Maybe there's other things that creep in over time, so you know. 

01:17:07 Developer 

It's something that requires constant vigilance. There are certainly methodologies that we try to follow to make sure that you know people can rely on the data that they get. 

01:17:20 Interviewer 

Yeah, the regression test tests you talked about. Did you test on different platforms? 

01:17:27 Developer 

Yeah, we run them every every night on Mac, Windows and Linux. We run the same test. 

01:17:30 Developer 

Yes, on all of them. 

01:17:30 Developer 

All of them. 

01:17:32 Interviewer 

OK, thank you very much. I think those were my all of my questions and to be honest your answer. 

01:17:40 Interviewer 

Those are very beneficial not only to my study, but also to my future engineering career. I learned a lot from your what you're talking about. 

01:17:51 Developer 

Well, I'm glad I'm it's taken me a long time to figure all this stuff out so I'm glad I can. 

01:17:55 Developer 

I can help you out with it 'cause you know some some I can go back and kick myself. 

01:18:00 Developer 

Over some of the things that I did that I shouldn't have should have thought through before I did him. 

01:18:07 Interviewer 

OK, I'm going to. 

01:18:08 Interviewer 

Right? 

01:18:08 Interviewer 
