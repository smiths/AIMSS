WEBVTT

1
00:00:02.760 --> 00:00:03.030
Interviewer: yeah.

2
00:00:04.319 --> 00:00:08.550
Interviewer: All right, perhaps we can just go ahead to to our questions to the interview.

3
00:00:10.080 --> 00:00:17.670
Interviewer: First of all, perhaps you can give us a short introduction about yourself, such as your current position or title and the race.

4
00:00:18.810 --> 00:00:29.040
Developer: So, my name is Chris Jordan and i'm the endowed chair for neural imaging your University of South Carolina and I hold a PhD in experimental psychology.

5
00:00:31.890 --> 00:00:43.170
Interviewer: Okay, thank you, our next question is about your relationship with yourself over so please give us some direction about your relationship your contribution to the software.

6
00:00:44.400 --> 00:00:49.110
Developer: So I created it and i'm the lead developer for the software.

7
00:00:52.530 --> 00:00:56.790
Interviewer: Oh okay that's really brave crew, please give us maybe some more details.

8
00:00:57.390 --> 00:00:59.670
Interviewer: So what's your responsibility.

9
00:01:00.240 --> 00:01:04.830
Developer: So I think I take care of answering people's users questions.

10
00:01:04.920 --> 00:01:08.760
Developer: yeah i'm upgrading adding new features to it.

11
00:01:10.470 --> 00:01:24.180
Developer: And also helping see if some of the features can be added into other tools that are similar so rather than just trying to work on my own tool when I see other tools that I could leverage some of the tricks that i'm using I try to help the other teams.

12
00:01:24.180 --> 00:01:27.060
Developer: To so I see it is pretty organic.

13
00:01:27.600 --> 00:01:27.930
yeah.

14
00:01:29.910 --> 00:01:38.520
Interviewer: Okay, one other question actually how how How should I pronounce The SOFA where is it i'm are I crow yeah.

15
00:01:39.840 --> 00:01:41.940
Developer: I pronounce it micro GL.

16
00:01:42.210 --> 00:01:44.490
Developer: Macro give you the history of it so with this.

17
00:01:44.760 --> 00:01:48.990
Developer: Project started in 1998.

18
00:01:49.380 --> 00:02:04.590
Developer: yeah and at that time, in order to do, I was at the University of Cambridge working on a postdoctoral fellowship and we were trying to draw lesions from patients and the software, we used was from the Mayo clinic and it was called analyze.

19
00:02:04.920 --> 00:02:07.800
Developer: Okay, and at that time analyze only worked on.

20
00:02:08.010 --> 00:02:15.480
Developer: workstations from sun Microsystems or from silicon graphics.

21
00:02:15.720 --> 00:02:16.470
Developer: yeah and.

22
00:02:16.830 --> 00:02:21.810
Developer: The radiologist we were working with you define lesions died very rapidly.

23
00:02:22.590 --> 00:02:39.930
Developer: from cancer, so he had pancreatic cancer and he died and a new radiologist offered to help us out and drawing lesions on patient scans the location of brain injury, which was our research, study, but the whole University of Cambridge only had one copy of analyze.

24
00:02:40.140 --> 00:02:41.520
Developer: Okay, because that copy.

25
00:02:41.850 --> 00:02:42.540
Developer: cost us.

26
00:02:43.740 --> 00:02:49.470
Developer: 6000 British pounds, which was about 10,000 US dollars per year per copy.

27
00:02:49.770 --> 00:02:50.940
Developer: So the whole university.

28
00:02:50.940 --> 00:02:53.970
Developer: had one copy of the software and therefore.

29
00:02:54.900 --> 00:03:02.430
Developer: If I wanted to use it with this radiologist no one else that Cambridge University could use it so i'd have to pick up the phone and say to Adrian oh and.

30
00:03:02.670 --> 00:03:12.720
Developer: Today i'm going to use the software, I would call Sophie Scott today i'm going to use analyze and because the software only worked on these expensive and cumbersome workstations.

31
00:03:13.260 --> 00:03:25.470
Developer: The radiologist who took over was very frustrated with it, he found that just working on a son workstation was very unfamiliar to them, and he wanted software he could use on his personal computer.

32
00:03:25.740 --> 00:03:25.980
Interviewer: yeah.

33
00:03:26.040 --> 00:03:31.830
Developer: And in Britain, you would pronounce as in America, we would say a windows computer or PC.

34
00:03:32.130 --> 00:03:39.540
Developer: yeah and in Britain at that time, particularly for older people who grew up you referred to a personal computer as micro so.

35
00:03:39.600 --> 00:03:40.890
Interviewer: He would always say to me.

36
00:03:41.040 --> 00:03:44.880
Developer: I want to I want software, I can use on my micro.

37
00:03:45.420 --> 00:03:59.340
Developer: Okay, so I got it was so hard for me to teach them how to use this Congress some software that we had one coffee that I told my supervisor I said I think over a weekend I can make simple software that will work on this micro.

38
00:04:00.210 --> 00:04:00.870
Developer: And so.

39
00:04:01.230 --> 00:04:06.930
Developer: The name MRI crow is designed designed to sound like micro.

40
00:04:07.230 --> 00:04:07.980
Developer: Micro and.

41
00:04:08.040 --> 00:04:21.990
Developer: Okay, and so that was the origin of the name for it Matthew Brett he was also at the who was very witty used to say at the time, great software terrible name that was one of his.

42
00:04:22.890 --> 00:04:29.460
Developer: things he would say about it, but it was really designed for one person, and that was a fellow who is close to retirement age.

43
00:04:30.090 --> 00:04:36.060
Developer: Who wasn't familiar with working with computers and wanted something to work on as micro there was never any expectation that this would become.

44
00:04:36.510 --> 00:04:47.760
Developer: A software that would you be very used very popular and over the times as back when I wrote it computers my micro had 20 megabytes of Ram.

45
00:04:48.390 --> 00:04:50.940
Developer: And the MRI scans we reviewed it using.

46
00:04:51.030 --> 00:04:56.460
Developer: Each MRI scan required 16 megabytes so there was a very small.

47
00:04:56.460 --> 00:05:02.670
Developer: Space if you think the operating system needed some space there I had it right everything to be extremely lean.

48
00:05:03.240 --> 00:05:04.740
Developer: yeah run, so the regional.

49
00:05:04.860 --> 00:05:22.620
Developer: Micro software was very simple and it ran on a very simple computer and then within the next between 1999 and 2005 Ram became much cheaper and computers had a lot more Ram so the next generation was called it right cron.

50
00:05:23.010 --> 00:05:32.100
Developer: And it took into account that our Community had developed a new imaging format called nifty image format, and so it was micro for nifty was micron.

51
00:05:32.700 --> 00:05:33.000
Interviewer: yeah.

52
00:05:33.090 --> 00:05:37.920
Developer: And then the next generation came that as computer graphics cards.

53
00:05:38.010 --> 00:05:42.690
Developer: Particularly after 2000 around 2005 they became much more common.

54
00:05:43.050 --> 00:05:53.670
Developer: And they had shaders built into them, and so the idea was to use the 3D textures that were built into the emerging graphics cards that used opengl so.

55
00:05:53.850 --> 00:05:55.290
Interviewer: Micro GL okay.

56
00:05:55.380 --> 00:06:04.740
Developer: Is the extension and that's one reason why you can find that in fact my top download tends to be right cron you can still use on a computer that doesn't have a graphics card.

57
00:06:04.950 --> 00:06:06.330
Developer: It doesn't require that.

58
00:06:07.680 --> 00:06:12.480
Developer: But that's kind of the origin of the name and how you pronounce it is I don't care how you pronounce.

59
00:06:12.480 --> 00:06:22.230
Developer: It however you want, but I always pronounce it almost like micro because that was the origin story for the software, it was I never planned to be a.

60
00:06:23.790 --> 00:06:28.530
Developer: plan to have many people use it, and I think it's popular because it's very simple.

61
00:06:28.860 --> 00:06:33.000
Developer: And it's very simple, because it was designed for a 63 year old radiologist.

62
00:06:33.660 --> 00:06:34.530
Interviewer: And yeah that was.

63
00:06:34.590 --> 00:06:35.580
Developer: That was the plan.

64
00:06:36.030 --> 00:06:40.620
Interviewer: that's actually one point I was going to point out, if you were designing.

65
00:06:41.700 --> 00:06:51.240
Interviewer: For for user which may be a senior user usability of the SOFA we're must be something you had to consider yeah.

66
00:06:51.660 --> 00:07:05.580
Developer: yeah it was very and lots of people i've always wanted to add more features they always do, but I would say there's other tools you look at a tool that I contribute to you that's that's extremely well done from Oxford group ssl is.

67
00:07:05.850 --> 00:07:10.230
Developer: I think it has incredible abilities and talents and does a lot of stuff my software doesn't.

68
00:07:10.740 --> 00:07:19.590
Developer: But I do think there is a natural trade off with usability and so i've always thought there's sort of a niche that I feel that is elegant simple minimal.

69
00:07:20.040 --> 00:07:39.000
Interviewer: yeah Our question is, do we actually have a question about usability, but perhaps we can talk about more details and I hit her one more question because of my curiosity I how did you install how did you diss distribute to the software where did you use that was awesome name softly disk.

70
00:07:41.310 --> 00:07:47.310
Developer: So bear from the very inception, we actually distributed it on the on the web is a zip.

71
00:07:47.310 --> 00:07:48.150
Interviewer: file okay.

72
00:07:48.180 --> 00:07:53.580
Developer: But the original version, it was very important that it would fit on a floppy disk so.

73
00:07:53.640 --> 00:07:54.210
Developer: i'm going to.

74
00:07:54.630 --> 00:07:57.150
Developer: Work on it on 20 megabytes of Ram.

75
00:07:57.450 --> 00:07:57.720
Interviewer: But I.

76
00:07:57.750 --> 00:08:05.820
Developer: had to fit within the 1.4 megabytes of space on a floppy disk so that was sort of the constraints that we worked with and so.

77
00:08:06.120 --> 00:08:07.830
Interviewer: yeah yeah it was always.

78
00:08:07.890 --> 00:08:11.400
Interviewer: Pretty small because I remember my first computer.

79
00:08:12.900 --> 00:08:26.580
Interviewer: was able to use that floppy disk and so for for some maybe bigger documents or bigger software, I had to catch the so far into several different packages next door to me or the.

80
00:08:27.630 --> 00:08:34.530
Interviewer: floppy disk yeah all right Okay, thank you for sharing this interesting story My next question is about.

81
00:08:35.940 --> 00:08:51.930
Interviewer: Your length of time you're involved with the software, but since you told me that you started from 1998 right and yeah I suppose you already answered this because you unless there's anything else you want to add okay.

82
00:08:53.790 --> 00:08:54.150
Interviewer: All right.

83
00:08:55.200 --> 00:08:59.910
Interviewer: next question about your team how large is the Development Group.

84
00:09:01.230 --> 00:09:10.290
Developer: So I would say, you could split my software into two components and one is the visualization component, and that is a team of one that's just me.

85
00:09:10.530 --> 00:09:12.750
Developer: it's my software night I develop it.

86
00:09:12.990 --> 00:09:28.320
Developer: And then you could say that image conversion component which is die compton nifty DCM to next I lead that team and it's a it's a it's a separate executable that that my visualization software just allows you to use it graphically, but you can run it from a command line.

87
00:09:28.710 --> 00:09:29.850
Developer: According to.

88
00:09:30.090 --> 00:09:41.370
Developer: Get hub there's 26 contributors to DCM to next but i'm definitely the lead, but the nice thing with working with software is you can always find if you there's something you can't do.

89
00:09:41.670 --> 00:09:49.680
Developer: You can find someone else in the world who has a skill that you don't have so what I would say is even though i'm the prime developer for my software, when I get a problem.

90
00:09:50.160 --> 00:10:01.920
Developer: I usually go to Google and try to find someone who, for them, what I think is a problem is something they do all the time, so, for example with I use some of my users use MacIntosh computers.

91
00:10:02.190 --> 00:10:04.770
Developer: And they've tried to move from opengl to a new.

92
00:10:05.190 --> 00:10:11.970
Developer: Framework called metal and so I found someone who was working in Thailand, who had a lot of experience with that and he helped me.

93
00:10:12.390 --> 00:10:22.110
Developer: develop the metal interface, and likewise when I wanted to do some advanced clipping I was able to find a artist who knew a lot about blender and jail.

94
00:10:22.800 --> 00:10:32.520
Developer: The opengl shader language Martin lapidus who helped helped me create that and we work together so i've been say I am the lead developer pretty much everything I do.

95
00:10:34.410 --> 00:10:45.090
Developer: I understand, but I also know my weaknesses and there's other people along the way i've contacted and said how can I achieve this or i'll look at other Open Source tools and try to work out how they achieve the.

96
00:10:45.630 --> 00:10:52.380
Developer: cheapest solution, but I would say it's a development group of one my students like postdocs don't work on the software.

97
00:10:52.860 --> 00:11:05.490
Interviewer: Okay, so from my understanding is it your sales, nobody from the compute Community actually actually works on this software, for a very long term.

98
00:11:06.030 --> 00:11:06.630
Interviewer: that's really.

99
00:11:06.780 --> 00:11:16.710
Interviewer: Maybe they deliver some contributions but maybe just only for a certain period of time yeah okay thanks My next question is.

100
00:11:18.570 --> 00:11:31.950
Interviewer: about the process of accepting new contributions to have a defined process for accepting new contributions into your team according to your description, it sounds like that.

101
00:11:33.150 --> 00:11:46.680
Interviewer: you're on it, you already answered a part of the question, such that there are contributions from the github you also go ahead and try to find help from some spare specific.

102
00:11:48.300 --> 00:11:49.200
Interviewer: professionals.

103
00:11:50.580 --> 00:11:51.150
Interviewer: Am I right.

104
00:11:51.810 --> 00:11:59.520
Developer: Yes, and let's see i'll just put this into the chat box, but also show you, for example, you can look at my pull requests and you can see how.

105
00:11:59.820 --> 00:12:03.960
Developer: Different people have submitted pull request to my software and so that gives you.

106
00:12:04.110 --> 00:12:08.160
Developer: Quite I actually have to say I found get have a fantastic way of.

107
00:12:09.330 --> 00:12:13.860
Developer: Being able to track changes identify regressing regressions.

108
00:12:15.030 --> 00:12:21.630
Developer: Continuous checks for any problems happening so I definitely try to leverage all those features, it makes my life, a lot easier.

109
00:12:22.230 --> 00:12:22.620
Okay.

110
00:12:23.760 --> 00:12:33.300
Interviewer: it's a follow up question did you start the project directly on github before it had the where did you hosted and how did you manage this.

111
00:12:33.330 --> 00:12:41.550
Developer: episode before so before get hub, there was a long time that it was just we were just share the execute of bowls okay.

112
00:12:41.760 --> 00:12:58.410
Developer: From a website and then the, the next step out between doing that the other big website that I should probably point out and and is called nitric and i'm going to put a link here, but I don't know if you can see everything I can see, because i'm a administrator, but I can also.

113
00:12:58.410 --> 00:13:01.680
Developer: Since you're doing a recording I can kind of try to describe this but.

114
00:13:01.920 --> 00:13:02.070
yeah.

115
00:13:03.090 --> 00:13:05.910
Developer: Let me put this into the chat box so.

116
00:13:07.260 --> 00:13:22.530
Developer: You can go to my different projects, and you can see, maybe i'll send you another one so nitric is for our field of neural imaging it's a way that users can they they have a forum based system where users can ask questions.

117
00:13:22.800 --> 00:13:28.110
Developer: They have a software distribution system where you can share executable files, as well as code.

118
00:13:29.760 --> 00:13:38.820
Developer: And they do have some linking with SDN and they also help us track how popular saw where is and allow users to rate different software and so you can.

119
00:13:39.120 --> 00:13:49.290
Developer: You can see that, right now, since its inception, they claim that my software has been downloaded microns been downloaded 690 3000 times i'm.

120
00:13:49.380 --> 00:13:50.490
Interviewer: RON cat but plan.

121
00:13:51.120 --> 00:13:53.670
Developer: But then, and then micro GL is.

122
00:13:53.670 --> 00:14:04.920
Developer: 73,507 i'm sure, a lot of those are just students who are interested i'm sure, a lot of those are people outside of the field, but at least i'm able to see where people are downloading it.

123
00:14:05.670 --> 00:14:11.010
Developer: If there's problems, having downloads what proportion of people who are using Linux vs.

124
00:14:11.700 --> 00:14:23.250
Developer: MAC versus windows computers so nitric is is specific to minor imaging community and and I used it for a long time, is the only thing instead of get ahead.

125
00:14:23.580 --> 00:14:32.040
Developer: And now I sort of us get out for developers and nitric for Community users, I would say, I have that differential of how I see the tools.

126
00:14:32.400 --> 00:14:42.450
Interviewer: Okay, on the Forum of nitric did you share your source code or to Johnny took these guys with their their users about the features.

127
00:14:43.200 --> 00:14:46.440
Developer: I shared the source code so i've always believed in.

128
00:14:49.950 --> 00:15:02.610
Developer: that the public pays for my research and also, I believe that research, the important thing about research is the word re in it that research, the whole idea of the scientific method is about replication.

129
00:15:03.000 --> 00:15:14.220
Developer: And people should be able to replicate your study, they should be able to understand how it works, and so I believe, while I think there's a perfect good rationale for having professional software I think it's scientists.

130
00:15:14.820 --> 00:15:17.430
Developer: We should aspire to have open source software people.

131
00:15:17.430 --> 00:15:20.520
Developer: People can understand the algorithms were using so i've always.

132
00:15:21.840 --> 00:15:30.450
Developer: Provided the source code for anyone who wants it and get out this just made it much easier to do that and so people can see the changes of how different versions of changed.

133
00:15:30.870 --> 00:15:38.460
Interviewer: Okay, so even before github you already received contributions to your source code from the Community, am I right.

134
00:15:39.000 --> 00:15:41.880
Interviewer: Yes, from the Forum of nitric.

135
00:15:42.270 --> 00:15:46.740
Developer: yeah and so, and I can I can all add it, I mean other people from this transcript and always.

136
00:15:47.100 --> 00:15:52.950
Developer: Point but i'll just i'll give you an example of how you can go to the nitric has a user form, and one thing I would say is.

137
00:15:53.280 --> 00:16:04.530
Developer: On the github forum requires people to sign up for you can you can always ask question on github github requires people to sign up and get happened it's it's kind of more of a developer thing and so.

138
00:16:04.620 --> 00:16:10.470
Developer: yeah I think within our Community, having just a standard easy for them.

139
00:16:10.860 --> 00:16:11.910
Developer: is a good thing.

140
00:16:12.210 --> 00:16:26.430
Developer: And then so i'll send you this, this is a link to that the forum that is there and then there was also and for British software like ssl and SPF there's also another forum called just mail.

141
00:16:27.030 --> 00:16:33.540
Developer: And when I was a British when I worked in Britain, I had an active just mail site, so it paid played a good.

142
00:16:34.590 --> 00:16:47.610
Developer: role and allowing developers to contribute, unfortunately, just mail operates exclusively for British scientist So when I left Britain and became a US by did research scientist they told me.

143
00:16:48.630 --> 00:16:55.950
Developer: You aren't eligible to LEADER I just mail forum, and so I just moved everything to nitric so that it was that evolution.

144
00:16:56.790 --> 00:17:10.530
Developer: You know it's it's I understand it's hard for them to to keep a big platform like that running I I respect that, but that was the history when I was a British scientist, I use just mail when I became American scientist, I moved to my trick.

145
00:17:11.160 --> 00:17:20.550
Interviewer: yeah I opened early ink on the floor, and I can see that there, there are some top here here's topics, from this year and even when from this month.

146
00:17:21.180 --> 00:17:22.170
Interviewer: yeah I think is.

147
00:17:24.660 --> 00:17:27.240
Interviewer: An active Community.

148
00:17:27.960 --> 00:17:36.000
Developer: yeah there's I went say there's a lot of ssl and SPF and acne are the three main tools my community and they each had their own forums and.

149
00:17:36.330 --> 00:17:45.570
Developer: A lot of times you know once every couple of weeks, I will check their forums to see a lot of people have interaction questions with my software my software since it's.

150
00:17:45.810 --> 00:18:01.260
Developer: not specific to any one of those tools that can be used across the different tools and a lot of times that's another place where all interact with users there and a former PhD student of mine now works at Oxford with the EPA cell group so he's embedded with them so.

151
00:18:02.370 --> 00:18:06.540
Developer: You know, there are other forums where people who are using those dedicated tools.

152
00:18:06.810 --> 00:18:11.370
Developer: will interact with my tool and so that's another place where people will ask questions.

153
00:18:12.120 --> 00:18:12.420
yeah.

154
00:18:13.800 --> 00:18:31.320
Interviewer: Okay back to the contributions about audience contributors, no matter they from the github or maybe before it had from nitric do you have any idea about their backgrounds, what are the backgrounds of these contributors.

155
00:18:31.680 --> 00:18:40.890
Developer: Well, I would say, and it's much easier to track with github, so I would say, if you go to let's just see if I, I would say, if you go to the contributors page.

156
00:18:40.980 --> 00:18:41.640
Developer: Yes, i'm.

157
00:18:41.730 --> 00:18:52.890
Developer: A mom if I have daikon of the github you can go if you go to this page, you can see these pages, and you can see, the different people i've worked with, and so, for example.

158
00:18:53.310 --> 00:19:03.180
Developer: I crisco goals or less key really helped me he created a new format called bids that allows us scientists to store a lot of date metadata.

159
00:19:03.480 --> 00:19:10.530
Developer: which was really influential and he pushed that forward and he and I worked very closely, but you can see that we work very closely in 2016.

160
00:19:10.920 --> 00:19:16.980
Developer: And then he completed that while I was at Stanford university and went on to work for Google and so now we still communicate.

161
00:19:17.730 --> 00:19:29.100
Developer: Once every now and then, but he doesn't have to make any regular contributions and so we're learning fe who's in China, I sorry he's a Chinese fellow who's in Germany.

162
00:19:29.400 --> 00:19:33.270
Developer: But you can see, if you look at the contributions he's made sporadic but very regular.

163
00:19:33.450 --> 00:19:44.010
Developer: contributions and he's a genius at using simic and so a lot of the continuous testing of regression testing of the software of automatically building it.

164
00:19:45.300 --> 00:19:51.570
Developer: Releasing it he really has as helped my software, but he's helped lots of different projects so.

165
00:19:51.900 --> 00:19:54.360
Developer: Even though, if you look at the timeline it looks like only.

166
00:19:54.540 --> 00:20:02.100
Developer: very small but regular contributions, the truth is, I don't know, anyone who could do the work that he's done and he's one of these people who.

167
00:20:02.310 --> 00:20:15.750
Developer: he's an absolute genius in it and, like so likewise, you can see these different individuals who some people just have one kind of specific project that they contribute to and then they're done and other people that that I have a regular contributors.

168
00:20:17.910 --> 00:20:24.810
Interviewer: yeah sounds good sorry I was taking the contributors yeah thanks thanks for the answer.

169
00:20:25.170 --> 00:20:29.190
Developer: And yeah it's nice isn't it how github allows you to quantify this and look at this, you can.

170
00:20:29.190 --> 00:20:35.670
Developer: actually look at contributions, over time, and it is a it is, I have to say good habits are remarkable tool, from my perspective.

171
00:20:36.120 --> 00:20:38.610
Interviewer: I agree with you, I agree with you, I told it with.

172
00:20:39.870 --> 00:20:47.910
Interviewer: several different several developers over several different projects, they told me that they they they all told me that they like github.

173
00:20:48.690 --> 00:21:07.140
Interviewer: Some of the projects were host on source forge or bit back hit but eventually they decided to transfer from other other places to get have yeah and myself, I also use github I like I really like the idea, then immediately very real.

174
00:21:07.800 --> 00:21:10.920
Developer: yeah it's it's it's really well done, you got to give me.

175
00:21:12.030 --> 00:21:35.910
Interviewer: yeah let me, to be honest, to be honest, not only the hope the Open Source part but also the enterprise part I was an intern in a bank of Canada for eight months I worked as a cloud developer basically a software engineer, so our company used the enterprise version of github.

176
00:21:37.410 --> 00:21:40.260
Interviewer: Generally speaking, they could have much.

177
00:21:40.380 --> 00:21:41.490
Interviewer: Right inside of the company.

178
00:21:41.970 --> 00:21:44.370
Interviewer: And it's really convenient we.

179
00:21:44.400 --> 00:21:45.690
Developer: Can and it's remarkable as.

180
00:21:45.720 --> 00:21:48.540
Developer: People who work for free projects like me.

181
00:21:48.810 --> 00:21:50.280
Developer: it's amazing how they've kept it.

182
00:21:50.310 --> 00:21:57.210
Developer: Free and so and it's obviously by having a good enterprise system, but it is, it is, I have to say is that.

183
00:21:57.510 --> 00:22:12.510
Developer: A free tool that's professionally developed as long as you're doing Open Source projects, from my perspective, it's a terrific tool and it's Nice as alternatives like get lab or other things that we know that we're still using the the backbone of what we're doing is.

184
00:22:12.570 --> 00:22:14.460
Developer: is open source, so we can't get.

185
00:22:14.730 --> 00:22:25.980
Developer: Well, I always worry that will they'll slowly make a tool, so you have to choose a proprietary version but right now I think that's unlikely to happen with github where it's creating a good template that.

186
00:22:26.550 --> 00:22:27.960
Developer: works very well and.

187
00:22:28.200 --> 00:22:36.810
Developer: There are alternatives, we could move to in the future, we are locked into one vendor, as I see it, they just happened to be my perspective, doing it the best right now.

188
00:22:37.260 --> 00:22:37.620
yeah.

189
00:22:38.940 --> 00:22:48.240
Interviewer: Okay My next question is about the number of users, what is your estimated number of users and how did you come up with the estimate.

190
00:22:48.660 --> 00:22:57.360
Developer: So what I think the best way to look at this as to if you go to Now let me see so I don't know if you as a user go to.

191
00:22:59.040 --> 00:23:03.450
Developer: The downloads page, let me just I don't know if you can click on the download stats.

192
00:23:03.450 --> 00:23:04.410
Interviewer: Yes, I just see.

193
00:23:04.440 --> 00:23:04.680
Interviewer: him.

194
00:23:04.710 --> 00:23:13.320
Developer: So if you do that, at the very bottom of that page the page i've just linked a nitric it'll allow you to create a at least, it will allow me to create.

195
00:23:14.550 --> 00:23:23.040
Developer: comma separate variable tab of how many downloads and who it's coming from where the country is that that's probably the best thing to estimate it and I think.

196
00:23:25.140 --> 00:23:31.080
Developer: I don't I I think it's very it's a very fuzzy number there's some people who just want to play with it.

197
00:23:31.470 --> 00:23:34.260
Developer: And there's some scientists who use it as a regular tool.

198
00:23:34.650 --> 00:23:44.850
Developer: And there's some people use it in instructions, so I I don't I don't have a really fixed number I it seems to be popular people ask me questions about it.

199
00:23:45.570 --> 00:23:46.620
yeah yeah.

200
00:23:49.230 --> 00:23:56.430
Interviewer: yeah and and also for for some users, they may download multiple versions of the software so.

201
00:23:57.600 --> 00:24:01.050
Interviewer: Maybe maybe I can write it for 10 times 20 times yeah.

202
00:24:02.580 --> 00:24:03.330
Interviewer: and

203
00:24:05.100 --> 00:24:10.530
Developer: You could look at those download logs you can say how many unique users were there in the last year and I think you could.

204
00:24:11.280 --> 00:24:16.770
Developer: I don't know how they screen it by IP addresses or or anything but you probably could at least say.

205
00:24:17.370 --> 00:24:26.430
Developer: You could try to get a better estimate, but I don't know how you would quantify that and, to be honest, I have enough other things to do that I don't try to count users it's free software.

206
00:24:26.670 --> 00:24:33.360
Developer: If you use it to use for great if you use it and try it out and decided doesn't help you, with your tool, I understand it's free.

207
00:24:34.290 --> 00:24:48.540
Interviewer: yeah we we actually didn't we didn't expect to get very accurate numbers, or even any any answer, but I think you're the page you share to me if it actually gave us.

208
00:24:49.860 --> 00:24:57.270
Interviewer: More details when we nap details for us, we can see that different numbers for different versions.

209
00:24:57.600 --> 00:25:00.720
Interviewer: And 11 different numbers for different operating systems.

210
00:25:01.080 --> 00:25:01.410
Developer: Right.

211
00:25:01.650 --> 00:25:06.780
Developer: And then also you can see a boom bust cycle, like in the night is i'll be releasing the next version.

212
00:25:07.050 --> 00:25:20.040
Developer: yeah and there'll be a spike they used to it used to be a much nicer they've matrix is actually streamed streamline down a lot of their stuff but they used to have these beautiful interactive graphs that you could actually see you know you would see the.

213
00:25:20.340 --> 00:25:23.400
Developer: time of day, you could list by you can list day of week.

214
00:25:23.760 --> 00:25:29.520
Developer: And you can also have these longer term trends and that was very elegant you could actually see the boost.

215
00:25:29.850 --> 00:25:43.560
Developer: of a new version comes out and all of a sudden, so that would be another way you can kind of track active users have you could say there are a lot of active users, when a new post, here is a new software version, you can actually actively see how many people are downloading it.

216
00:25:44.400 --> 00:25:49.470
Interviewer: yeah he said overnight trekkies is there any other way for downloading the software.

217
00:25:50.340 --> 00:26:03.420
Developer: So you can download it also from I get hub so on github they have and i'll just set all i'll show you how it looks like if you wanted, if you go to github github has a stable releases page.

218
00:26:03.480 --> 00:26:10.440
Developer: yeah and so i'll put that in the link and then the other thing that I think instead of nitric that I think.

219
00:26:13.110 --> 00:26:25.080
Developer: Let me put this into the The other thing I would say is, if you go to the homepage of each project on github you'll see that I give a command line that you can run for curl you download it and users who have.

220
00:26:26.160 --> 00:26:37.020
Developer: debbie and based distributions of Linux can also install it with debbie and automatically, but I have to say, the debian.

221
00:26:38.130 --> 00:26:45.060
Developer: maintain owners tend to be a little behind the curve so it's often not the latest version and.

222
00:26:46.230 --> 00:26:52.140
Developer: One of the tricks is debbie has been trying to move away from using gk to to the new cutie five widgets that.

223
00:26:52.380 --> 00:27:00.750
Developer: which I support, but they don't haven't yet moved to the latest version like software so with the new release coming out with that might change but that's another reason, where.

224
00:27:01.050 --> 00:27:12.090
Developer: I think if you look at the metric downloads it's not a it's not the full sample because I think there are people who download the software with debbie and there's people who download it with github there's people who download it with curl.

225
00:27:13.290 --> 00:27:19.860
Developer: And in fact there's also a version of the software that's for MacIntosh users it's on the the APP store so so MacIntosh.

226
00:27:20.040 --> 00:27:22.110
Developer: Okay, has an apple store.

227
00:27:22.380 --> 00:27:27.060
Developer: that people can download the software from and it's also on the APP store that users can get a.

228
00:27:27.450 --> 00:27:39.750
Developer: streamlined version of the software from there to unfortunately apple has a lot of constraints they it's called that same boxing where tools aren't allowed to do a lot of advanced things with medical imaging formats like die calm.

229
00:27:40.080 --> 00:27:41.040
Developer: We have to be able to.

230
00:27:41.820 --> 00:27:48.870
Developer: Get files from outside the file system, so the version that I distribute through the APP store is necessarily limited by those constraints.

231
00:27:50.100 --> 00:27:51.300
Interviewer: Okay yeah.

232
00:27:52.920 --> 00:28:08.040
Interviewer: You talked about that you some of the users leave me on it downloaded the software, maybe take a look and somehow there they may use it to regularity, do you have any idea about the background about of the users may be based on your discussions.

233
00:28:08.520 --> 00:28:09.810
Interviewer: Users on the forum.

234
00:28:09.870 --> 00:28:11.280
Interviewer: Maybe you have some ideas.

235
00:28:11.880 --> 00:28:22.350
Developer: I think there's a whole range and I think you can see there's a lot of people who use it with publications and and it has a Python scripting language built in, so they can start learning how to do things.

236
00:28:23.580 --> 00:28:37.050
Developer: But the truth is a lot of people in science, we have so many complicated tools that we have to use, most of us with most of the tools, I it from my perspective, we don't realize all the features that are there.

237
00:28:37.110 --> 00:28:43.320
Developer: And we we use, you know we have so many different tools that I would say, most of my users.

238
00:28:44.280 --> 00:28:59.280
Developer: are not an ex they might be an expert on one and two tools in our field, out of the the 20 that there'll be using regularly, and I would say my senses most users of my software don't maybe use 10% of the features of my software.

239
00:28:59.490 --> 00:29:08.100
Developer: Right okay and and, and so I tried to make those and most visible features and I would say, you know a lot of people ask me why don't you do X, Y amp Z and it's like well.

240
00:29:09.360 --> 00:29:15.690
Developer: Ultimately it just ends up, making it the user interface much more daunting for that the average user that often less is more.

241
00:29:17.010 --> 00:29:24.000
Interviewer: Okay that's actually one another consideration for usability, but other details we can talk about that later.

242
00:29:25.980 --> 00:29:36.420
Interviewer: Alright next question is about you, your current development process currently, what are the most significant obstacles in your development process.

243
00:29:37.410 --> 00:29:50.040
Developer: Well, I think the biggest problem is trying to support different operating systems were windows and Linux and MacIntosh are all popular in my field.

244
00:29:50.370 --> 00:29:59.430
Developer: And some of the tools like you look at acne and ssl only run on unix based system so that means the Linux and MAC os but most scientists.

245
00:29:59.700 --> 00:30:07.560
Developer: Around the world, use windows and so, how do you create something that works across all interfaces and looks familiar to people and.

246
00:30:08.340 --> 00:30:17.460
Developer: So I would say that's the biggest obstacle and making a tool that works for a visualization tool I want something that if you move between different computers.

247
00:30:18.180 --> 00:30:26.190
Developer: It looks the same and it works, the same you can transfer your knowledge or if you're working with one type of computer and someone else works with a different type of computer.

248
00:30:26.790 --> 00:30:36.330
Developer: You can help I do want to say, the big change I think that's made my life easier and all of our lives easier, is the recent versions of windows have a windows subsystem for Linux.

249
00:30:36.600 --> 00:30:37.380
Developer: built in.

250
00:30:37.740 --> 00:30:40.410
Developer: And it really allows a lot more for windows users.

251
00:30:41.520 --> 00:30:49.830
Developer: To use unix based tools which is remarkable, but I still provide a unique natively compiled windows version.

252
00:30:50.160 --> 00:31:06.330
Developer: And so I would say i'm a scientist, first and foremost this tool, the development I do on it is largely to answer the questions I have, as a scientist and if other users, find it useful that's Okay, but my funding is to do my research, not to develop the software and so.

253
00:31:07.920 --> 00:31:16.170
Developer: that's a that's just a consideration that I have to take into account and I guess another example, so, for example, i'm talking with you to you with a brand new.

254
00:31:17.370 --> 00:31:26.340
Developer: MacIntosh computer that actually it cpu is much more similar to my iPhone than my previous MacIntosh it's apple's own and one chip and so.

255
00:31:26.400 --> 00:31:33.450
Developer: yeah I would say one thing with the development processes when you have a vendor who all of a sudden tries to change things so apple.

256
00:31:33.780 --> 00:31:45.930
Developer: I was able to get an apple developer transition kit last June or July, so I actually had a pre release apple computer that I could work with and get my software ready for the new hardware before it came out.

257
00:31:46.830 --> 00:31:57.720
Developer: But it certainly took a lot of my time that a lot of my tools were designed to work and really refined to work on Intel computers and using specific features of Intel and amd cpus so.

258
00:31:58.530 --> 00:32:07.110
Developer: tools like SSC and a VX and say vector tools really increase the the computation for a lot of mathematics and.

259
00:32:07.440 --> 00:32:20.190
Developer: So there were individual changes I had to make in mind software to try to make it perform well on these new things, so I would say that's the obstacle is is unfortunate in computer science The good news is things have changed a lot.

260
00:32:20.610 --> 00:32:25.320
Developer: The bad news is things have changed a lot, and when you're really a scientist who wants to have a stable tool.

261
00:32:25.710 --> 00:32:31.530
Developer: And that the the software environments are changing very rapidly it's a challenge.

262
00:32:32.370 --> 00:32:44.850
Interviewer: yeah I agree with you, I think the pros of further new Emma one chip is that if you make the software compatible with it, maybe it's really easy to make it available on high pass an iPhone.

263
00:32:45.570 --> 00:32:52.080
Developer: yeah I have to, I have to say I had the developer transition kit which was effectively in the old iPad.

264
00:32:53.250 --> 00:33:03.930
Developer: Put into a MAC mini and it was it was it was Okay, but the actual and when they released was phenomenal, and so they work out all the problems in the hardware.

265
00:33:03.990 --> 00:33:12.600
Developer: promise we opengl problems with specific tasks that MAC the MAC operating system used and they address that in the cpu and.

266
00:33:13.290 --> 00:33:19.770
Developer: it's I have to say i'm incredibly impressed with it, I have a computer that has no fan, and it will work all day.

267
00:33:20.160 --> 00:33:30.840
Developer: And so, even though I struggled over the summer I was frustrated that they've developed this new technology, I think we're all beneficiaries of this, I do think it won't just be apple I think with with qualcomm.

268
00:33:31.440 --> 00:33:32.910
Developer: Purchasing new via with.

269
00:33:33.870 --> 00:33:42.360
Developer: Ultra cpus going into servers I think it's one of the things i've been working with with the NIH team and develops acne is getting their tools to work on.

270
00:33:42.960 --> 00:33:59.580
Developer: These the arm cpus and like what I told him is it's not just right now it's apple laptops and minis that are have these arm cpus but, in the very rapidly the supercomputers at our university are going to be overrun with arm.

271
00:33:59.610 --> 00:34:01.440
Developer: Computers they really it's a it's a.

272
00:34:01.470 --> 00:34:04.230
Developer: Quiet the efficiency is just amazing.

273
00:34:04.560 --> 00:34:21.060
Interviewer: yeah yeah I i've always been using windows and micro sorry not micro chromebooks but after the release me one and MAC and i'm considering my and next up top is a man.

274
00:34:23.580 --> 00:34:31.140
Developer: Well, I think I think I think it'll happen through I think you know Microsoft already has a surface X if they just it's.

275
00:34:31.320 --> 00:34:39.510
Developer: The recent that there is a quantum leap happening with with trying to say, we can actually make some small changes with the new arm X one or other things.

276
00:34:39.870 --> 00:34:50.940
Developer: That really for scientists were really interested in floating point and historically mobile phones, have been much more interested in integers and it's the recent arm computers that they're now.

277
00:34:51.300 --> 00:34:57.240
Developer: have extremely competitive floating point performance and things like SPE or or with.

278
00:34:57.630 --> 00:35:09.870
Developer: With the M when they have a special unit called a mx that does matrix computations and the performance is very impressive I will send one little link here that just tries to demonstrate for my own field.

279
00:35:11.850 --> 00:35:19.980
Developer: How how remarkable this tool is so this is my own testing, but this is all day looking at the major tools in my field.

280
00:35:20.880 --> 00:35:30.270
Developer: Using this new arm chat where we look at I look at not only my own tools like micro but I look at I look at afternoon I look at ssl and I look at.

281
00:35:30.630 --> 00:35:44.040
Developer: SEM and I look at the performance of these different tools, using the M one versus my which takes 10 Watts and has no fan versus my 12 core and the computer and for for most tasks it's extremely competitive.

282
00:35:44.670 --> 00:35:45.000
yeah.

283
00:35:46.350 --> 00:35:51.630
Developer: But I also there you'll see I noticed the limitation, so if you do think about buying it, you may want to think very carefully, if some of those.

284
00:35:52.200 --> 00:36:05.610
Developer: limitations, particularly with our right now, it seems to be one of the big issues that our studio is going to be very hard to develop so there's there's going to be little point points pain points, right now, but I think the opportunity that the benefits are going to be pretty profound.

285
00:36:05.970 --> 00:36:12.540
Interviewer: yeah i'll go with you so back to this challenge and maybe future changes.

286
00:36:13.710 --> 00:36:20.220
Interviewer: There are so many different operating systems and there are from my personal point I think the force.

287
00:36:21.510 --> 00:36:31.200
Interviewer: operating systems we have been more and more for the recent future, so how might you change your development process to remove or reduce this obstacle.

288
00:36:32.070 --> 00:36:42.960
Developer: Well, and I want to say this is timely that you asked me this question because right now actually the person who started the athlete group who's one of the one of the most popular tools in my field he's actually retiring this year.

289
00:36:43.470 --> 00:36:47.910
Developer: And it's a question of how software that we've developed that we as users have become.

290
00:36:48.150 --> 00:36:57.120
Developer: dependent on how they survive the retirement of the people who develop them and what the legacy is going to be like, and particularly with tools, like my own.

291
00:36:57.480 --> 00:37:14.280
Developer: Where i'm the solo developer largely how do these tools survive so it's not just how do we survive it with changing operating systems, but how do we as a Community survive when a few people have been doing things so i'm sending a link to one of the my answers to this question so.

292
00:37:14.280 --> 00:37:15.210
Developer: This is a tool that.

293
00:37:15.420 --> 00:37:28.440
Developer: i've been developing called the view but i've been developing developing it with the ssl group and the basic ideas of this is to take the stuff that i've developed in opengl and metal and to bring it to web GL.

294
00:37:28.740 --> 00:37:29.670
Developer: And to bring it to.

295
00:37:30.270 --> 00:37:38.190
Developer: javascript interface, and it turns out that javascript is actually for a lot of computations we want to do it's not very efficient.

296
00:37:38.640 --> 00:37:38.910
Interviewer: But.

297
00:37:39.030 --> 00:37:48.900
Developer: With web GL we can harness the gpu of people's computers to do the computation for us, so we have to it's tricky to do you have to be clever.

298
00:37:49.290 --> 00:37:57.210
Developer: about it, but since i've spent a lot of time kind of working on I knew where the pain points are a visualization and the tricks that we do, and so.

299
00:37:58.170 --> 00:38:09.180
Developer: What i've been trying to do with this project and it's still developing, but the idea is now if we can get the core of this all to work on the graphics card of the user and it's all happening in javascript through the web.

300
00:38:09.660 --> 00:38:16.170
Developer: yeah this will be a future way of doing it so we're using view components that are modular components that can be plugged into web pages.

301
00:38:16.530 --> 00:38:27.480
Developer: And this will be the future of how ssl displays results, and it will be integrated and how it works and my answer to this is also by working on this project with other people.

302
00:38:28.380 --> 00:38:39.450
Developer: There it won't be a solo architect anymore here i've taken the knowledge of what I have done it i've tried to make a very small modular thing that does one thing, which is a visual visualization of these this data.

303
00:38:39.960 --> 00:38:51.330
Developer: And I tried to think now that I have all my knowledge, how can I do this, but other people who are contributing to this have much better idea of how you do the front end of view components and how you make.

304
00:38:51.870 --> 00:38:56.070
Developer: web pages work together and they're handling those details and i'm just doing the.

305
00:38:56.100 --> 00:39:12.960
Developer: Okay, the integration so that's my that's kind of my life that's my feeling of how i'm going to transition the software as as to go web based, but I have to say I do think web based interfaces are very clumsy they live in sand boxes and.

306
00:39:13.980 --> 00:39:19.020
Developer: i'm not convinced it's the perfect answer for all questions but it's it's certainly one answer.

307
00:39:20.550 --> 00:39:32.730
Interviewer: yeah actually I was, I was gonna ask if you ever consider web Apps but I didn't want to suggest anything before I before I get your answers.

308
00:39:34.320 --> 00:39:47.370
Interviewer: I have 29 purchase a Methodist and so that about four or five well within our web based, so the, the majority of the of the domain.

309
00:39:48.840 --> 00:39:58.740
Interviewer: is still in traditional software area so desktop based, but there are already maybe four or five of them I tried to them.

310
00:40:00.570 --> 00:40:06.900
Interviewer: They are, I think the only pro vide very basic functions.

311
00:40:08.340 --> 00:40:17.430
Interviewer: Maybe they are newer software and they are still developing more features, however, I think of the benefits is that.

312
00:40:18.690 --> 00:40:29.100
Interviewer: it's really cross platform it's easy to to use them cross platform and it's easier for the developers to maintain them, so I mean one.

313
00:40:31.080 --> 00:40:35.910
Interviewer: Big code base no need to maintain differently calls for different platforms.

314
00:40:36.390 --> 00:40:38.970
Interviewer: And I also agree with you, maybe it's not a perfect.

315
00:40:39.030 --> 00:40:47.370
Interviewer: solution for some software which are complicated maybe it's hard to perfectly transfer them to web ass.

316
00:40:48.090 --> 00:40:55.860
Developer: yeah so i've actually just given you a link to a talk that I gave to the national institutes of health do there.

317
00:40:55.890 --> 00:41:11.070
Developer: yeah acne group, and it was a little bit about what are the future of our different tools and what tricks to my tools, use and their main issue with acne is that they are tool is on based on X windows, which is quickly.

318
00:41:11.940 --> 00:41:23.430
Developer: Becoming obsolete it's becoming extremely hard to maintain X windows, with the opengl the legacy opengl they did, and the public gallop or they had an acne has retired as moved on to a different job.

319
00:41:23.820 --> 00:41:35.100
Developer: And so, one of the things I go over in this is the advantages potentially of javascript to solve a lot of problems and have this and the other thing I would point out, if you look at I.

320
00:41:35.670 --> 00:41:45.660
Developer: mentioned in there, I Google solution with to this, which is there a filament which essentially uses a controller view model so that they paid a.

321
00:41:45.960 --> 00:41:56.430
Developer: custom user interface for each operating system, I think that's a great solution for big companies that I do think if you have a native application for windows and a native application for MAC.

322
00:41:57.210 --> 00:42:05.820
Developer: That really gets the best user experience you can use all of the features and then you can have the common view components, but it does take a huge amount of resources to do and I.

323
00:42:06.540 --> 00:42:08.010
Developer: Exactly with what you're saying that.

324
00:42:08.310 --> 00:42:14.100
Developer: That javascript the benefit for us as most of us most of the people who developed tools in my field are like.

325
00:42:14.130 --> 00:42:24.660
Developer: me that we're funded to do research and the software, we create as a byproduct of our research and we don't want to spend all the time, supporting all these different frameworks that.

326
00:42:25.110 --> 00:42:35.220
Developer: The only other thing I would say that would be interesting, but things that the other tools javascript right now seems to be dominant I do really wonder, I think, watching.

327
00:42:36.030 --> 00:42:48.270
Developer: flutter from Google and watching swift ui from apple are the two interesting areas that may change that that flutter from Google has traditionally done a lot of great stuff on.

328
00:42:49.260 --> 00:42:59.370
Developer: On on tablets and phones but they're now being really embraced by Linux and swift ui for for apple is very clever in that it.

329
00:42:59.700 --> 00:43:08.880
Developer: very much like the software I build it uses native frameworks, wherever it is it's unclear if apple wants to push that to windows are open source it so apple is has.

330
00:43:09.810 --> 00:43:19.530
Developer: Open sourced swift programming language, but the swift user interface component which I think is very elegant its future is a little less clear if it will be pushed out but.

331
00:43:19.980 --> 00:43:26.910
Developer: Until unless one of those things happens right now javascript seems to be the obvious answer for for a cross platform development.

332
00:43:27.690 --> 00:43:46.410
Interviewer: yeah I I I think I just saw the news we have the release of flattered to I think Google just released the factor, too, and I think I think we were talking about supporting maybe one code base supporting both of that desktop and mobile.

333
00:43:47.520 --> 00:43:52.050
Interviewer: It sounds promising to me I think my next personal project is going to try flatter.

334
00:43:53.070 --> 00:43:53.400
Developer: yeah.

335
00:43:53.670 --> 00:43:56.130
Developer: Well, I I find free time I would definitely.

336
00:43:56.130 --> 00:44:02.700
Developer: Do and I would say, I have a very interesting relationship with Google because they've done so many great things have great tools, but also.

337
00:44:03.810 --> 00:44:07.320
Developer: As a developer they've stolen, most of the people who used to help me out.

338
00:44:07.710 --> 00:44:11.190
Developer: Oh, Dan kimber can use to create software very.

339
00:44:11.370 --> 00:44:20.670
Developer: Similar to mine when he left to go for Google he's like now all the users are used to use my tool I going to be using yours your your your user basis just doubled.

340
00:44:21.480 --> 00:44:29.070
Developer: So I know I no longer academic supporting that and I already mentioned crisco girl ski so it's it's unfortunate with it, you know.

341
00:44:29.610 --> 00:44:38.010
Developer: Being an academic doesn't pay, as well as some of these other jobs and and big science, you know there's a lot of advantages so it's funny I.

342
00:44:38.520 --> 00:44:44.070
Developer: You know, talking to a lot of these people who move they they really enjoy it it's a lifestyle they espouse it and they.

343
00:44:44.460 --> 00:44:55.470
Developer: They criticize, a lot of the challenges that I face as an academic and so sometimes I do wonder, but it's it's an interesting relationship we have with these major tech companies right now.

344
00:44:56.760 --> 00:45:05.640
Interviewer: yeah I also heard of that to the major competitors for Google, Facebook those big tax the combative terrorists, for their employees.

345
00:45:06.990 --> 00:45:11.250
Interviewer: Are the major competitor is not a another big attack, but NASA.

346
00:45:13.170 --> 00:45:24.270
Interviewer: So many of them, they decided okay I don't want to that the salary, maybe I want to go back to science, I want to come back to science and study in the future, so no.

347
00:45:26.250 --> 00:45:28.170
Interviewer: All right, go back to our next question.

348
00:45:31.170 --> 00:45:43.800
Interviewer: it's about documentation, how does documentation fit into your development process and New Orleans improve the domination help with the stack whole obstacles with your typical.

349
00:45:44.190 --> 00:45:47.760
Interviewer: country with the obstacles you face.

350
00:45:48.690 --> 00:45:55.050
Developer: So um, and so what I would say is We talked a lot and i've said, good things about.

351
00:45:56.550 --> 00:45:58.410
Developer: About github.

352
00:45:58.770 --> 00:46:06.660
Developer: But what I would say, is one of the things that I I I really used extensively on nitric is the.

353
00:46:07.590 --> 00:46:18.090
Developer: ability to have wiki pages, and so this is Wikipedia is a nice way that people can I can I can present documentation and users can edit it.

354
00:46:18.390 --> 00:46:25.260
Developer: If they want to and and change it an updated and there's tracking of those changes and so i've tried to document everything.

355
00:46:26.220 --> 00:46:37.830
Developer: as best I can I would say I usually write the first draft of the documentation, but I think developers incredibly poorly suited to see how someone who is new to the software.

356
00:46:38.040 --> 00:46:39.120
Developer: season, you know what.

357
00:46:39.300 --> 00:46:44.820
Developer: How it should be used, so I I work with other people who helped me refine the documentation.

358
00:46:45.600 --> 00:47:04.590
Developer: And and try to make sure i'm saying what I want to say that it's useful for users, so I try to cover the features and the colleagues help edit that Wikipedia entries, to make them so that users who aren't familiar with my tools can can understand the concepts i'm trying to describe.

359
00:47:05.640 --> 00:47:07.890
Interviewer: yeah I was actually surprised that.

360
00:47:09.240 --> 00:47:20.340
Interviewer: Micro Jay has a very good documentation, because for some projects with fewer developers, especially those ones with only one prime developer.

361
00:47:21.990 --> 00:47:43.020
Interviewer: They do not really have a very good meditation because of the developer, the only developer may sometime sometimes don't have time to to document everything down so did you did you find out documentation for the project really helped really helps not Tommy the users but also yourself.

362
00:47:43.620 --> 00:47:53.190
Developer: Absolutely I get a lot fewer questions with good documentation right So hopefully and I and also most most new users have the same question.

363
00:47:53.670 --> 00:48:03.660
Developer: And so what you'll see is my documentation is evolved based on people on the forum asking questions and and someone asked a question I think Oh, I guess i've never said anything about this.

364
00:48:03.810 --> 00:48:11.400
Developer: i'll go back to the Wikipedia and i'll add an entry to and i'll say does this answer your question and so it's a virtuous cycle that most users.

365
00:48:11.730 --> 00:48:20.610
Developer: are going to end up having the same pain points, and so you can try to resolve it in the documentation and and it also helps you realize when students.

366
00:48:21.120 --> 00:48:25.020
Developer: Students or users ask you questions he started saying well, maybe this is something I should really.

367
00:48:25.290 --> 00:48:35.130
Developer: improve how it works, so you know the user interface for a long time was very different from how it was now it had lots of different windows, that would open up and there were different panels and I definitely.

368
00:48:35.850 --> 00:48:44.070
Developer: People had a lot of problems with that so, then I thought okay i'll just have it so it's a much cleaner kind of interface for the user, and so what so what.

369
00:48:45.030 --> 00:48:55.740
Developer: Definitely I think documentation helps in that virtuous cycle of helps you think what are things that are confusing that are difficult to describe and if it's difficult to describe should I changed the implementation.

370
00:48:57.300 --> 00:49:11.880
Interviewer: yeah and I I just noticed that by answering my questions you actually shared a lot of the documentation to me all these things, mostly it's really helped me helped me to understand what who you are to embody much, much better.

371
00:49:12.990 --> 00:49:32.040
Interviewer: And yeah I think I agree with you domination, sometimes really helped and i'm going to ask you, our next question to you, so in the past, is there any major obstacle to your development process that has been solved and how did you solve it.

372
00:49:33.150 --> 00:49:35.250
Developer: Well, so, first of all, I would say.

373
00:49:36.930 --> 00:49:49.110
Developer: One of the main thing problems that i've traditionally had is just simply what the hardware that day was so I mentioned when I started developing I had 20 megabytes of memory and bringing images or large so i'd 16 megabytes and so.

374
00:49:49.200 --> 00:49:55.170
Developer: Okay technology move forward and solve them and memory didn't become this constraint so that's what I developed right crowd and then.

375
00:49:55.590 --> 00:50:08.250
Developer: I shaders and modern graphics cards came out and they really made it so we could do new visualization, and so I I leverage those, but I think that the obstacles are just data has become very huge now.

376
00:50:09.360 --> 00:50:21.750
Developer: Our scanners themselves, you know now I can take a single individual in 20 minutes I can create a data set that's more than two gigabytes so it's beyond a 32 bit address and things like that, so I would say.

377
00:50:22.920 --> 00:50:23.670
Developer: You know it's been.

378
00:50:25.050 --> 00:50:36.360
Developer: I guess the nice thing about doing computer sciences it's changed a lot in the last couple decades, but the problem is it's changed a lot of things have got a lot better but they've gotten bigger and it's been hard to scale, so I would say.

379
00:50:37.230 --> 00:50:44.610
Developer: I sort of I don't go looking for problems and, most of all, my problems have just been solved by computers getting mentioned better.

380
00:50:46.170 --> 00:50:46.530
Interviewer: Okay.

381
00:50:47.700 --> 00:50:58.590
Interviewer: Thanks My next question is about your development model, what is your software development model, for example, do you use waterfall or maybe a GL.

382
00:50:59.370 --> 00:51:14.040
Developer: No, I use case so keep it simple stupid, so I I try to I try not to solve and create new problems that aren't there I try to keep very focused on what I do I try to keep things very simple i'm not a computer scientist, I don't claim to be.

383
00:51:15.060 --> 00:51:19.800
Developer: I just try to keep everything as simple and streamlined as possible.

384
00:51:20.370 --> 00:51:23.010
Interviewer: Okay, for example, if one user.

385
00:51:24.150 --> 00:51:31.950
Interviewer: request a feature maybe from the forum, or maybe from github issue, how did you deal with this feature.

386
00:51:33.720 --> 00:51:45.930
Developer: It depends on the feature so most of my good ideas come from the the scientific team I work with here so over the years, what I found is there's some collaborators I work with have are really.

387
00:51:46.950 --> 00:51:49.830
Developer: There is a scientist, I worked with here named Julius.

388
00:51:50.280 --> 00:51:58.740
Developer: Who is from Iceland, but he's one of the most creative thinkers and he can spend five minutes in the car driving into work coming up with a brilliant idea.

389
00:51:59.070 --> 00:52:03.300
Developer: that's going to take me, you know, a month or two to implement and.

390
00:52:03.900 --> 00:52:15.270
Developer: But we have grants together and it's based on the work that I do with stroke and so features that come from these users, where i'm actively working on science, I will devote a lot of time to.

391
00:52:15.780 --> 00:52:26.910
Developer: If someone asked me a question that I think is easy to implement or I see a paper, I want to try it i'll often do it, but the truth is a lot of times, if people ask me a question I will tell them.

392
00:52:27.330 --> 00:52:42.780
Developer: You know this software is open source and if it means a lot to you implemented in generate a pull request that I developed it I don't want a big project I don't want him there's other tools out there that have much more.

393
00:52:44.310 --> 00:52:52.200
Developer: Bigger remit, so what they try to solve and I try to solve I wanted very simple modular piece of software that someone can say I understand how to do this and I.

394
00:52:52.380 --> 00:52:53.700
Developer: I completely respect.

395
00:52:54.210 --> 00:53:04.800
Developer: tools with much bigger and development teams that are much more ambitious and try to solve a lot more problems, but my tool was designed for a 63 year old radiologist.

396
00:53:04.980 --> 00:53:06.960
Developer: by someone who said assignment.

397
00:53:07.980 --> 00:53:19.110
Developer: psychologist not a computer scientist, and so I think I wouldn't be doing any favors by trying to solve problems that are out in my skill set or trying to create a tool that tries to do too many things.

398
00:53:20.400 --> 00:53:29.160
Interviewer: Okay My next question is about your project management process, so what is your project management process some examples are that.

399
00:53:29.610 --> 00:53:45.540
Interviewer: How do you make plans for the next version and the for the requested features, how do you plan then maybe the pan release 10, for then under the development process for them.

400
00:53:46.530 --> 00:53:53.220
Developer: So what I would say is so my development cycle is I try to do a release every six months.

401
00:53:53.610 --> 00:53:54.270
Developer: And so.

402
00:53:54.660 --> 00:54:12.570
Developer: And, most of the releases now like i've said, my software that the aim is to be simple and to be simple to understand I, and I don't look for changes and the big problem is, we have to deal with MRI scans that come from manufacturers that are developing a lot of new techniques.

403
00:54:12.810 --> 00:54:17.820
Developer: So, Philips general electric's Siemens ui h.

404
00:54:18.510 --> 00:54:31.110
Developer: cannon are all developing new scanners and their images that they create are different, they even though they're all technically daikon format images they all interpret daikon differently, they do things differently and.

405
00:54:31.980 --> 00:54:43.680
Developer: So we constantly have to change our software to deal with the new capabilities and the new features these scanners, so what I have is I will have on github.

406
00:54:44.070 --> 00:54:55.200
Developer: there's issues and when an issue, even if it comes up on the nitric forum, I will, if it's something that I think is important, I will post, an issue on github to say this is something that needs to be fixed.

407
00:54:55.560 --> 00:55:04.740
Developer: And if if it's can be fixed and then usually every new release every six months, I will release it after all the issues go down to zero.

408
00:55:05.010 --> 00:55:14.880
Developer: Right so i'll try to address those issues, but if there's some issue that I don't have enough good examples to solve i'll defer to you and to the next release, but with each release I tried to highlight.

409
00:55:15.720 --> 00:55:22.590
Developer: What the new features are that it handled but that's basically my ideas, I have a six month the cadence of every six months.

410
00:55:22.830 --> 00:55:29.010
Developer: And so imminently over the next couple days it looks like you can see, on the link I just sent you 17th of March, there was the new release of.

411
00:55:29.250 --> 00:55:37.590
Developer: The company the X, which is the core now that'll be in the next several days i'll be as the same version number for the visualization tool that uses it but.

412
00:55:37.950 --> 00:55:45.990
Developer: Those are the changes that I had to make in the last six months, and you can look at them and they're virtually all driven by manufacturer is changing how their tools work.

413
00:55:46.650 --> 00:55:59.880
Interviewer: Okay, thanks, I have a follow up question, not about the project management, but about obstacles, I remember that some development teams, they told me that they had some problems accessing.

414
00:56:00.990 --> 00:56:12.660
Interviewer: Medical images because basically speaking, most of these images they are private they have to respect the privacy of the patients.

415
00:56:13.170 --> 00:56:27.420
Interviewer: So sometimes when they want to do that task testings or sometimes when they users have the problems, because we cannot pass the with certain images, did you have the same problem in the.

416
00:56:27.600 --> 00:56:38.760
Developer: us is a huge it's a huge problem for us, and so, mostly so, for example, i'm actually talking to you from the MRI Center here so yeah i've right next to a three tesla MRI.

417
00:56:39.150 --> 00:56:40.410
Developer: And so, if a user can.

418
00:56:40.770 --> 00:56:46.650
Developer: send me the basic protocol for a Siemens MRI scan or I can replicate their sequence here.

419
00:56:47.670 --> 00:56:52.470
Developer: or usually I can ask him, can you just put a water bottle in your scanner and.

420
00:56:52.590 --> 00:56:54.870
Developer: You collect a sequence of a water bottle that you.

421
00:56:54.870 --> 00:56:55.950
Developer: can share with me.

422
00:56:57.180 --> 00:57:04.110
Developer: But for a lot of clinical scientists you don't have that same research access to an MRI scanner and.

423
00:57:05.610 --> 00:57:19.860
Developer: They don't have those abilities and so there is a privacy issue, and I think it used to be a much bigger issue with me in the past, so the big change over the last few years is that the manufacturers have gotten to know me very well.

424
00:57:20.190 --> 00:57:31.710
Developer: So when there's a problem with a seaman's scanner I know exactly the people at Siemens, depending on the modality, who are the engineers and I will say this is the issue I have this is the issue a user alabama's having.

425
00:57:32.370 --> 00:57:36.840
Developer: And they have Siemens has a mechanism to work directly with their user to.

426
00:57:37.170 --> 00:57:46.080
Developer: To look at the exact scans are happening, the model that they can replicate that sequence, either in software on their own scanners and cary North Carolina and send me the data.

427
00:57:46.500 --> 00:58:01.110
Developer: A former PhD student German Shin who worked with me now works for General Electric so he has done the same thing and i'll actually show you this is, I think this is one thing i'm trying to do is when I solve a problem I try to make sure that.

428
00:58:02.160 --> 00:58:12.030
Developer: Other people can solve the problems too, and so what i've done is, this is a you can see, this map and quite recently, but this is a repository called diet DCM.

429
00:58:12.330 --> 00:58:26.370
Developer: QA GA and this shows this is how General Electric some of the features that does that or uninterrupted and specific to that manufacturer, so I was able to work with a sign with the engineers at GE and to try to.

430
00:58:27.600 --> 00:58:36.660
Developer: To try to replicate some of these tricky features and then i'm showing you another one called DCM QA in nh which is for the enhanced and so.

431
00:58:36.960 --> 00:58:49.920
Developer: As we get as I worked with the vendors in GE and Phillips and Siemens or ui age they're able to send me an example so i'll say look, I know you have a customer somewhere who's having a problem I don't have a General Electric scanner here.

432
00:58:50.460 --> 00:58:58.470
Developer: But this is the issue they're having can you send me something similar and and then and I always make this open source so everyone can see.

433
00:58:59.340 --> 00:59:04.410
Developer: These reference images that are acquired so other people can tune their software.

434
00:59:04.860 --> 00:59:12.210
Developer: And i'll just send you one more link when I tried to understand it, I also try to write up this is how, for example, i've sent you a link to.

435
00:59:12.480 --> 00:59:20.040
Developer: This is how my software deals with some of the unusual features of General Electric that are special to General Electric does thing so other people.

436
00:59:20.520 --> 00:59:27.270
Developer: I try to document that and just to say one other final thing of how I think it's important to document to the Community how things happen.

437
00:59:27.540 --> 00:59:36.900
Developer: I also am an editor for other people's Wikipedia entries, where I will go into their Wikipedia entries and go in, as an editor when I discover things new I share it with them.

438
00:59:37.890 --> 00:59:50.730
Developer: And with you could say there's other tools that compete with me and I don't see it as competition, so when I have something I can understand, I will send it to Joe Linda Smith and Oregon on I will send it to.

439
00:59:53.910 --> 01:00:08.580
Developer: Paul McCarthy at Oxford, I will send it to grow Lee in Ohio and and, likewise, they will have reciprocity, so they say oh i've solved some new problem that the scanner manufacturer get so I think it's.

440
01:00:09.240 --> 01:00:20.460
Developer: it's easier, now that I have a much better communication I know the people, the relevant people at the different vendors, who can explain to me what they're doing and where they're having problems, but I agree it's when we deal with.

441
01:00:21.060 --> 01:00:30.660
Developer: Privacy issues, it is a major problem that we face of how, when a user experiences, an issue with your software, they often can't share the raw data for you and.

442
01:00:32.190 --> 01:00:34.080
Developer: So it is definitely a problem.

443
01:00:35.160 --> 01:00:42.450
Interviewer: yeah according to those developers they try to use some example images.

444
01:00:45.000 --> 01:00:56.100
Interviewer: So hope that the the those example images can solve their problems and my next question is actually about the correct needs of the software.

445
01:00:56.640 --> 01:01:13.560
Interviewer: So first was it harder to ensure the craziness of the software and having more access to the data sets having more access to the images, do you think it can improve the correctness of the software.

446
01:01:14.340 --> 01:01:16.620
Developer: Absolutely, and I think it is a challenge that.

447
01:01:18.060 --> 01:01:29.850
Developer: As scientists, we tend to use these scanners, we want to push the scanners to the edge, we want to do, new things and we we acquire data in ways that they weren't really the developers the.

448
01:01:32.220 --> 01:01:40.830
Developer: The manufacturers developing these tools for for clinicians didn't envision the ways we would try to use that are scans and so.

449
01:01:41.580 --> 01:01:51.930
Developer: it's there's a lot of things even even today there's Philip scans that don't store all the data we need to replicate what they did we can't.

450
01:01:52.500 --> 01:02:02.520
Developer: Exactly understand how they did things they don't have the information, but a lot of times they will have new versions of software that change things do things differently.

451
01:02:02.790 --> 01:02:04.740
Developer: or a lot of times, a lot of these manufacturers will.

452
01:02:05.040 --> 01:02:17.160
Developer: actually have mistakes when they first released software, so I don't want to point fingers, but, for example, Siemens had software that they have a proprietary part of the header that they didn't zero outs would put it would.

453
01:02:18.480 --> 01:02:23.880
Developer: It would it wouldn't clean out memory between different files and so private information would get in there.

454
01:02:25.170 --> 01:02:35.250
Developer: General Electric had a problem with their scam where you're supposed to say how many Bytes you stored and where every time they were going to store 10 bites they would say I will store 13 Bytes.

455
01:02:35.430 --> 01:02:36.990
Developer: So if you actually read 13.

456
01:02:36.990 --> 01:02:39.240
Developer: bites you will be at the wrong location.

457
01:02:39.300 --> 01:02:39.720
Interviewer: and

458
01:02:39.780 --> 01:02:57.420
Developer: The only resolution, for this is that in daikon I even if it's a string you can't have an odd number, you have to pat it so it's an even number so you'll see a lot of daikon reading software every time it sees a 13 it says that must be 10 right and so that's clearly a software bug.

459
01:02:58.860 --> 01:03:05.160
Developer: And it's these are tricky things and the vendors, are trying to store a lot of information, so my best solution to this.

460
01:03:05.550 --> 01:03:16.470
Developer: is to have tools like travis that every time I just sent you a link, but every time I submit any commit or anyone submits any commit to my software.

461
01:03:17.070 --> 01:03:25.290
Developer: It doesn't just make sure the software compiles but it it runs through a bunch of these quality assurance data sets to say.

462
01:03:25.650 --> 01:03:36.060
Developer: Is there a change and sometimes I do have to change it, as I understand, a manufacturer better i'm able to add a new features, but at least it highlights, for me, it will only return a success with.

463
01:03:36.750 --> 01:03:42.210
Developer: APP there and I guess travis is a good example of travis I sent you an example.

464
01:03:42.630 --> 01:03:49.230
Developer: About failure which isn't as clear i'll send you the travis one, but the travis where you can actually see that at the end of the travis run.

465
01:03:49.530 --> 01:03:58.050
Developer: It actually goes through a large set of daikon images and it essentially validates that the answers haven't changed since the last time and if it does change.

466
01:03:58.350 --> 01:04:05.310
Developer: i'll get an email saying there's a failure here something's something's different than we expected, and so I think that's a nice way to.

467
01:04:05.820 --> 01:04:08.130
Developer: If you're a single developer, like me, you want some.

468
01:04:08.220 --> 01:04:18.300
Developer: automated way of being able to say that identify if there's any changes, even though there's so many different variations of these data sets out there, I always say that medical images we work with.

469
01:04:18.660 --> 01:04:32.460
Developer: it's a little bit like speaking, the English language that British English speakers use the language very different from American English speakers I actually don't know exactly in Canada, how you do things, but when I was I grew up in California and I moved to England and.

470
01:04:33.660 --> 01:04:39.720
Developer: When I started my PhD one of the things I had to do go was I was invited to go to a.

471
01:04:40.920 --> 01:04:51.660
Developer: A formal dinner, where I had to wear a suit and I didn't own a suit as a starting PhD student and my boss said, you can wear my suit and.

472
01:04:53.040 --> 01:04:55.800
Developer: He was about four inches shorter than me.

473
01:04:56.070 --> 01:05:02.490
Developer: And I said I don't think the pants will fit, but of course in Britain you.

474
01:05:02.790 --> 01:05:05.130
Developer: taller they would say trousers.

475
01:05:05.160 --> 01:05:09.870
Developer: were in America, we would say pants and so pants to a British person means underwear.

476
01:05:14.580 --> 01:05:15.540
Interviewer: You know, but I think.

477
01:05:16.080 --> 01:05:24.450
Developer: That medical image formats each vendor uses the format, a little differently and describes it a little differently, and they don't document its proprietary how they do.

478
01:05:24.450 --> 01:05:30.540
Developer: Things and we've had a reverse engineer, how they do things so that's been it's been challenging to do.

479
01:05:31.560 --> 01:05:42.240
Developer: But and and but but that's the nature of the work if we really want to understand these tools and we want to maximize leveraging them, we do have to reverse engineer a lot of the work, and it certainly helped now that.

480
01:05:42.540 --> 01:05:47.640
Developer: I know that engineers who are creating these things much better and they're able to give me an alert ahead of time.

481
01:05:48.780 --> 01:05:51.780
Interviewer: Okay, so you said of travelers.

482
01:05:53.220 --> 01:06:00.000
Interviewer: Using travelers and doing tests, did you use any other way to to deal with this problem.

483
01:06:00.180 --> 01:06:06.210
Developer: Is problem so yeah so before every release, so I totally have a six month release and so.

484
01:06:06.210 --> 01:06:10.350
Developer: Before every release there's several people who were very large centers.

485
01:06:10.590 --> 01:06:22.710
Developer: And one of them being the biobank in England, where they have 100,000 different individual scans and rob reads his example if someone so Philip Center but I always give them a heads up and say i'm bout to.

486
01:06:23.130 --> 01:06:30.450
Developer: create a new release here will be the release documentation and they they look at their own data sets and so those.

487
01:06:30.450 --> 01:06:33.480
Developer: Are This deals with the problem you were saying that they have data sets.

488
01:06:33.660 --> 01:06:48.150
Developer: Some of them have data some of their data they can't share with me right so they're able to make sure my software still works, despite the fact that i've upgraded it and so that's another way, I definitely am able to leverage users who.

489
01:06:48.420 --> 01:06:51.420
Developer: Have have data sets they can't share, and so we can't make an.

490
01:06:51.450 --> 01:06:53.220
Open validation repository.

491
01:06:54.330 --> 01:07:10.020
Interviewer: yeah okay thanks My next question is about the maintain ability of the software, so when does any of the software, did you consider the the ease of future change, for example, we are to be harder to change the structure of the system.

492
01:07:11.130 --> 01:07:14.430
Interviewer: modules or code box of the software.

493
01:07:15.360 --> 01:07:23.310
Developer: Unfortunately, now I decided for one person originally, but I would say so, as I told you there's sort of three generations of visualization.

494
01:07:23.910 --> 01:07:38.340
Developer: And so within each generation I kind of said what did I learn that worked right and what did I learn that didn't work and I tried, I tried to start with someone a clean sheet to redo things and fix problems, but I would say in general.

495
01:07:39.570 --> 01:07:43.530
Developer: I always think about software engineering it's a little bit like creating a bridge.

496
01:07:43.890 --> 01:07:48.660
Developer: And if you decide to make a bridge across a road if you're going to make.

497
01:07:48.990 --> 01:07:57.330
Developer: US kind of say Okay, I want to bridge so that pedestrians can walk across and they say well how about if if someone on a bicycle wants to walk across or how about if we want.

498
01:07:57.570 --> 01:08:05.910
Developer: cars or habit, if we want a four lane freeway and those are very different design decisions, you have to decide at the outset if you're going to create.

499
01:08:06.420 --> 01:08:11.190
Developer: A four lane bridge for automobiles it's going to be very different than.

500
01:08:12.120 --> 01:08:20.130
Developer: A bridge designed for pedestrians and I I tend to like to have a very simple software that answers, one question is modular and so.

501
01:08:20.790 --> 01:08:34.290
Developer: That would be my solution, I don't try to think about the scalability I think of a very small remit i'm not trying to answer all the questions so there'll be a lot of there's a lot of other tools out there, that will answer some of the more difficult questions.

502
01:08:35.520 --> 01:08:39.510
Interviewer: Okay My next question is about understanding mobility.

503
01:08:40.620 --> 01:08:46.230
Interviewer: Can you provide some efficiencies let users have misunderstood the software.

504
01:08:47.490 --> 01:08:56.910
Interviewer: And some of the examples are that may be the user misunderstood the purpose of the software or maybe some icons.

505
01:08:58.350 --> 01:09:00.390
Interviewer: Or maybe the process of.

506
01:09:02.100 --> 01:09:05.250
Interviewer: of using the software any incidences.

507
01:09:06.660 --> 01:09:23.010
Developer: um let's think about this, this is that I mean I think there's there's been a lot of little refinements of little changes of people how people didn't understand things and and small little refinements but i'm trying to think of a good anecdote of a standout.

508
01:09:24.390 --> 01:09:34.500
Developer: feature that got misused, I would say, so my my image conversion software works, both from the command line and then.

509
01:09:34.860 --> 01:09:41.910
Developer: From the graphical user interface, and so I have it, that if you use the graphical user interface it'll actually as you build.

510
01:09:42.360 --> 01:09:54.990
Developer: How you want a conversion to happen in the graphical user interface it'll actually show you it'll build a command line for you, but certainly I think there's a lot of users in my field who are very unfamiliar with the command line, and I would say that.

511
01:09:55.230 --> 01:09:56.820
Developer: The terminal applications.

512
01:09:57.210 --> 01:10:10.890
Developer: A lot of people don't understand that the order of precedence of things matters and that's important, and I think those are things that are a little bit inherent to how a command line works and it's hard to think of.

513
01:10:12.180 --> 01:10:15.450
Developer: A lot of those users simply are going to have to invest the time so I.

514
01:10:15.720 --> 01:10:16.890
Developer: tend to for them to.

515
01:10:17.370 --> 01:10:25.740
Developer: ssl when they do their training courses they really say, if you want to do brain imaging if you want to be a scientist and Anthony does the same they say you have to engage the command line.

516
01:10:26.040 --> 01:10:35.250
Developer: And you have to spend enough time to understand these things and I i'm not sure that's true, I think that maybe for a lot of students understand graphical level.

517
01:10:35.910 --> 01:10:47.190
Developer: can get them to understand the higher level concepts and then they can work with other people or more experts in it, but I would say that's one thing, where I think a lot of users, get very frustrated.

518
01:10:47.970 --> 01:10:53.760
Developer: With these tools that as a developer, the command line gives us a lot of flexibility in it.

519
01:10:54.120 --> 01:11:02.940
Developer: yeah and and it allows us to have something that's cross platform, but most many of the large proportion of scientists out there dislike it.

520
01:11:04.620 --> 01:11:10.050
Interviewer: I remember at the beginning of my process of learning programming I didn't like.

521
01:11:11.730 --> 01:11:16.500
Interviewer: I thought it was very hard to understand, but now I really like it.

522
01:11:17.040 --> 01:11:23.460
Interviewer: yeah I think it's fast convenient right there is no need for you, if I type stuff of course.

523
01:11:24.900 --> 01:11:25.620
Interviewer: yeah okay.

524
01:11:27.060 --> 01:11:45.030
Interviewer: Three yeah three more questions to go next one is about of a usability what, if any actions were taken to address usability issues, maybe not we can talk not honey about issues, we can also talk about how did you improve his ability of the software.

525
01:11:45.870 --> 01:11:55.080
Developer: I guess actually now that you mentioned it, these two questions weren't together, maybe I can give a good example of one thing is, I totally that some brain images are multiple gigabytes long.

526
01:11:55.200 --> 01:12:01.620
Developer: yeah and so you might have an FM is, can you might hear right now there's a beeping sound in the background that's a scanner acquiring.

527
01:12:01.650 --> 01:12:02.970
Interviewer: fmri data okay.

528
01:12:03.360 --> 01:12:09.780
Developer: So, but um, but what we end up with is, if you want to visualize.

529
01:12:11.100 --> 01:12:17.430
Developer: 500 1000 2000 different time points at once it's going to be very slow for the software to load in.

530
01:12:17.460 --> 01:12:19.650
Developer: So one thing is my software has a feature.

531
01:12:19.980 --> 01:12:24.450
Developer: where you can set a preference so either loads entire data set that you can scroll through.

532
01:12:24.750 --> 01:12:32.220
Developer: Or it can just load, the first few volume, so you can say what does this image look like, and it can load it very quickly Okay, and I would say that's something where.

533
01:12:32.970 --> 01:12:44.850
Developer: Users got a little confused about that and so now I have it, that has a dialogue that will briefly displays and in the notification area saying i'm only loading, the first 30 to 4400 volumes.

534
01:12:45.720 --> 01:12:50.280
Developer: You know, go to preferences, if you want to change this, and so it tells the user.

535
01:12:50.670 --> 01:13:01.950
Developer: What the behaviors happening, and so I think that's a way that we were able to inform people a little bit better we gave them the option to load data quickly I partially loading the data, but we also made it explicit.

536
01:13:03.150 --> 01:13:05.850
Developer: As the notification of what was happening when that happened.

537
01:13:07.050 --> 01:13:11.580
Interviewer: How much faster is editor on your load a part of it part of the image.

538
01:13:11.760 --> 01:13:15.540
Developer: Is if you only 40 if you only load 40 images of.

539
01:13:17.790 --> 01:13:22.470
Developer: 2000 it's gonna be a lot faster, particularly if the user has a laptop with very little Ram on it.

540
01:13:22.590 --> 01:13:24.210
Developer: And they don't have a lot of memory.

541
01:13:24.480 --> 01:13:29.400
Developer: And it's going to have to start disk cache and then it becomes extremely slow right so so.

542
01:13:30.210 --> 01:13:41.010
Developer: it's a it's a feature, but on the other hand, if with my software as like you can open the image and i'll have a timeline that will show you how each location, the brain how the brightness changed over time.

543
01:13:41.430 --> 01:13:51.570
Developer: And that might be something that user wants to see and need the whole timeline so it depends on the tasks that they're doing whether it's a good thing or a bad thing to load all the data together resources.

544
01:13:52.530 --> 01:14:04.950
Interviewer: Okay, I know that for some other software packages, especially those complicated once they try to solve all of the problems and from the impression.

545
01:14:05.940 --> 01:14:26.730
Interviewer: of our conversation, you told me that you only try to solve it with some of the problems, maybe more for those more frequently requested problems can you give me one one or two examples which are the areas you focus on suppose that you are trying to sell me, you are trying to provide.

546
01:14:27.960 --> 01:14:32.610
Interviewer: The core functions to improve the usability of the software.

547
01:14:33.630 --> 01:14:49.860
Developer: Right, and I would say so there's things like I focus on visualization of MRI data and CG data and there's a lot of modalities like high resolution X Ray said since idea with three dimensional images there's a lot of medical images that are two dimensional.

548
01:14:50.250 --> 01:14:52.650
Developer: But they don't actually fit well as a three dimensional.

549
01:14:52.650 --> 01:14:56.280
Developer: texture and so that stuff like my software just doesn't try to handle it's not a.

550
01:14:56.280 --> 01:14:57.600
Developer: General daikon viewer.

551
01:14:57.960 --> 01:14:59.070
Developer: For 2d data.

552
01:14:59.400 --> 01:15:03.210
Developer: it's it's for 3D visualization that's what it does and so.

553
01:15:03.540 --> 01:15:10.710
Developer: You know I try to keep a pretty limited remit there's some things I think if you try to make one tool do everything you have to put in a lot more.

554
01:15:10.710 --> 01:15:19.080
Developer: resources to handle all the edge cases and it's very hard to keep a clean interface, so I kind of have very fixed constraints of what I think.

555
01:15:19.530 --> 01:15:27.270
Developer: My tool is going to work with and and if the user wants to deal with other types of data they're great tools out there that are focused on that problem.

556
01:15:27.840 --> 01:15:41.400
Interviewer: yeah Patrick My next question is about the relationship between your documentation and their users do you think the current implementation can clearly convey are necessary knowledge to the users.

557
01:15:41.910 --> 01:15:42.840
Interviewer: and Eva yes.

558
01:15:43.020 --> 01:15:47.970
Interviewer: How did you assess fully achieve it if know what improvements are needed.

559
01:15:49.350 --> 01:15:58.470
Developer: um I think there's probably no, I think that if you try to answer if I try to answer every feature that my software did in the documentation.

560
01:15:58.800 --> 01:16:05.340
Developer: The documentation would be very verbose and it would be very hard for someone to try to scan through, I think the documentation.

561
01:16:05.610 --> 01:16:13.350
Developer: describes the main features, I do think my software has a lot of discover ability, so, for example as a lot of Python scripting abilities.

562
01:16:13.650 --> 01:16:23.040
Developer: And, most of the time I think most users when they use my software, the only reason they use Python is that it has a scripting templates tab that has a lot of sample.

563
01:16:24.240 --> 01:16:33.870
Developer: scripts that it runs it shows the ability of what the software can do, and so it allows the user, it sets up the user interface that loads images in it, it demonstrates things.

564
01:16:34.050 --> 01:16:35.280
Developer: But power users can.

565
01:16:35.310 --> 01:16:40.170
Developer: can go in there and see it, and it does have a script called help function that documents with the different functions of.

566
01:16:41.010 --> 01:16:55.290
Developer: Python to complete programming language, people can can use that in all sorts of ways I haven't conceived of and I can't document and it's beyond the remit of documentation, so I think my documentation is designed to allow people to get.

567
01:16:56.550 --> 01:17:03.060
Developer: comfortable using the main features of the software, there are tool tips and some discover ability that help the users.

568
01:17:03.810 --> 01:17:11.610
Developer: discover some other functions, and then there are some functions that you know you can open up the preferences file and you can see features that are in there from.

569
01:17:11.850 --> 01:17:20.910
Developer: All generations of graphics cards that had very different capabilities and I don't think there's any reason for me to document that you used to have tab textures of power of two.

570
01:17:21.270 --> 01:17:30.180
Developer: But since I did it once my software can still ensure these features, if you want to do it there's all sorts of features, I think, are extraneous to modern user and we just.

571
01:17:30.840 --> 01:17:42.780
Developer: So I don't I don't attempt to I think my documentation is to help people get started, and they can discover it, and most of the advanced features are only there for a very small number of users or old edge cases.

572
01:17:43.380 --> 01:17:44.010
Interviewer: Okay gotcha.

573
01:17:45.720 --> 01:18:02.970
Interviewer: My last question is about computer is about reproducibility I think you mentioned a little bit about it, do you have any concern that you computational results won't be reproducible in the future Have you taken any steps to ensure reproducibility.

574
01:18:04.860 --> 01:18:11.850
Developer: Well, I would say, when we have to reverse engineer how manufacturers are creating medical images.

575
01:18:12.120 --> 01:18:19.470
Developer: The chance for us to misinterpret this, particularly when we start using the scans in different ways, is quite hard.

576
01:18:20.040 --> 01:18:32.310
Developer: quite high and particularly so in my field, the system we have here is built by Siemens and it turns out that about 65% of all scientists in my field have a seaman scanner and.

577
01:18:32.760 --> 01:18:38.310
Developer: So we understand this device very well, and most of our tools are designed to work with it.

578
01:18:38.700 --> 01:18:50.850
Developer: The other vendors like General electric's and Philips, which are very popular and ui ah, which is coming out in China and Canada are popular in other parts of the world and they're very popular clinically and they aren't used as much by scientists.

579
01:18:51.390 --> 01:18:52.200
Developer: And they.

580
01:18:53.460 --> 01:19:07.530
Developer: They have different strengths and weaknesses and son scientists find the niches that they can exploit these tools in, but particularly with those tools are less well us where I have less experienced with them the chance of me, making mistakes.

581
01:19:08.640 --> 01:19:13.410
Developer: or not identifying all the features or miss identifying them is very high.

582
01:19:14.280 --> 01:19:28.890
Developer: A good example actually thinking about this is, if you think about broker that makes animal scanners for scanning animals and their diffusion scans it turns out, they actually had a bug and how they define their matrices and so their data it turns out, is unsolvable.

583
01:19:29.190 --> 01:19:30.690
Developer: They will create data that is.

584
01:19:31.020 --> 01:19:41.760
Developer: They don't give you the right data to get the right answers, but they were using public tags of where there should have been a solution, they just put the wrong numbers in So if you think about.

585
01:19:43.410 --> 01:19:59.760
Developer: A four by three by three matrix that what they had actually done was they copied effectively I forget how it was, but it was one row, and then it was they didn't get the whole upper triangle, they they they were supposed to save.

586
01:20:00.780 --> 01:20:04.230
Developer: 1234 it should have been six independent values and they.

587
01:20:04.230 --> 01:20:09.390
Developer: didn't do that correctly, and so it turns out that that my software as seem they were.

588
01:20:10.800 --> 01:20:18.900
Developer: They had conformed to the daikon standard and I gave people a result for it, but it turns out, it was the incorrect result right.

589
01:20:19.410 --> 01:20:30.540
Developer: yeah and and, likewise, there have been times, where I think i've misunderstood things like I think the best thing I can do is be humble I try to document everything I do.

590
01:20:30.930 --> 01:20:33.540
Developer: I try to be very responsive, I always tell people.

591
01:20:34.020 --> 01:20:38.040
Developer: You know if you're using one of these systems that's unusual.

592
01:20:39.090 --> 01:20:48.120
Developer: i'll give you a nice example, so this is, I think, if I I know this is the last question we've been going I, by the way, I I very much enjoyed talking with you, I want to say your.

593
01:20:49.200 --> 01:21:07.140
Developer: it's it's it's Nice because you have a lot of good background personal knowledge, but you also have a very good conversational style, so this is, but I will say this is one of the things I do, and this is kind of a little worried, but if you go to my di compton nifty X.

594
01:21:08.580 --> 01:21:11.640
Developer: Where I talk about diffusion tensor imaging.

595
01:21:14.400 --> 01:21:16.170
Developer: Let me i'll send you the link here.

596
01:21:16.230 --> 01:21:17.670
Developer: That link for this.

597
01:21:18.180 --> 01:21:26.790
Developer: This is a i'm just saying this verbally so that it's it's part of the recording So if you go to the nitric Wikipedia for for di continuity.

598
01:21:27.150 --> 01:21:28.950
Developer: Where it says diffusion tensor imaging.

599
01:21:29.160 --> 01:21:34.740
Developer: You will see that I work with people around the world who have G systems Philip system semen systems.

600
01:21:36.600 --> 01:21:39.840
Developer: And all different generations of these systems over time.

601
01:21:40.050 --> 01:21:42.450
Developer: Right creative validation but there's also a link.

602
01:21:42.690 --> 01:21:53.310
Developer: That I tell people that I have a dedicated document that's a word document that describes how they can make sure that the results that they get with my tool.

603
01:21:53.670 --> 01:22:06.990
Developer: are actually correct because it is possible that they could correct data collect data in animals that are our line in a different position in the scanner so let's say when you put a.

604
01:22:08.370 --> 01:22:15.540
Developer: dog into a scanner their noses facing lengthwise down the scanner were a human those is pointing upward to the sky, if you think of.

605
01:22:15.570 --> 01:22:23.490
Developer: US line down our noses point yep right there's all sorts of things that things might happen, a little differently than you'd expect we're orientation, would it be correct, and so I.

606
01:22:23.790 --> 01:22:28.020
Developer: I try to tell people you shouldn't trust trust my software.

607
01:22:28.620 --> 01:22:38.940
Developer: You should test it yourself, you can have new date, you can have new software, for your vendor i've never seen before I don't have ESP of future design, so this is how to do it and.

608
01:22:39.630 --> 01:22:49.080
Developer: The reason I have to release my software every six months is as a community our understanding of these tools and the types of images that are being created are changing and there's a saying.

609
01:22:49.590 --> 01:22:57.180
Developer: You know, can you put your set foot in the same river twice, because the waters sort of moved on and we have this challenge when we're dealing with.

610
01:22:57.810 --> 01:23:06.630
Developer: Data that's changing the type of data itself is changing over time in our understand it's changing so I would say is reproducibility a challenge.

611
01:23:07.560 --> 01:23:18.780
Developer: Yes, I tried to do due diligence I try to describe how people can do this, but they have tools and sequences i've never seen, and so I have to trust that they're in the Community.

612
01:23:19.440 --> 01:23:24.990
Developer: Doing this and, and when I make mistakes or the vendors make mistakes, but I tried to do is documented and.

613
01:23:25.350 --> 01:23:39.300
Developer: We can we can move forward in particularly with with our field now where we're really moving to open science and when we get large grants, we have to share our data with everyone else, so they can replicate our results and also look at it in new ways with machine learning.

614
01:23:40.470 --> 01:23:48.390
Developer: I think it's really important to make sure we we have software that is reproducible but we aren't going to be 100%.

615
01:23:50.250 --> 01:23:50.910
Interviewer: Okay gotcha.

616
01:23:52.980 --> 01:24:05.010
Interviewer: I also enjoyed talking with you, I think your answers are very inspirational but it's very not only to the topic i'm working on, but also also from future career.

617
01:24:05.880 --> 01:24:18.840
Interviewer: Because i'm not i'm not working in medical imaging or any medical area, but I think you your experience what you're taught the stories you've heard about how you develop the software, how you manage your.

618
01:24:19.650 --> 01:24:29.280
Interviewer: process all of the development is very inspiring for my future career in the software engineering part, so thank you very much.

619
01:24:29.790 --> 01:24:34.110
Developer: Well, if you ever decide, you want to stay in academia, instead of being the word out into.

620
01:24:34.950 --> 01:24:41.040
Developer: The industry i'm happy and you you're interested in medical imaging i'm i'm happy to share with you other.

621
01:24:41.700 --> 01:24:53.250
Developer: places that are always looking for bright software developers if there's issues that are interesting to you and I do say I would say, you know i'm very fortunate I I enjoy going to work every day I find out new problems i've worked with it.

622
01:24:53.580 --> 01:25:02.430
Developer: A great team of people who mostly our clinicians that so they're mostly people are trying to help patients get better and i'm able to use these new tools.

623
01:25:02.490 --> 01:25:05.910
Developer: in science, so I feel very fortunate i've been in my lifetime of.

624
01:25:06.660 --> 01:25:17.220
Developer: The tools we use now, it feels like it's out of star trek compared to where I started right so it's fun it's exciting and I am glad I tried it always has some of that enthusiasm on to other people.

625
01:25:18.180 --> 01:25:24.360
Developer: But but yeah and I also think in one sense it's a beautiful time for you to start your career because.

626
01:25:25.260 --> 01:25:31.920
Developer: When I started it was so obvious what our limitations are of what the computational limits of doing things and.

627
01:25:32.400 --> 01:25:47.730
Developer: computational power has grown so much in our data our big data is growing a lot and now there's really an opportunity to ask questions and acquire data that we couldn't when I was younger, so I think it's a great time to be starting a career in data sciences.

628
01:25:48.990 --> 01:25:52.230
Interviewer: yeah I agree with you i'm going to stop recording.

