WEBVTT

1
00:00:02.669 --> 00:00:02.970
Interviewer: Okay.

2
00:00:03.990 --> 00:00:10.980
Interviewer: Thank you very much for participating in our interview, perhaps, perhaps we can start with our first question.

3
00:00:12.450 --> 00:00:19.080
Interviewer: Maybe you can give us a short introduction about yourself about your position, your title and we are degrees.

4
00:00:19.710 --> 00:00:23.250
Developer: yeah sure, so my name is Julie, how.

5
00:00:24.420 --> 00:00:38.730
Developer: The application developers senior at 10 image computing and science lab belongs to department of radiology pearlman school of medicine at university of Pennsylvania.

6
00:00:39.390 --> 00:00:51.150
Developer: So I my background, so I have a master of science in computer science and also have a master of mechanical engineering and the bachelor of mechanical engineering.

7
00:00:52.800 --> 00:01:06.750
Developer: And I joined I joined a team from December last year, so this is my fourth months almost working on a software so yeah that's my.

8
00:01:07.500 --> 00:01:08.370
Developer: Introduction yeah.

9
00:01:09.060 --> 00:01:13.260
Interviewer: yeah, you know as a family, I also have a favorite of yours.

10
00:01:13.440 --> 00:01:14.100
Developer: or a.

11
00:01:14.220 --> 00:01:15.990
Interviewer: yeah I have a bachelor's in.

12
00:01:16.200 --> 00:01:23.370
Interviewer: mechanical engineering a mastering engineering and then now i'm studying in.

13
00:01:23.400 --> 00:01:23.910
Developer: numbers and.

14
00:01:24.030 --> 00:01:25.110
Interviewer: From mastery COM.

15
00:01:26.970 --> 00:01:34.080
Developer: yeah that's cool yeah I had my degrees in China, and then I moved to Canada for for engineering degree.

16
00:01:35.040 --> 00:01:37.830
Developer: yeah that's that's great so.

17
00:01:37.860 --> 00:01:39.240
Developer: yeah so one.

18
00:01:40.500 --> 00:01:42.870
Developer: I believe one mechanical engineering.

19
00:01:43.980 --> 00:01:56.580
Developer: Country visit fact that I get a job, because the current project involving you know medical imaging which has a lot of computer computation on geometry.

20
00:01:56.910 --> 00:02:00.780
Developer: Okay, which would get a lot of training under.

21
00:02:01.920 --> 00:02:06.330
Developer: mechanical engineering like computer aided design, involving a lot of.

22
00:02:08.340 --> 00:02:12.030
Developer: computational geometry, and we also have.

23
00:02:13.740 --> 00:02:18.810
Developer: Our current project also involves like exporting a mash of.

24
00:02:21.120 --> 00:02:34.740
Developer: Cardio cardiovascular imaging to four for the mechanical engineer to do like bio engineering analysis, like a financial analysis.

25
00:02:35.820 --> 00:02:39.840
Developer: stuff like that so yeah so that that can.

26
00:02:40.920 --> 00:02:44.670
Developer: I mean my background is kind of related to this.

27
00:02:45.180 --> 00:03:04.080
Interviewer: yeah gotcha yeah okay My second question is about your relationship with software Maybe you can give us a little bit about your relationship with a software, such as what kind of contribution you have done to the software and what's your responsibility.

28
00:03:04.800 --> 00:03:05.910
Developer: So I mean with.

29
00:03:06.660 --> 00:03:10.320
Interviewer: With a nice okays yeah with so yeah so.

30
00:03:10.560 --> 00:03:27.510
Developer: I joined the team from last December, and since they're being actively working on the software, so our current project involving several feature updates of the software, I also do a lot of bug fixes and troubleshooting.

31
00:03:28.530 --> 00:03:35.970
Developer: Of the software, so I am one of the developers, one of the two developers of the software currently.

32
00:03:36.360 --> 00:03:41.520
Developer: So yeah so i'm still actively working on it.

33
00:03:42.660 --> 00:03:52.020
Interviewer: Okay sounds good next question is about the length of time you've been involved with so far about what you just mentioned that you're joining the team last.

34
00:03:52.740 --> 00:03:54.180
Developer: December members.

35
00:03:55.110 --> 00:03:58.200
Developer: Okay, so I would say about four months.

36
00:03:58.290 --> 00:04:04.950
Interviewer: About four months so once you join the team you you started with working on based software right.

37
00:04:05.340 --> 00:04:06.540
Interviewer: Yes, okay.

38
00:04:09.630 --> 00:04:14.070
Interviewer: You also mentioned that there are two developers in that development group.

39
00:04:15.300 --> 00:04:20.460
Interviewer: Are are you, the only developers or or.

40
00:04:21.570 --> 00:04:22.320
Interviewer: Kim was.

41
00:04:22.590 --> 00:04:25.410
Developer: yeah well the two developers so.

42
00:04:26.430 --> 00:04:34.440
Developer: Currently, I am the full time dedicated developer of this summer another as Paul.

43
00:04:34.770 --> 00:04:36.210
Developer: More yes college.

44
00:04:36.480 --> 00:04:41.250
Developer: So he is the creator of the software.

45
00:04:41.970 --> 00:04:47.250
Developer: has been has been it's one of his graduate project.

46
00:04:47.280 --> 00:04:48.870
Developer: 20 years ago.

47
00:04:49.110 --> 00:04:58.110
Developer: Okay yeah so is a creator of the software and he has been actively working on it for.

48
00:05:00.720 --> 00:05:03.960
Developer: 20 years 20 more years and.

49
00:05:05.520 --> 00:05:14.310
Developer: Currently yeah the development group in including only Paul and I.

50
00:05:14.730 --> 00:05:15.810
Developer: Okay yeah so.

51
00:05:16.020 --> 00:05:21.360
Interviewer: He said of the Development Group, are there any other supporting groups.

52
00:05:22.530 --> 00:05:23.160
Developer: um.

53
00:05:23.220 --> 00:05:26.280
Interviewer: Any other people and other person working on this project.

54
00:05:27.210 --> 00:05:28.800
Developer: You mean QA or.

55
00:05:29.760 --> 00:05:31.260
Interviewer: yeah any other person.

56
00:05:31.320 --> 00:05:34.050
Interviewer: Maybe working on any other functions.

57
00:05:34.680 --> 00:05:38.850
Developer: um no not aware of any.

58
00:05:39.870 --> 00:05:41.460
Developer: Dedicated person.

59
00:05:41.640 --> 00:05:55.770
Developer: Okay word is software, so I am knowing like phone support it full time about an hour working on it, I kind of doing everything from admin to QA to support.

60
00:05:56.280 --> 00:05:56.550
sure.

61
00:05:58.260 --> 00:05:59.010
Developer: yeah but.

62
00:06:00.300 --> 00:06:01.050
Developer: Currently.

63
00:06:01.290 --> 00:06:03.360
Developer: That there used to be.

64
00:06:06.000 --> 00:06:12.540
Developer: To a dozen of developer around the 30 developers have been work worked on this.

65
00:06:12.840 --> 00:06:13.410
Interviewer: Okay, when.

66
00:06:13.590 --> 00:06:15.330
Interviewer: When yeah go ahead.

67
00:06:15.840 --> 00:06:22.800
Developer: And also, we accept contributions from open source developers, so we have a github.

68
00:06:24.870 --> 00:06:27.960
Developer: github repository and we have issue tracker.

69
00:06:28.470 --> 00:06:32.460
Developer: And we accept user contributions developer contributions.

70
00:06:32.520 --> 00:06:38.640
Developer: And we also have a developer Mao list so it has 100.

71
00:06:40.140 --> 00:06:42.120
Developer: Plus members.

72
00:06:42.360 --> 00:06:43.530
Developer: huh yeah.

73
00:06:45.090 --> 00:06:50.910
Interviewer: Okay, so there are more people contributing this project, maybe from the Open Source point of view.

74
00:06:51.270 --> 00:06:53.280
Developer: Yes, yes, occasionally.

75
00:06:53.310 --> 00:06:54.630
Developer: sprightly yeah.

76
00:06:54.720 --> 00:07:02.220
Interviewer: Okay, you mentioned that there used to be more developers maybe around the 2000s when was it that.

77
00:07:02.760 --> 00:07:05.430
Developer: So it's not a.

78
00:07:06.510 --> 00:07:09.450
Developer: So I I say that not.

79
00:07:11.040 --> 00:07:15.420
Developer: The fact that this is at a certain time.

80
00:07:15.750 --> 00:07:20.250
Developer: there's a larger developer group I didn't mean that I mean.

81
00:07:21.360 --> 00:07:25.620
Developer: There has been people involved in study.

82
00:07:25.740 --> 00:07:30.660
Developer: Okay, like throughout this 20 plus years.

83
00:07:30.870 --> 00:07:46.410
Developer: Okay, for example, right now, we have tool, but for maybe five years ago, we have three murdered there, I mean there are 30 plus major contributors to this software that's what I mean yeah.

84
00:07:46.470 --> 00:08:02.970
Interviewer: yeah Patrick My next question is about contributing, you mentioned that you rely on mailing list and github for accepting Open Source contributions so is there any process for accepting contributions.

85
00:08:04.020 --> 00:08:18.840
Interviewer: For example, github pull requests, is one of them, and maybe mailing list, and maybe how to accept maybe new, how do you accept new members joining your team Those are some examples.

86
00:08:19.200 --> 00:08:24.690
Developer: Right so i'm while the example of the team accepting new members.

87
00:08:24.750 --> 00:08:28.920
Developer: And that's through academic projects.

88
00:08:29.310 --> 00:08:34.050
Developer: yeah get a funding for dedicated developer.

89
00:08:34.260 --> 00:08:35.460
Developer: And that's one way.

90
00:08:35.520 --> 00:08:38.340
Developer: To accept the new members and.

91
00:08:39.900 --> 00:08:43.530
Developer: To accept a any contributions we do it.

92
00:08:45.450 --> 00:08:48.000
Developer: Through github Hello.

93
00:08:49.740 --> 00:08:55.560
Developer: But we we currently don't have a formal guideline.

94
00:08:55.710 --> 00:09:02.070
Developer: But the only way here which we're doing it through github so Paul doing something.

95
00:09:03.870 --> 00:09:11.970
Developer: Paul come in his code primary in the primary github repository and I.

96
00:09:13.320 --> 00:09:26.190
Developer: I do, a contribution through 14 the project and creating pull request and similar to other developers stay for the project and doing pull request to add new features.

97
00:09:27.000 --> 00:09:41.220
Interviewer: yep gotcha My next question is about the background of the of the developers so maybe you can talk a little bit about Paul and the other developers are the panty he grew.

98
00:09:41.700 --> 00:09:42.570
Developer: You mention oh yeah.

99
00:09:42.600 --> 00:09:46.050
Interviewer: So yeah, what are the typical backgrounds out with him.

100
00:09:47.430 --> 00:09:49.770
Developer: So Paul is.

101
00:09:50.820 --> 00:09:53.490
Developer: To my knowledge he's from computer science.

102
00:09:53.550 --> 00:09:55.560
Interviewer: background and then a.

103
00:09:59.460 --> 00:10:05.040
Developer: Pay do his academic research focus is primarily focused on medical imaging.

104
00:10:05.370 --> 00:10:14.490
Developer: Okay, like segmentation and restoration people campus related study so.

105
00:10:15.630 --> 00:10:21.270
Developer: The typical background of developers, I would say, first of all, they.

106
00:10:22.410 --> 00:10:26.850
Developer: They are familiar with, they have experiencing c++ development because.

107
00:10:28.290 --> 00:10:29.730
Developer: Because it case NAB is.

108
00:10:30.840 --> 00:10:42.030
Developer: developed in c++ and that a major library to us took eight years he's reading c++ so it's.

109
00:10:43.200 --> 00:10:49.620
Developer: Very important to have that background, and also because it gets snappy Sir multi.

110
00:10:50.790 --> 00:11:07.140
Developer: platform software, so we we have binaries deliver to Linux windows send them MAC os so so cross platform development is important and also we it's a.

111
00:11:08.370 --> 00:11:22.230
Developer: it's a user, it has a dui component very important part of the software, so the developers, who is familiar with the ui development.

112
00:11:24.120 --> 00:11:25.860
Developer: Especially in c++.

113
00:11:26.220 --> 00:11:39.720
Developer: And also, of course, the another important part is user should be familiar with medical images like having experience working with medical images.

114
00:11:40.530 --> 00:11:44.970
Interviewer: yeah so having experience working with medical images.

115
00:11:46.230 --> 00:11:52.260
Interviewer: So does it mean that we also should have some backgrounds in medical areas.

116
00:11:54.150 --> 00:11:58.440
Developer: Not necessarily because I am example of.

117
00:12:00.510 --> 00:12:06.060
Developer: Of developers that doesn't have too much in medical imaging.

118
00:12:06.540 --> 00:12:08.280
Developer: But at least.

119
00:12:10.470 --> 00:12:14.730
Developer: have some have some kind of knowledge related to image processing.

120
00:12:15.120 --> 00:12:19.740
Developer: Okay, for example, how the image is represented in computer.

121
00:12:20.940 --> 00:12:25.530
Developer: Like and our and about computation or geometry.

122
00:12:25.680 --> 00:12:29.220
Developer: know how the image of being transformed and.

123
00:12:31.500 --> 00:12:37.080
Developer: represented in computer so at least you too familiar with that, but.

124
00:12:38.370 --> 00:12:44.640
Developer: After all, after you start working on this software, because this software is primarily.

125
00:12:45.960 --> 00:12:56.820
Developer: Related to or dedicated to medical image analysis, so the developer must have familiar with the concept there to have a meaningful contribution to the software.

126
00:12:57.420 --> 00:12:58.080
Interviewer: Okay, Patrick.

127
00:13:00.420 --> 00:13:09.030
Interviewer: next question is about the number of users, what is your estimated number of users and how did you come up with that estimate.

128
00:13:10.320 --> 00:13:15.600
Developer: yeah so we don't track the accurate number of user.

129
00:13:15.900 --> 00:13:33.660
Developer: In software and we asked made your or users number of users by downloads estimates is, we have all my binary repository so we can track the downloads number of downloads.

130
00:13:34.740 --> 00:13:40.170
Developer: Each week or monthly or yearly so we have a 5000 downloads a month.

131
00:13:41.310 --> 00:13:41.670
Developer: and

132
00:13:44.040 --> 00:13:49.830
Developer: We estimated that we have a number of user in 10,000 plus.

133
00:13:50.220 --> 00:13:58.590
Interviewer: Okay yeah yeah Actually, I asked for this question for to several people several different several developers in different projects.

134
00:13:59.820 --> 00:14:03.900
Interviewer: it's hard for it's also hard for them to get an accurate number.

135
00:14:04.230 --> 00:14:04.890
Developer: right but.

136
00:14:05.310 --> 00:14:08.070
Interviewer: I think some some a.

137
00:14:09.210 --> 00:14:20.880
Interviewer: konami estimate from the downloads some a estimate from questions on the number of machines on the forums is hard to check the numbers.

138
00:14:20.910 --> 00:14:25.860
Developer: Right right because we don't require user to register for the software.

139
00:14:27.120 --> 00:14:37.980
Developer: We donald's is one thing, another, we have a developer, we have a user group by user group and the size of data factor and estimation.

140
00:14:38.520 --> 00:14:41.610
Interviewer: Okay sorry, what do you mean What do you mean by user group.

141
00:14:41.760 --> 00:14:44.880
Developer: User group, we have a user mounting list.

142
00:14:45.600 --> 00:14:47.460
Developer: Okay cool yeah.

143
00:14:47.520 --> 00:14:54.480
Developer: So that's another factor and the software has also have 2000 plus citations.

144
00:14:54.540 --> 00:14:56.340
Developer: Since 2006.

145
00:14:57.120 --> 00:14:58.260
Interviewer: Okay gotcha.

146
00:14:59.700 --> 00:15:05.310
Interviewer: My next question is about the background of a user what he's a typical background of the user.

147
00:15:06.150 --> 00:15:06.930
Interviewer: I know that story.

148
00:15:07.110 --> 00:15:07.800
Interviewer: yeah go ahead.

149
00:15:08.700 --> 00:15:16.110
Developer: yeah so our user typically working with medical image and.

150
00:15:19.140 --> 00:15:25.830
Developer: Biomedical researchers graduate students medical school students.

151
00:15:26.640 --> 00:15:29.190
Developer: And the research assistance.

152
00:15:29.580 --> 00:15:33.450
Developer: yeah physicians and medical.

153
00:15:35.910 --> 00:15:54.270
Developer: and medical students, that are the those those type of user usually have experienced using we we expect the user to have a spicy experience using like typical productivity software like office and photoshop.

154
00:15:54.540 --> 00:15:57.930
Developer: Okay, and also have experience working with made agreements.

155
00:15:58.320 --> 00:15:59.280
Interviewer: Okay gotcha.

156
00:16:03.240 --> 00:16:12.150
Interviewer: My next question is about the the obstacles, currently, what are the most significant obstacles in your development process.

157
00:16:12.780 --> 00:16:17.610
Developer: yeah so I talked about with with Paul so.

158
00:16:18.630 --> 00:16:31.560
Developer: Currently, for us, the lack of time, especially for him to devote to the software development is a primary obstacle.

159
00:16:33.930 --> 00:16:36.300
Developer: And we also.

160
00:16:38.160 --> 00:16:46.770
Developer: Have a challenge, I think they're a big challenges for us to keeping up with changes in software.

161
00:16:48.150 --> 00:16:54.600
Developer: Especially operating systems upgrading back away, especially MAC os.

162
00:16:54.780 --> 00:17:00.180
Developer: So the development, the environment, changes rapidly so it's hard to.

163
00:17:01.170 --> 00:17:12.060
Developer: Keep up with those changes, sometimes upgrading in operating system can break our software and also we need to keep keep up with the frameworks.

164
00:17:13.230 --> 00:17:22.410
Developer: So, including or GEO GEO frameworks and also upgrading of the itk vt K libraries.

165
00:17:24.990 --> 00:17:32.640
Developer: Also graphic libraries so that's that's two major challenges obstacles.

166
00:17:33.720 --> 00:17:34.020
Interviewer: OK.

167
00:17:35.040 --> 00:17:39.570
Interviewer: So the lack of time, does it have any.

168
00:17:41.010 --> 00:17:46.380
Interviewer: kind of connection orange up with a lack of maybe some beans or resources.

169
00:17:47.040 --> 00:17:51.570
Developer: yeah so for Paul he's always busy because.

170
00:17:51.630 --> 00:17:53.040
Developer: Okay it's a professor.

171
00:17:55.080 --> 00:17:58.920
Developer: And he need to teach and you need to.

172
00:18:00.000 --> 00:18:04.140
Developer: Working on researchers researchers so.

173
00:18:05.700 --> 00:18:19.290
Developer: So that's a major problem for him, even though there is a so funding is the way to solve this because he can hire someone dedicated developer, like me, for this.

174
00:18:20.490 --> 00:18:20.730
Interviewer: Okay.

175
00:18:20.880 --> 00:18:23.970
Developer: He remains a challenge for him yeah.

176
00:18:25.620 --> 00:18:33.960
Interviewer: yeah another challenge you mentioned, he is about is to have created a software two different operating systems.

177
00:18:34.320 --> 00:18:34.710
Developer: yeah to.

178
00:18:34.920 --> 00:18:36.780
Developer: keep up with the changes so yeah.

179
00:18:38.910 --> 00:18:42.540
Interviewer: yeah gotcha i'm curious about the new poll silicon.

180
00:18:43.920 --> 00:18:44.820
Interviewer: mo and chip.

181
00:18:45.600 --> 00:18:46.980
Interviewer: You have I had to.

182
00:18:48.240 --> 00:18:52.710
Interviewer: To make it a software compatible with that with accurate.

183
00:18:52.830 --> 00:18:57.510
Developer: yeah it's a it's based on era architecture right so currently have.

184
00:18:59.670 --> 00:19:05.580
Developer: We currently have one view for MAC ios I believe it can work with.

185
00:19:08.010 --> 00:19:13.770
Developer: I don't remember that framework name that compared that bridge the gap between them one.

186
00:19:14.460 --> 00:19:18.840
Developer: yeah Intel X 86 architecture.

187
00:19:18.900 --> 00:19:31.500
Developer: So okay that's a that's currently we don't have a dedicated to a rm beauty for those but if the user request dedicated build.

188
00:19:31.590 --> 00:19:32.130
Developer: And we can.

189
00:19:32.250 --> 00:19:33.570
Developer: Certainly, work on that.

190
00:19:33.780 --> 00:19:37.200
Developer: occur yeah we don't have we don't have a dedicated beautiful that everyone should.

191
00:19:37.860 --> 00:19:38.220
Okay.

192
00:19:39.540 --> 00:19:41.160
Interviewer: For some other.

193
00:19:42.420 --> 00:19:52.980
Interviewer: projects and most of the majority, maybe the minority of the 29 packages, I think there are maybe four or five of them, they chose to.

194
00:19:54.000 --> 00:19:57.060
Interviewer: develop the software as web Apps.

195
00:19:57.720 --> 00:20:01.230
Developer: So, whether yeah yeah you see it's easier to make them.

196
00:20:01.260 --> 00:20:09.060
Interviewer: Cross platform, but maybe there is a job in the performance i'm not sure that's my assumption.

197
00:20:09.330 --> 00:20:10.560
Developer: Right, what are the.

198
00:20:10.830 --> 00:20:11.790
Interviewer: pros and cons.

199
00:20:11.940 --> 00:20:14.430
Developer: Of it yeah web APP is very good.

200
00:20:15.480 --> 00:20:17.370
Developer: Cross platform idea.

201
00:20:18.630 --> 00:20:24.750
Developer: I think we also have part of the software committed as distributed computing.

202
00:20:26.490 --> 00:20:35.100
Developer: Similar to web APP we have server we have a a scalable distributed segmentation service.

203
00:20:35.220 --> 00:20:46.050
Developer: Okay, so we we let user to configure it as a service for like specific.

204
00:20:48.240 --> 00:20:53.640
Developer: To to to upload or to configure a specific algorithm.

205
00:20:53.670 --> 00:20:54.600
Developer: To order your.

206
00:20:55.770 --> 00:20:56.700
Developer: segmentation.

207
00:20:57.030 --> 00:20:59.400
Developer: So that's that's that's a.

208
00:21:00.000 --> 00:21:16.860
Developer: While, for example, is still using the Web as a solution for user that's a I think that's that is a kind of supplemental to measure it gets now because I think is an obvious generalized.

209
00:21:17.250 --> 00:21:19.920
Developer: yeah and so quite focused.

210
00:21:22.650 --> 00:21:33.090
Developer: On segmentation generalize the segmentation but user have a specific like, for example, automated segmentation for a specific organ.

211
00:21:34.110 --> 00:21:35.760
Developer: Nick and Nick and configure that.

212
00:21:36.180 --> 00:21:37.530
Developer: So that's that's a.

213
00:21:37.590 --> 00:21:42.570
Developer: that's a supplement our distributor segmentation and service we're using.

214
00:21:43.650 --> 00:21:50.610
Developer: web APP the primary obstacle or using web APP for us is performance.

215
00:21:51.120 --> 00:21:55.890
Developer: Okay, because because maybe the image analysis can be very.

216
00:21:57.210 --> 00:21:58.020
Developer: expensive.

217
00:21:59.040 --> 00:22:02.070
Developer: And, and also user.

218
00:22:03.120 --> 00:22:04.410
Developer: care about their.

219
00:22:06.060 --> 00:22:07.110
Developer: data security.

220
00:22:07.470 --> 00:22:08.760
Developer: They don't want to upload.

221
00:22:09.840 --> 00:22:14.340
Developer: medical data, sometimes involving patient information.

222
00:22:15.420 --> 00:22:32.760
Developer: To servers without any protection and they have a reasonable doubt about security and privacy information issues so it's a more practical for us to.

223
00:22:34.200 --> 00:22:37.890
Developer: To be to work on local or like domestic.

224
00:22:39.600 --> 00:22:39.900
Interviewer: yeah.

225
00:22:40.260 --> 00:22:42.090
Developer: That local software, instead of.

226
00:22:42.390 --> 00:22:45.030
Developer: Technology and we use we use.

227
00:22:46.020 --> 00:22:47.340
c++.

228
00:22:49.050 --> 00:22:50.160
Developer: To too.

229
00:22:52.950 --> 00:23:05.970
Developer: So c++ of cross platform right and we use a si si make to make sure the building process is consistent across different platform so yeah.

230
00:23:07.020 --> 00:23:08.070
Interviewer: yeah gotcha.

231
00:23:10.950 --> 00:23:16.050
Interviewer: yeah I mean c++ C path has is much, much faster than javascript.

232
00:23:16.530 --> 00:23:18.660
Developer: yeah yeah exactly yeah yeah.

233
00:23:19.320 --> 00:23:35.580
Interviewer: And that's right, and if you, you mentioned that you also provide some services has has segmentation as service or in the server is that hey we event like a backend server.

234
00:23:36.180 --> 00:23:37.620
Developer: Yes, there's a backend server.

235
00:23:39.360 --> 00:23:43.680
Developer: We have a server establish or the APP.

236
00:23:44.340 --> 00:23:45.060
Developer: yeah so when.

237
00:23:45.540 --> 00:23:46.020
Developer: We request.

238
00:23:46.050 --> 00:23:51.540
Interviewer: yeah i'm just curious what kind of technology, two years to develop develop this back end.

239
00:23:53.760 --> 00:24:06.420
Developer: Java i'm not too familiar with this, so I I think most of the core computing is consistent with it gets nervous using c++.

240
00:24:06.780 --> 00:24:11.910
Developer: and using it okay and video libraries to do the backend computing.

241
00:24:13.080 --> 00:24:14.490
Developer: And we use.

242
00:24:15.840 --> 00:24:17.220
Developer: http protocol.

243
00:24:17.250 --> 00:24:19.170
Developer: For user to submit.

244
00:24:20.700 --> 00:24:28.230
Developer: to submit a request through itk snap and and this primary coding c++ also were used.

245
00:24:30.630 --> 00:24:31.980
Developer: For example, we use.

246
00:24:33.090 --> 00:24:38.550
Developer: curl library to do the communication between server and.

247
00:24:40.560 --> 00:24:41.130
Interviewer: Okay gotcha.

248
00:24:41.190 --> 00:24:42.030
Developer: Line yeah.

249
00:24:42.570 --> 00:24:44.310
Interviewer: yeah that's just for my curiosity.

250
00:24:45.150 --> 00:24:47.460
Interviewer: But yeah yeah most folks are.

251
00:24:48.660 --> 00:24:51.120
Developer: Using too much javascript.

252
00:24:51.630 --> 00:25:04.740
Developer: Okay, we yeah so there, there are some javascript like testing component to test the user interface but yeah primary c++.

253
00:25:05.460 --> 00:25:08.790
Interviewer: catcher some other developers also mentioned that.

254
00:25:11.130 --> 00:25:29.310
Interviewer: Due to the privacy of the patients sometimes they don't have enough access to all these medical images so sometimes it's hard for them to to do a very good test for their new features, did you face the same problem.

255
00:25:30.390 --> 00:25:54.540
Developer: yeah absolutely so it's a while the primary issue for medical image software, because we don't have a full access to user different kinds of user data so sometimes when user have some issue reported and we work on willing asked them to provide some sample data.

256
00:25:54.900 --> 00:25:56.550
Developer: We cannot ask them to provide.

257
00:25:56.880 --> 00:26:09.960
Developer: Real patient data it's not it's not permitted it's not ethical So yes, definitely you know, one of the problem about the challenges I will say.

258
00:26:11.100 --> 00:26:13.710
Developer: To that being medical English software.

259
00:26:15.210 --> 00:26:20.040
Interviewer: yeah yeah i've heard about these campaigns based campaign from.

260
00:26:21.840 --> 00:26:23.820
Interviewer: Almost every development group.

261
00:26:24.240 --> 00:26:25.230
Interviewer: yeah one of the.

262
00:26:25.470 --> 00:26:30.990
Interviewer: One of the group they we have a very good connection I think that's a.

263
00:26:32.850 --> 00:26:41.160
Interviewer: Maybe a medical worker with a very big it has had so every time before the releasing of a new feature.

264
00:26:41.520 --> 00:26:44.820
Interviewer: me just sent the beta beta version to that.

265
00:26:44.850 --> 00:26:49.260
Interviewer: Medical work Oh, and that person can do the test and the huge.

266
00:26:49.290 --> 00:26:51.600
Developer: data sets that's great idea.

267
00:26:51.990 --> 00:26:54.000
Developer: We we also.

268
00:26:54.240 --> 00:26:56.460
Developer: were part of the Medical School and the House.

269
00:26:56.490 --> 00:26:57.900
Developer: Okay system so.

270
00:26:59.130 --> 00:27:01.800
Developer: So we probably don't need.

271
00:27:02.880 --> 00:27:11.610
Developer: User for to test for us, but we also have a lot of resource to test, because we have access to patient data.

272
00:27:12.000 --> 00:27:15.720
Developer: So that's one of the benefits of working directly from a medical school.

273
00:27:16.620 --> 00:27:17.760
Interviewer: yeah definitely.

274
00:27:18.210 --> 00:27:19.620
Developer: yeah we we.

275
00:27:19.650 --> 00:27:19.830
Interviewer: Have.

276
00:27:20.160 --> 00:27:23.940
Developer: A very but a user about a.

277
00:27:25.650 --> 00:27:33.780
Developer: patient information is most important thing, the privacy of the medical image.

278
00:27:34.050 --> 00:27:36.390
Developer: The patient information.

279
00:27:37.470 --> 00:27:43.140
Developer: is a crucial when we're dedicated to protect us information.

280
00:27:43.830 --> 00:27:46.650
Interviewer: yeah okay My next question is about.

281
00:27:48.000 --> 00:27:55.680
Interviewer: The about the two the two episodes you just mentioned, like over time and have to come up with.

282
00:27:56.820 --> 00:28:09.030
Interviewer: Different operating systems and then new libraries so it's about your development process, how much you change your development process to remove or use these obstacles.

283
00:28:10.560 --> 00:28:16.500
Developer: So I mean documentation right, so one.

284
00:28:17.670 --> 00:28:19.080
Developer: One way we.

285
00:28:20.580 --> 00:28:27.810
Developer: So the obstacle, I mean the time devoted developer, we need more funding.

286
00:28:28.050 --> 00:28:29.190
Developer: Obviously, to.

287
00:28:29.610 --> 00:28:31.980
Developer: address that but for.

288
00:28:33.210 --> 00:28:33.630
Developer: Like.

289
00:28:35.190 --> 00:28:41.100
Developer: For user understanding user request we develop documentation.

290
00:28:42.360 --> 00:28:43.170
Developer: Detailed.

291
00:28:44.250 --> 00:28:48.150
Developer: documentation and the region and video tutorial.

292
00:28:48.600 --> 00:28:51.000
Developer: We have a lot of tutorial for user.

293
00:28:51.660 --> 00:29:01.320
Developer: meet you and written documentation for them to learn the software, we also have some I believe we have multiple.

294
00:29:02.550 --> 00:29:09.630
Developer: onsite sessions remote onsite sessions to help user training session to help you, Sir, to use their software.

295
00:29:09.930 --> 00:29:12.990
Developer: Okay yeah so that's that's the documentation or.

296
00:29:13.530 --> 00:29:13.800
yeah.

297
00:29:15.540 --> 00:29:18.690
Interviewer: I do, fail to feel that there's.

298
00:29:19.770 --> 00:29:23.460
Interviewer: there's documentation can really save your time.

299
00:29:24.540 --> 00:29:26.790
Developer: yeah obviously so.

300
00:29:30.000 --> 00:29:37.650
Developer: So if a user have some request for a question submitted in or user my list.

301
00:29:38.700 --> 00:29:45.300
Developer: So we can, if it's addressing our documentation, we can send a link to them.

302
00:29:47.130 --> 00:30:00.630
Developer: Video or tutorial to help them to understand these concepts so that's definitely saves a lot of time, by avoiding to explain same concept, again and again.

303
00:30:02.370 --> 00:30:09.810
Interviewer: Okay, so you mentioned that next question here is about the documentation your your project, you mentioned that you have tutorials.

304
00:30:10.260 --> 00:30:17.130
Interviewer: You also have Madani maybe taxes oreos also video tutorials.

305
00:30:17.400 --> 00:30:19.350
Interviewer: You have a session helping users.

306
00:30:20.820 --> 00:30:33.240
Interviewer: Can you talk more about your documentation, how does the documentation fit in your development process, not only the documentation for users, but also maybe donation for developers.

307
00:30:33.750 --> 00:30:46.470
Developer: yeah so debilitation for way we currently lack the documentation for developers, because the primary developer was.

308
00:30:47.610 --> 00:30:51.750
Developer: Only Paul so he understand everything.

309
00:30:52.110 --> 00:31:07.710
Developer: yeah and they are not the development team we're never too big so so so we lack kind of document to highlight documentation for the developers because there's not a.

310
00:31:08.250 --> 00:31:18.750
Developer: necessity for that, but if we, for example, if they bring me on board more than they bring more developer or open source developer, we definitely need.

311
00:31:19.530 --> 00:31:30.330
Developer: Some time at least high level documentation for developer, to contribute to the code to understand the code base the architecture of the software yeah so I, I think.

312
00:31:31.530 --> 00:31:34.590
Developer: High Level documentation is definitely needed right now.

313
00:31:35.280 --> 00:31:36.390
Developer: Okay, is that issue.

314
00:31:36.930 --> 00:31:45.180
Interviewer: Okay uh personally myself I don't have I haven't run any Open Source project.

315
00:31:46.770 --> 00:32:07.530
Interviewer: rely on the computer contributions of other Open Source developers, but from your experience, do you think a bad her documentation for the developers can can maybe attract more open source developers to to create or contributions to their project.

316
00:32:07.920 --> 00:32:10.770
Developer: Yes, definitely way believe.

317
00:32:11.820 --> 00:32:13.350
Developer: Better documentation.

318
00:32:14.640 --> 00:32:17.550
Developer: can make more developers that.

319
00:32:19.890 --> 00:32:32.640
Developer: Can 10 reduce the confusion about the developers about this project so more developers are willing and are have a way to learn and.

320
00:32:33.960 --> 00:32:39.690
Developer: Have a have a documentation we help them better understand and to.

321
00:32:40.980 --> 00:32:42.660
Developer: get on board quickly.

322
00:32:42.840 --> 00:32:51.690
Developer: So definitely can attract more developers to contribute to the software, because if they have a confusion.

323
00:32:52.680 --> 00:33:10.680
Developer: They feel is too difficult to understand the software without a documentation made sometimes if they can stop contributing or if he was too too much obstacles to contribute to the software, because I think is now is a huge software.

324
00:33:11.700 --> 00:33:14.820
Developer: yeah it's a it's a large code base and.

325
00:33:15.930 --> 00:33:25.560
Developer: Some some some degree to some degrees, the code base the architecture is complicated so documentation can definitely help.

326
00:33:26.340 --> 00:33:40.320
Interviewer: Okay gotcha My next question is about the obstacles in the past, your past, is there any major obstacle to your development process that has been solved and how did you solve it.

327
00:33:41.010 --> 00:33:44.070
Developer: So I discussed that with Paul.

328
00:33:44.430 --> 00:34:03.180
Developer: And so, he mentioned that the major obstacles was well the major obstacles was the to phase out like two phased out of the fl tk that's a July work platform.

329
00:34:03.600 --> 00:34:06.690
Developer: All so you want to.

330
00:34:08.310 --> 00:34:24.180
Developer: Get rid of that and to adapt to a new, more modern technology for July and that's one of the major obstacles for the development and he spent a lot of effort on addressing it.

331
00:34:25.620 --> 00:34:28.620
Developer: He solved it by.

332
00:34:30.480 --> 00:34:34.260
Developer: To to move it to using cutie cutie.

333
00:34:35.910 --> 00:34:36.420
Developer: that's a.

334
00:34:37.590 --> 00:34:38.880
Developer: July platform.

335
00:34:40.110 --> 00:34:45.420
Developer: For c++ and they move into cutie and break.

336
00:34:46.950 --> 00:34:48.390
Developer: July code.

337
00:34:49.020 --> 00:34:50.310
Developer: To make sure.

338
00:34:51.750 --> 00:34:56.100
Developer: To make sure the business logic, the computation not logic is.

339
00:34:57.660 --> 00:34:58.350
Developer: coped.

340
00:34:59.670 --> 00:35:01.800
Developer: detached from the ui.

341
00:35:02.250 --> 00:35:05.310
Developer: Framework hello, so in a future.

342
00:35:05.850 --> 00:35:10.350
Developer: you've seen same issue coming up, we can.

343
00:35:11.910 --> 00:35:20.610
Developer: adapt to a new your platform better platform, without having to change too much or kobe's.

344
00:35:21.960 --> 00:35:35.370
Interviewer: yeah that sounds very interesting I didn't know that the ui components can be close closely, coupled with the core logics.

345
00:35:36.150 --> 00:35:39.060
Developer: So yeah a bad design or.

346
00:35:39.840 --> 00:35:41.670
Developer: design that doesn't.

347
00:35:42.690 --> 00:35:54.660
Developer: Consider, too much about the upgrading and the maintenance of a framework, a easily a coded to closely code those together.

348
00:35:55.200 --> 00:36:04.110
Developer: Can sample have some primary business logic closely depending on some feature of specific July platform.

349
00:36:04.830 --> 00:36:08.520
Developer: as well to Israel can cause problem.

350
00:36:09.120 --> 00:36:21.930
Interviewer: Okay, thanks My next question is about the software development model is there any specific model you use praise i'm hoping, maybe waterfall or maybe sometimes we use a channel.

351
00:36:23.130 --> 00:36:23.880
Developer: yeah so.

352
00:36:25.590 --> 00:36:26.190
Developer: We.

353
00:36:27.450 --> 00:36:28.890
Developer: Because we are small group.

354
00:36:30.630 --> 00:36:41.370
Developer: And mostly a single developer is contributing to that, so I believe we don't have a strict definition of the model.

355
00:36:41.880 --> 00:36:46.230
Developer: But from my observation we're primarily doing it.

356
00:36:47.940 --> 00:36:48.870
Developer: on demand.

357
00:36:49.710 --> 00:36:51.000
Developer: But we're using.

358
00:36:53.130 --> 00:36:55.050
Developer: something close to agile.

359
00:36:56.640 --> 00:36:59.520
Developer: Like to a developer working version.

360
00:36:59.760 --> 00:37:00.720
In the actually.

361
00:37:01.950 --> 00:37:08.610
Developer: it's necessary as small as necessary functionality and down we do continuous integration.

362
00:37:09.030 --> 00:37:16.680
Developer: And improvement after work yeah, so I think it's more close to it Oh, by the way, those tricky their deployment.

363
00:37:17.400 --> 00:37:22.290
Interviewer: yeah yeah I interviewed several groups and the further smaller ones.

364
00:37:23.670 --> 00:37:24.780
Interviewer: It definitely.

365
00:37:26.520 --> 00:37:44.130
Interviewer: We are we are try to adapt to the development according to their own schedules, because of the limited developers some even call it case kiss keep it simple stupid, I think.

366
00:37:45.420 --> 00:37:48.330
Interviewer: Just whenever there's a feature request.

367
00:37:48.600 --> 00:37:49.710
Interviewer: Yes, go ahead yeah.

368
00:37:51.720 --> 00:38:06.630
Developer: We kind of agree with that, because it's a starting involve a lot of developers so it's not like a large organization, they need to they need to keep it consistent through groups.

369
00:38:07.980 --> 00:38:13.530
Developer: And we kind of like small group we kind of have a small group benefits.

370
00:38:14.100 --> 00:38:16.500
Developer: it's okay so benefit with about being in small groups.

371
00:38:16.680 --> 00:38:21.750
Developer: You can kind of have freedom in choosing not strictly defined your.

372
00:38:22.920 --> 00:38:29.070
Developer: model without breaking any slowing down the process, I mean yeah.

373
00:38:30.090 --> 00:38:41.670
Interviewer: Okay next question is about the project management process, what is your project management process if there is no specific you went Maybe you can talk about how you plan your.

374
00:38:42.600 --> 00:38:57.240
Interviewer: New features how how you plan your works and the do think improve improving this process can tackle the current problems such as a lack of time, and to to be.

375
00:38:58.530 --> 00:39:03.540
Interviewer: keeping up with different operating systems and i've arranged such problems.

376
00:39:05.670 --> 00:39:06.180
Developer: I think.

377
00:39:07.860 --> 00:39:09.630
Developer: Because we have small room.

378
00:39:09.750 --> 00:39:19.920
Developer: And it used to be one developer group so a lot of request is handled by ad hoc basis so it's like on demand.

379
00:39:20.790 --> 00:39:23.310
Developer: When users may request or we address it.

380
00:39:23.940 --> 00:39:25.560
Developer: Come a code for branch.

381
00:39:25.620 --> 00:39:27.570
Developer: it's like it's more like a.

382
00:39:27.870 --> 00:39:37.140
Developer: Some developers personal project like came up something your college committed committed to the coordinates.

383
00:39:38.580 --> 00:39:43.170
Developer: But, for me, because i'm a dedicated developer.

384
00:39:44.460 --> 00:39:50.400
Developer: I am expecting I approach it as more like a.

385
00:39:51.450 --> 00:39:53.280
Developer: project management approach.

386
00:39:54.570 --> 00:40:08.370
Developer: To help a song, so I have my own system to manage projects example we I I am my backlog to track issues.

387
00:40:08.850 --> 00:40:22.470
Developer: to track the task I currently have and the prioritize tasks and during I I do weekly sprint so I so for forever for each week.

388
00:40:23.490 --> 00:40:23.970
Developer: I.

389
00:40:25.320 --> 00:40:37.440
Developer: talk with my manager about the priority of tasks and I prioritize those and try and I have word I use travel.

390
00:40:39.000 --> 00:40:44.130
Developer: to update my status and all our other stakeholders like.

391
00:40:45.180 --> 00:40:52.080
Developer: My managers and Paul on this board, they can see the progress of tasks so that's a.

392
00:40:53.490 --> 00:40:56.520
Developer: that's my way to manage projects.

393
00:40:56.850 --> 00:40:58.920
Developer: But we don't we don't have a.

394
00:40:59.010 --> 00:41:02.910
Developer: fall away and mostly for.

395
00:41:05.340 --> 00:41:08.460
Developer: Especially for the for the feature request.

396
00:41:09.510 --> 00:41:20.550
Developer: not related to the ongoing major project example bug fixes or a feature request by the user we're doing it on your mind.

397
00:41:21.180 --> 00:41:21.540
Okay.

398
00:41:23.340 --> 00:41:24.690
Interviewer: yeah I do have a.

399
00:41:27.480 --> 00:41:38.190
Interviewer: Do have any plans for for for the gaps between each release, for example, some groups, they have a really thin paste.

400
00:41:39.630 --> 00:41:47.910
Interviewer: set to every six months, do you have any plans for how long we should take for for an extra virgin.

401
00:41:48.960 --> 00:41:55.770
Developer: yeah we have plans but it's a it's not specifically focused on the software is not.

402
00:41:55.770 --> 00:41:58.380
Developer: The focus on the project because.

403
00:41:59.460 --> 00:42:02.850
Developer: Because I my my position was.

404
00:42:04.260 --> 00:42:08.640
Developer: founded by Chen Burke initiative project.

405
00:42:09.240 --> 00:42:14.970
Developer: And that focused on this, what I mentioned the bio mechanics analysis of.

406
00:42:15.090 --> 00:42:17.730
Developer: Using using snap us with tour so.

407
00:42:18.780 --> 00:42:22.230
Developer: For that project we have timeline depend define.

408
00:42:22.860 --> 00:42:24.330
Developer: Like how.

409
00:42:25.020 --> 00:42:33.240
Developer: For several months, we want to release software version stuff like that so it's a more like project base.

410
00:42:34.650 --> 00:42:34.860
Developer: yeah.

411
00:42:34.950 --> 00:42:35.310
Okay.

412
00:42:37.530 --> 00:42:45.690
Interviewer: yeah and how do you pro or a ties different tasks, I mean there must be different features requested by different users.

413
00:42:46.080 --> 00:42:48.300
Interviewer: How do you decide which ones are more important.

414
00:42:49.350 --> 00:42:51.810
Developer: yeah that's a good question we.

415
00:42:53.880 --> 00:43:02.160
Developer: So for project I closely communicate with the with my manager, which is the.

416
00:43:03.810 --> 00:43:07.500
Developer: Primary investigator of the current project and so.

417
00:43:08.730 --> 00:43:10.260
Developer: it's based on their needs.

418
00:43:10.470 --> 00:43:12.600
Developer: So what function what.

419
00:43:12.600 --> 00:43:14.190
Developer: features, you need most.

420
00:43:15.540 --> 00:43:20.160
Developer: I would definitely give you the higher priority and otherwise.

421
00:43:23.010 --> 00:43:36.150
Developer: From user request from former staff users general stamp users, they send a box and the features, so we like kind of prioritize it by how.

422
00:43:37.230 --> 00:43:39.810
Developer: How severe the bug.

423
00:43:40.350 --> 00:43:41.700
Developer: And what consequence.

424
00:43:41.730 --> 00:44:00.630
Developer: The bug can cost and user or sometimes can can say it's a it's a very urgent where our paper to some major but it's not working, please address it that's kind of urgent but it's also related to the isn't as of the.

425
00:44:01.890 --> 00:44:13.230
Developer: fix if it's a involved a large deep functionality change code base change we probably will not give it a very high priority, because he.

426
00:44:13.230 --> 00:44:15.420
Developer: can affect a lot of things, but.

427
00:44:15.570 --> 00:44:18.480
Developer: For easy fix we usually do it quickly.

428
00:44:19.140 --> 00:44:28.530
Interviewer: Okay, thanks My next question is about the correctness of software software, was it hard to ensure the correctness of the software.

429
00:44:29.430 --> 00:44:43.560
Interviewer: If if there were any obstacles what mathers have been considered or practice to improve the situation if a practice did who did it work I I mentioned that some projects, they mentioned that.

430
00:44:45.090 --> 00:44:57.480
Interviewer: They don't have enough access to to the medical images so it's hard for them to do the tests, but for your project, maybe there are some other different kinds of obstacles.

431
00:44:58.590 --> 00:45:02.820
Developer: yeah so the lack of real.

432
00:45:04.050 --> 00:45:06.990
Developer: Real word image data is only one.

433
00:45:08.760 --> 00:45:09.720
Developer: obstacle was.

434
00:45:10.770 --> 00:45:16.980
Developer: Another challenge for us is, I believe, is also a challenge for.

435
00:45:19.290 --> 00:45:23.880
Developer: Other software is we don't have a dedicated group to test the software.

436
00:45:24.150 --> 00:45:27.690
Developer: I get a commercial software, they have a QA group QA team.

437
00:45:28.950 --> 00:45:32.640
Developer: With dedicated skill set to test a software.

438
00:45:33.000 --> 00:45:34.860
Developer: yeah for the.

439
00:45:36.030 --> 00:45:40.980
Developer: For the Open Source academic software, we mostly tested.

440
00:45:42.090 --> 00:45:55.110
Developer: Developed mostly tested by developers, so we lack the dedicated resource to test or software that's primarily one one challenges, otherwise.

441
00:45:56.460 --> 00:45:57.900
Developer: Medical imaging.

442
00:45:59.010 --> 00:46:12.300
Developer: Software data using this kind of software can be very large I mean is sometimes we have a one image have a gigabytes of size so.

443
00:46:14.580 --> 00:46:16.470
Developer: testing is very expensive.

444
00:46:17.610 --> 00:46:23.070
Developer: For example, we cannot attach gigabytes of data to the software package.

445
00:46:23.550 --> 00:46:26.190
Developer: to test a user's computer.

446
00:46:26.760 --> 00:46:28.470
Developer: So we have to.

447
00:46:29.610 --> 00:46:36.780
Developer: And under this kind of test it's time consuming so it's expensive it's another.

448
00:46:38.580 --> 00:46:42.180
Developer: it's another obstacle or a challenge for us.

449
00:46:43.500 --> 00:46:49.230
Developer: To overcome this challenge, we we use we've done of.

450
00:46:50.790 --> 00:46:51.600
Developer: Work on.

451
00:46:52.650 --> 00:46:55.410
Developer: How to have a sample data.

452
00:46:55.800 --> 00:47:05.070
Developer: They represent general use case so again a smaller sample data to implemented and also.

453
00:47:06.210 --> 00:47:20.310
Developer: To address that the limited resource issue we use frameworks testing frameworks do automated testing regression testing, so we were raised some.

454
00:47:20.880 --> 00:47:42.060
Developer: automated testing code integrating into the project, how was testing code automatically so on viewed and can help us save a lot of time, especially doing cross platform testing, we were you see test and see dash.

455
00:47:42.510 --> 00:47:44.460
Developer: Do help us.

456
00:47:44.550 --> 00:47:48.810
Developer: conduct all the money testing cross platform.

457
00:47:49.200 --> 00:47:50.970
Developer: huh yeah so.

458
00:47:52.710 --> 00:47:57.930
Developer: We also have a ui testing scripts I mentioned so.

459
00:47:59.010 --> 00:48:01.410
Developer: For a limited set of scenarios.

460
00:48:03.990 --> 00:48:11.460
Developer: So they can simulate user click on the user interface so that that can.

461
00:48:13.410 --> 00:48:30.420
Developer: it's kind of a replacement for real user to test it for a real person like a QA person clicked on that so that's that's another test, and we want to do more.

462
00:48:31.890 --> 00:48:39.060
Developer: test driven development like strictly test based to focus more on test.

463
00:48:40.140 --> 00:48:42.720
Developer: To to read to.

464
00:48:46.320 --> 00:48:50.550
Developer: Follow I mean to have a more strict approach to that, but.

465
00:48:53.070 --> 00:48:59.160
Developer: We have to balance that with the efficiency, the we cannot spend.

466
00:49:00.180 --> 00:49:07.320
Developer: Too much time on that too, because we have a timeline for project, but we definitely want to do more testing.

467
00:49:09.060 --> 00:49:09.780
Interviewer: Sure, Patrick.

468
00:49:11.130 --> 00:49:11.460
Interviewer: yeah.

469
00:49:12.690 --> 00:49:28.500
Interviewer: next question is about the maintain ability of the software when designing those folks who were did you consider the use of future change, for example, where it'd be hard to change the structure of the system modules or maybe code crowds over the software.

470
00:49:29.400 --> 00:49:35.700
Developer: Yes, So yes, as I mentioned, Paul design architecture.

471
00:49:36.810 --> 00:49:37.590
Developer: To.

472
00:49:39.990 --> 00:49:42.630
Developer: decoder architecture between July models.

473
00:49:42.690 --> 00:49:47.490
Developer: yeah frameworks and and a business logic so.

474
00:49:49.560 --> 00:49:56.100
Developer: So when I update in July and frameworks use will not affect or.

475
00:49:57.240 --> 00:49:59.940
Developer: When we're not affect too much code base.

476
00:50:00.000 --> 00:50:03.990
Developer: So that's a that's that's our primary designed to address them.

477
00:50:04.530 --> 00:50:06.000
Developer: intangibility issue.

478
00:50:07.050 --> 00:50:09.870
Developer: So, to have a pretty much difficult.

479
00:50:11.340 --> 00:50:12.120
Developer: structure.

480
00:50:13.020 --> 00:50:15.780
Developer: yeah so we can have a dedicated focused.

481
00:50:17.010 --> 00:50:18.840
Developer: Co change to the project.

482
00:50:20.070 --> 00:50:21.180
Interviewer: Okay, thanks.

483
00:50:23.700 --> 00:50:25.980
Interviewer: next question is about the.

484
00:50:27.270 --> 00:50:29.430
Interviewer: They understand the ability, with our software.

485
00:50:29.910 --> 00:50:33.360
Interviewer: Can you provide some instances where users.

486
00:50:33.930 --> 00:50:38.490
Interviewer: have misunderstood as well for were some examples, maybe.

487
00:50:39.660 --> 00:50:44.490
Interviewer: Users Mr and Miss understand the purpose of the software.

488
00:50:44.850 --> 00:50:45.060
Developer: Yes.

489
00:50:45.090 --> 00:50:51.630
Interviewer: Or maybe some assumptions of the high cons other software, such as I hear that.

490
00:50:51.990 --> 00:50:52.890
Developer: yeah so.

491
00:50:54.480 --> 00:51:07.920
Developer: I think is is pretty much the vision, I mean that the design philosophy of this software is to have a easy to use, easy to learn.

492
00:51:10.500 --> 00:51:11.520
Developer: General.

493
00:51:13.230 --> 00:51:32.040
Developer: To focus on general image segmentation so it's very focused, so the feature is very focused on image segmentation general email segmentation and there's some users, sometimes can have a very specific request example, can you do this.

494
00:51:33.060 --> 00:51:34.920
Developer: Brain or can do this.

495
00:51:37.530 --> 00:51:39.720
Developer: Specific Oregon image.

496
00:51:41.220 --> 00:51:55.080
Developer: I think that's a while, for example, user Mr understanding the purpose of the software is not designed for specific organ or specifically modalities it's more like General last.

497
00:51:57.270 --> 00:52:00.030
Developer: image segmentation solar.

498
00:52:00.990 --> 00:52:02.310
Interviewer: Okay, so.

499
00:52:03.420 --> 00:52:05.190
Interviewer: Has there been any actions.

500
00:52:06.390 --> 00:52:09.360
Interviewer: To improve with the understand ability.

501
00:52:09.780 --> 00:52:11.070
Developer: yeah so we.

502
00:52:12.270 --> 00:52:17.760
Developer: As mentioned, we have a very detailed documentation user documentation.

503
00:52:18.780 --> 00:52:42.210
Developer: tutorial to help the user understand the purpose of software, we have exercises designed for user to use it, we also have a user mailing list as a forum like discussing group for user to discuss any questions will answer or other user will answer it so that's a.

504
00:52:43.920 --> 00:52:57.330
Developer: tool primary way, and also the software is designed to be intuitive so we can we kind of integrated into our July design logic designed to help the user understand or.

505
00:52:58.470 --> 00:53:00.450
Developer: So the feature is very focused.

506
00:53:00.960 --> 00:53:04.290
Developer: Okay, so that can help the user understand the purpose.

507
00:53:05.250 --> 00:53:10.860
Interviewer: catcher next question is about the usability, you mentioned that you value the.

508
00:53:12.300 --> 00:53:29.850
Interviewer: The ease of use of the software and you also to attempt to improve with the July part make it intuitive can you talk about more of an actions have been taken to improve the usability.

509
00:53:31.020 --> 00:53:39.480
Developer: yeah so usability, as mentioned the way we primarily use the user group user mounting this.

510
00:53:39.570 --> 00:53:41.880
Developer: For using discussed features, they need.

511
00:53:42.810 --> 00:53:44.730
Developer: We also have a bug and.

512
00:53:46.080 --> 00:53:59.790
Developer: issue trackers for user to submit any bug or issue is they, they they they have using this more so that's that's a that's a primary actions taken for address that usability.

513
00:54:00.150 --> 00:54:02.850
Developer: And also, we were focused on were designed to be easy to.

514
00:54:02.880 --> 00:54:11.880
Developer: Use so that's our kind of your design philosophy we want to hurry, we want our software to be easy to use.

515
00:54:12.000 --> 00:54:14.640
Developer: Like I can hide functionality through.

516
00:54:15.030 --> 00:54:23.400
Developer: Specific area where don't require user to have any coding knowledge and.

517
00:54:26.580 --> 00:54:35.670
Developer: And it's very intuitively design interface very straightforward with focused limited functionality.

518
00:54:36.960 --> 00:54:43.860
Interviewer: yeah can you talk more two more about the philosophy of being easy to use.

519
00:54:45.570 --> 00:54:53.160
Interviewer: I know that for some software, the folks to provide the all kinds of functions to their users.

520
00:54:53.220 --> 00:54:55.920
Interviewer: Yes, is that the same for education that.

521
00:54:56.370 --> 00:54:58.680
Developer: I know we're very focused.

522
00:54:58.980 --> 00:55:01.380
Developer: On their focus, so one way to.

523
00:55:01.650 --> 00:55:05.880
Developer: One way for us to keep our software easy to use is to limit.

524
00:55:07.020 --> 00:55:14.040
Developer: or or no, no word focus or effort addressing specific image.

525
00:55:14.280 --> 00:55:18.000
Developer: Processing problem which is image segmentation.

526
00:55:18.420 --> 00:55:18.570
Interviewer: and

527
00:55:18.630 --> 00:55:20.520
Developer: The way we like.

528
00:55:24.000 --> 00:55:33.960
Developer: What we can we keep all those features in line with this vision, so we want to make it focused minimized.

529
00:55:34.110 --> 00:55:35.490
Developer: and easy to learn.

530
00:55:36.000 --> 00:55:37.530
Developer: So that's our philosophy.

531
00:55:37.920 --> 00:55:43.410
Developer: Now the way we don't want to talk about a tool much features that sometimes are not necessary.

532
00:55:43.680 --> 00:55:50.580
Developer: or not directly related to a segmentation or being too specific tool.

533
00:55:51.870 --> 00:56:06.960
Developer: To a specific like Oregon or modality, or something where we don't want it to be too, we want to minimize the feature creep it's not going to include too many things to confuse user.

534
00:56:08.040 --> 00:56:21.030
Interviewer: yeah okay next question is about the documentation you already mentioned that you think of after you provide good documentation to our users, maybe not has good documentation to the developers.

535
00:56:21.360 --> 00:56:22.710
Interviewer: But maybe you can.

536
00:56:23.430 --> 00:56:40.080
Interviewer: talk a little bit more about it, do you think you do think of the character documentation can clearly convey or necessary knowledge to the users, if he has how did you successfully achieve it if know what improvements are needed.

537
00:56:41.010 --> 00:56:53.130
Developer: yeah I I do think we, or a current user documentation is can can be necessary knowledge or user because his very detailed.

538
00:56:53.490 --> 00:56:57.510
Developer: So, first of all, or software is very focused.

539
00:56:57.990 --> 00:57:00.780
Developer: So it doesn't have a tool many things.

540
00:57:01.080 --> 00:57:06.000
Developer: to teach to teach users, so we.

541
00:57:07.410 --> 00:57:10.380
Developer: So, and also, we have a very.

542
00:57:11.520 --> 00:57:15.480
Developer: clearly structured documentation and.

543
00:57:16.950 --> 00:57:22.260
Developer: tutorials, especially the video tutorial it's like a step by step.

544
00:57:24.450 --> 00:57:29.910
Developer: tutorial to help user to use the software click on which button to.

545
00:57:30.990 --> 00:57:33.960
Developer: Do this do that also.

546
00:57:35.430 --> 00:57:36.210
Developer: We have.

547
00:57:38.040 --> 00:57:42.000
Developer: Like hands out or guidelines.

548
00:57:43.830 --> 00:57:57.750
Developer: Together with social media tutorial to help user to have a information and also exercises for them to understand the software, so I think we have a model format to designed.

549
00:57:58.800 --> 00:58:04.290
Developer: I repeated repeatedly to teach user or help user about.

550
00:58:05.700 --> 00:58:16.140
Developer: How to use our software, so I think it's a very know, I believe, is very sufficient currently to convey or knowledge product knowledge to users.

551
00:58:18.990 --> 00:58:27.240
Developer: yeah so but we currently lack the High Level developer so docking stations.

552
00:58:28.740 --> 00:58:30.450
Developer: contributors yeah.

553
00:58:31.290 --> 00:58:39.420
Interviewer: gotcha alright our last question is about our eyes about the reproducibility of the software.

554
00:58:39.960 --> 00:58:52.710
Interviewer: know you have any concern that your computational results would be reproducible in the future Have you taken any steps to ensure the reproducibility.

555
00:58:53.790 --> 00:58:59.610
Developer: Yes, very important question and we make sure the reproducibility.

556
00:59:00.780 --> 00:59:04.470
Developer: of our software, by using standard library.

557
00:59:04.680 --> 00:59:06.240
Developer: You can use a widely.

558
00:59:06.930 --> 00:59:17.190
Developer: Is not standard but it's a widely used Open Source libraries widely accepted by the industry and.

559
00:59:18.810 --> 00:59:20.250
Developer: We also.

560
00:59:21.270 --> 00:59:26.340
Developer: keep monitoring the upgrade of of those libraries.

561
00:59:26.820 --> 00:59:28.020
Developer: To keep our software.

562
00:59:30.180 --> 00:59:33.150
Developer: up to date, the keep the reverence.

563
00:59:34.290 --> 00:59:39.030
Developer: refreshed every every couple months to.

564
00:59:41.040 --> 00:59:42.120
Developer: To talk to.

565
00:59:43.860 --> 00:59:49.650
Developer: You in paste where's those upgrade of the those library, to ensure the correctness of computation.

566
00:59:50.040 --> 00:59:52.140
Developer: yeah and way.

567
00:59:54.660 --> 01:00:05.610
Developer: We as a interactive tool there's a limited means to test over reproducibility, but we have some regression test.

568
01:00:07.170 --> 01:00:16.770
Developer: integrate in your core a regression test for core functionality and we also.

569
01:00:17.880 --> 01:00:22.470
Developer: rely on I think a library testing regression testing.

570
01:00:22.590 --> 01:00:24.900
Interviewer: testable reproducibility okay.

571
01:00:26.820 --> 01:00:35.220
Interviewer: Do you also imply that by using the widely accepted libraries, the correctness can be improved.

572
01:00:36.510 --> 01:00:39.420
Developer: Yes, we believe those.

573
01:00:40.470 --> 01:00:41.340
Developer: widely.

574
01:00:43.530 --> 01:00:54.720
Developer: accepted Open Source libraries can because they are all open source and or somewhere it's Open Source open source, so we.

575
01:00:55.830 --> 01:00:56.700
Developer: We can.

576
01:00:58.020 --> 01:01:05.670
Developer: So is there is a transparency there to help us if the user any questions.

577
01:01:05.850 --> 01:01:07.710
Developer: You get raised and discuss.

578
01:01:08.160 --> 01:01:14.010
Developer: And we can also discuss with the library developers about some of the issues but.

579
01:01:14.580 --> 01:01:27.840
Developer: The transparency, the high transparency of the open source software, I believe, can help us to ensure some degree a high degree of consistency, the reproducibility of our.

580
01:01:27.840 --> 01:01:36.090
Developer: resolve yeah, but there is no absolute correctness right okay yeah yeah so there's always issues.

581
01:01:36.330 --> 01:01:39.300
Developer: need to be addressed and that's why we monitoring upgrade.

582
01:01:40.620 --> 01:01:44.310
Developer: we're all constantly update or reference to those library.

583
01:01:44.760 --> 01:01:45.960
Developer: Sure yeah.

584
01:01:46.740 --> 01:01:47.340
Interviewer: yeah gotcha.

585
01:01:48.540 --> 01:01:56.940
Interviewer: Alright, I suppose it as all of my questions and yeah i'm gonna stop the recording now.

