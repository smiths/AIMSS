WEBVTT

1
00:00:00.599 --> 00:00:01.110
Interviewer: I think it.

2
00:00:01.170 --> 00:00:03.750
Interviewer: Is yeah yeah it's.

3
00:00:05.250 --> 00:00:05.549
Interviewer: OK.

4
00:00:07.049 --> 00:00:13.559
Developer: OK, so I just shared the Google Doc to your email, so you should be able to get it from there.

5
00:00:17.130 --> 00:00:17.730
Interviewer: Now.

6
00:00:18.090 --> 00:00:20.190
Interviewer: And yeah I see your.

7
00:00:21.840 --> 00:00:23.970
Interviewer: Talk yeah i'm here.

8
00:00:39.270 --> 00:00:40.890
Developer: So some of them are a bit.

9
00:00:43.170 --> 00:00:44.370
Developer: yeah interesting.

10
00:00:45.870 --> 00:00:48.450
Interviewer: I mean they'll start wherever you want otherwise i'll just start filling them.

11
00:00:48.450 --> 00:00:54.420
Interviewer: In sure, and I know your time is limited and invaluable so maybe we can.

12
00:00:55.560 --> 00:01:08.640
Interviewer: Go as quick as possible, hopefully we can finish everything with the one hour, so perhaps you can start to give us a short introduction about yourself that's basically question one your position title degrades.

13
00:01:10.890 --> 00:01:12.060
Developer: My mother's here that.

14
00:01:12.060 --> 00:01:12.660
away.

15
00:01:14.280 --> 00:01:16.650
Developer: Oh, my background is in neuroimaging.

16
00:01:18.240 --> 00:01:19.590
Developer: I have been.

17
00:01:21.030 --> 00:01:27.210
Developer: I mean originally I studied materials engineering Toronto, and then I went to Sweden and studied physics.

18
00:01:28.680 --> 00:01:29.790
Developer: neuroimaging.

19
00:01:31.620 --> 00:01:33.960
Developer: Emerging and shortly after that I got involved.

20
00:01:34.050 --> 00:01:36.660
Developer: In an open source project called cornerstone.

21
00:01:37.290 --> 00:01:42.240
Developer: But that's like a medical imaging rendering library and time it didn't really.

22
00:01:44.040 --> 00:01:51.180
Developer: Nearly exist, and I was like the first contributor, and the maintainer of the creator had just started it.

23
00:01:51.360 --> 00:01:52.080
And then.

24
00:01:53.610 --> 00:02:00.000
Developer: Eventually, he got recruited to run a company or become the cto of a company.

25
00:02:01.380 --> 00:02:05.970
Developer: And then through that company they started contributing back the library got library got a lot bigger.

26
00:02:06.990 --> 00:02:08.850
Developer: And when that happened.

27
00:02:11.430 --> 00:02:21.420
Developer: At the same time he and another group were applying for national cancer institute funding from the United States to continue developing it.

28
00:02:22.980 --> 00:02:27.780
Developer: So that and to build on top of it to build an actual like viewer.

29
00:02:29.160 --> 00:02:31.260
Developer: Independent of just the rendering of our library.

30
00:02:32.010 --> 00:02:39.300
Developer: Okay that's how I sort of got involved with it, because once I was starting to do some contracting work with the company that he was recruited to.

31
00:02:41.970 --> 00:02:49.890
Developer: I think the grant funded and then all of a sudden, they needed somebody who knew the software and could work with it.

32
00:02:50.010 --> 00:02:52.350
Developer: to sort of the project or work on a project folder.

33
00:02:53.490 --> 00:02:55.740
Developer: Okay, and not full time but similar to full time.

34
00:02:56.850 --> 00:02:57.150
Interviewer: yeah.

35
00:02:57.810 --> 00:03:05.220
Developer: It wasn't quite full time funny, but it was enough and so i've been working on that, for the past five years, basically.

36
00:03:06.870 --> 00:03:14.010
Developer: And it's just the grant just ended laughs no yeah last year in August.

37
00:03:15.240 --> 00:03:17.970
Developer: 2020 and since then.

38
00:03:19.260 --> 00:03:27.000
Developer: we've been looking for other funding and when we got another grant from the chin Zuckerberg Institute for the for this year.

39
00:03:27.600 --> 00:03:35.520
Developer: yeah and we had some bridge funding from mass general hospital and as well, like some funding from this industry partnership that we're doing.

40
00:03:36.090 --> 00:03:37.680
Developer: Okay, so at this point we're like.

41
00:03:38.820 --> 00:03:47.700
Developer: we're trying to sustain funding for the software and we're trying to do it any way we can, so we are applying for big grants, but we know that the lead time to get those is really long.

42
00:03:48.330 --> 00:03:58.740
Developer: We plan for small grants, but I mean they don't fund that long and relevant and so it's collaboration with industry is another option, and so we pretty much try everything this place.

43
00:04:00.390 --> 00:04:08.250
Developer: In addition to that, I also work as a consultant for radical imaging, which is a small consulting firm.

44
00:04:09.720 --> 00:04:12.300
Developer: it's remote everybody's remote.

45
00:04:12.840 --> 00:04:21.210
Developer: We have people in Brazil Canada France UK us but based in Boston officially but there's an open office.

46
00:04:22.770 --> 00:04:28.140
Developer: And so, that is how I also find my time, but.

47
00:04:30.480 --> 00:04:42.540
Developer: Part of that is that radical imaging has clients that work with this software, and so the Open Source is sort of a marketing tool that intended to be a marketing tool, but it acts as a marketing tool.

48
00:04:43.770 --> 00:04:47.580
Developer: Okay we'll find it and they wonder who developed it, and then they find us.

49
00:04:48.000 --> 00:04:54.360
Developer: Because okay work with like Massachusetts general hospital got the grant and Russell imaging was a subcontractor on the ground.

50
00:04:55.020 --> 00:04:56.790
Developer: Okay, and so.

51
00:04:57.870 --> 00:05:01.800
Developer: Essentially I work with medical imaging but also on for other clients.

52
00:05:02.880 --> 00:05:12.270
Developer: who may be using similar software and so that also helps us feedback contributions when the clients allow it, which depends on the client.

53
00:05:13.350 --> 00:05:16.920
Developer: Okay, improve the Open Source so I don't know, maybe, that was a bit long.

54
00:05:19.200 --> 00:05:21.090
Interviewer: And no I think that's perfect answer.

55
00:05:22.740 --> 00:05:30.000
Interviewer: So do you have any maybe add up to your your relationship to always have anything else you'd like to talk about.

56
00:05:32.970 --> 00:05:47.940
Developer: So oh hf when we had started this is before I had really joined the project, there was this idea that so basically what happened, I don't know if you've ever heard of clear canvas it's a it was a.com.com fewer and apax imaging archive.

57
00:05:48.720 --> 00:05:49.440
Interviewer: Oh yes.

58
00:05:49.470 --> 00:05:50.580
Interviewer: Yes, I heard about that.

59
00:05:51.360 --> 00:06:01.230
Developer: So there was a bunch of groups that had been building off of it and then clear canvas essentially became a commercial entity and they went think jpl.

60
00:06:01.380 --> 00:06:09.450
Developer: And Okay, they said, well, you can keep using the old version but we're not going to release the new one with.

61
00:06:10.500 --> 00:06:11.820
Developer: permissive licenses anymore.

62
00:06:13.200 --> 00:06:26.700
Developer: And so I was a few groups that had been building off of it at the time that got really burned by that and so they wanted to create a new nonprofit organization to build something like their canvas but for the web.

63
00:06:30.090 --> 00:06:35.550
Developer: And the goals and nonprofit would be that they wouldn't.

64
00:06:41.550 --> 00:06:44.040
Developer: I know i'm second they wouldn't.

65
00:06:46.350 --> 00:06:49.620
Developer: I lost my mother keeps coming in here and grabbing random things.

66
00:06:52.680 --> 00:06:54.690
Developer: They wouldn't abandon the software, we would never.

67
00:06:55.740 --> 00:06:56.550
Developer: Because no problem.

68
00:06:57.210 --> 00:07:00.270
Developer: Okay, the creative this nonprofit back in like 2015.

69
00:07:02.970 --> 00:07:05.280
Developer: And then, what happened was.

70
00:07:08.400 --> 00:07:15.060
Developer: Essentially, it was kind of extra work to maintain at that point, and the only real reason to have a nonprofit has.

71
00:07:15.060 --> 00:07:22.500
Developer: been as you're taking donations, but, at the time we didn't have anyone doing this donation so it's just extra overhead, and so I came in.

72
00:07:23.580 --> 00:07:24.930
Developer: As a developer.

73
00:07:28.110 --> 00:07:36.900
Developer: And over the next few years we ended up shutting down the nonprofit and just continuing it as like a sort of group of people that want to work on it.

74
00:07:37.530 --> 00:07:40.440
Developer: Okay, but we kept the name, because we haven't bothered changing.

75
00:07:41.880 --> 00:07:45.450
Developer: Though it still says open health imaging foundation it used to be a foundation now it's not.

76
00:07:48.330 --> 00:08:07.020
Developer: But so yeah my role, I mean, I guess, five, six years ago, I was a lot more junior and I was more of a developer, and I guess I have grown into becoming the architect of the thing, and now that we have more than just me there's like more leadership and a lot more people in the Community.

77
00:08:07.410 --> 00:08:18.480
Developer: Okay, and so I guess i'm now the I would say i'm the core maintainer but right now I haven't done much maintenance in a while, because my job now is mostly looking for funding.

78
00:08:19.770 --> 00:08:35.130
Developer: And so you kind of evolve like i'm not doing the day to day fixes anymore i'm trying to help with the roadmap and the architecture and figuring out how we could maybe get a partnership that would pay for some feature that we know we want, but is very expensive or.

79
00:08:36.270 --> 00:08:37.770
Developer: Very time consuming to build.

80
00:08:38.520 --> 00:08:39.690
Interviewer: yeah so.

81
00:08:40.890 --> 00:08:51.600
Interviewer: yeah yeah so talking about funding that's actually another question, I was going to ask later, but I heard from somebody who is working.

82
00:08:52.710 --> 00:08:55.830
Interviewer: As an architect, in the last 3613.

83
00:08:56.400 --> 00:08:57.420
Interviewer: He told me that for.

84
00:08:58.200 --> 00:09:09.240
Interviewer: For synthesizer one problem of the development is that maybe the resources and Sundays unlimited I was wondering if that's the same situation you for a child.

85
00:09:10.740 --> 00:09:15.810
Developer: yeah definitely I mean we work really closely with Steve I am in many projects with Steve.

86
00:09:16.410 --> 00:09:17.280
Developer: And we have.

87
00:09:18.810 --> 00:09:27.930
Developer: Like whenever we try to do a research project you try to think like how much of this can also be used to help fund the Open Source project that we're going to use like.

88
00:09:28.470 --> 00:09:39.690
Developer: Okay it's hard it's hard to get funders like national cancer institute or other groups to fund purely software projects with they're more interested in funding is actual research projects.

89
00:09:39.900 --> 00:09:45.960
Developer: Okay, even if half the money goes to building the software to do it, you have to have a research goal, you have to.

90
00:09:45.960 --> 00:09:56.040
Developer: Research story, and once the thing the problem isn't once the software is built there are very few funds available for maintaining the software.

91
00:09:56.190 --> 00:09:58.380
Developer: or and hardening it.

92
00:09:58.950 --> 00:10:00.990
Developer: So there's one that.

93
00:10:03.630 --> 00:10:14.160
Developer: That the one that we got for the original one is under the nc is it car funding informatics technology for cancer research I think slicer have the same.

94
00:10:14.730 --> 00:10:16.020
Interviewer: hmm okay.

95
00:10:17.550 --> 00:10:26.910
Developer: And that, like there just aren't very many of those and so you always have to be not thinking of your software project it's a software project, you have to be thinking about it, of.

96
00:10:27.540 --> 00:10:30.360
Developer: as a means to an end of your research goal.

97
00:10:30.960 --> 00:10:33.420
Developer: Even if you're not doing data, the research is kind of weird.

98
00:10:34.110 --> 00:10:35.700
Interviewer: yeah and so.

99
00:10:35.850 --> 00:10:39.870
Developer: yeah we definitely have some of the same problems with slicer we applied in some of the same grants.

100
00:10:40.590 --> 00:10:42.150
Developer: They are much more advanced.

101
00:10:42.480 --> 00:10:45.120
Developer: I mean their software has been around for 20 something years.

102
00:10:45.180 --> 00:10:46.290
Developer: And it's really great.

103
00:10:48.450 --> 00:10:54.720
Developer: Whereas we've only been around for five six years and we have a different sort of user base because, in our case.

104
00:10:56.610 --> 00:11:08.880
Developer: it's a web application, and so the average users and just going to install a web application, they would use it, maybe get somebody else's hosting it but they're not just going to install on a desktop but slicer anyone can install anyone can use whenever they want.

105
00:11:09.570 --> 00:11:14.700
Developer: yeah and so it's a bit different but yeah we have very similar problems.

106
00:11:17.160 --> 00:11:17.340
yeah.

107
00:11:19.110 --> 00:11:28.290
Interviewer: yeah sure uh let's coming back to the to your team so Chris please talk more about your team, maybe the other Members.

108
00:11:29.550 --> 00:11:31.320
Interviewer: We have ours is a team and.

109
00:11:33.270 --> 00:11:34.680
Interviewer: The contributors yeah.

110
00:11:36.210 --> 00:11:43.140
Developer: yeah so that's a bit of a tricky question because it fluctuates because during the grant.

111
00:11:45.000 --> 00:11:47.910
Developer: funding period when we had about five years.

112
00:11:48.930 --> 00:11:54.300
Developer: We had I think enough funding for two developers need full time or close to full time.

113
00:11:55.920 --> 00:11:59.550
Developer: The issue is that the developers were coming radical limiting and so.

114
00:12:00.690 --> 00:12:03.870
Developer: We would it was like me and then one other person.

115
00:12:05.610 --> 00:12:14.790
Developer: And that person would work without half until they were pretty well trained, but then as medical imaging kept growing we had to pull them off on to other projects.

116
00:12:15.270 --> 00:12:23.160
Developer: Okay, so there was this cycle of somebody getting trained and then moving off to another project someone going to train the morning after on the project and.

117
00:12:25.200 --> 00:12:30.330
Developer: it's good because of the projects grew, but it was maybe not the best thing for us, I don't know.

118
00:12:33.030 --> 00:12:33.600
Developer: But it happened.

119
00:12:34.620 --> 00:12:34.890
Interviewer: yeah.

120
00:12:36.570 --> 00:12:43.650
Developer: So the thing is the development group, like it grows, but the people aren't full time.

121
00:12:44.070 --> 00:12:46.080
Developer: yeah I have people who can contribute it.

122
00:12:46.470 --> 00:12:51.000
Developer: To it like maybe 510 percent of their time per week or 20% of their time per week.

123
00:12:51.390 --> 00:12:53.010
Developer: or they won't contribute it.

124
00:12:53.280 --> 00:13:04.830
Developer: contribute to it, and this is even the internal people are radical, that means like people will contribute to it, not at all for six months, and then have a ton of fixes really quickly and then not at all for another year.

125
00:13:05.280 --> 00:13:07.110
Developer: And so it really depends on the client and stuff.

126
00:13:07.110 --> 00:13:12.000
Developer: like that, but I think the general like if we're counting.

127
00:13:13.170 --> 00:13:29.580
Developer: Just the people that have been funded by the core funding there's probably been maybe five to eight different developers that have worked on it for like it's been one of their main projects for some period of time.

128
00:13:30.060 --> 00:13:34.470
Developer: Okay, but at any given time it's usually only two maybe three.

129
00:13:35.430 --> 00:13:35.790
Interviewer: gotcha.

130
00:13:36.480 --> 00:13:41.670
Developer: So right now I think it's only two and it's The thing is there's two of us working on it officially.

131
00:13:41.970 --> 00:13:43.440
Developer: For our core funding.

132
00:13:43.830 --> 00:13:44.070
yeah.

133
00:13:45.750 --> 00:13:48.360
Developer: But in reality, most of my time is looking for other funding.

134
00:13:48.870 --> 00:13:50.970
Developer: The other guys working on it a lot, which is great.

135
00:13:51.270 --> 00:13:54.810
Developer: And then there's someone else's working on an older version of it.

136
00:13:55.380 --> 00:13:57.360
Developer: yeah cuz he's maintaining it for another project.

137
00:13:58.020 --> 00:13:58.260
yeah.

138
00:13:59.970 --> 00:14:01.650
Interviewer: So yeah it's.

139
00:14:01.950 --> 00:14:06.150
Developer: gonna put how large is the development group if it's just developers.

140
00:14:06.630 --> 00:14:16.200
Developer: Like around two to three developers at any given time, usually less than two full time.

141
00:14:18.090 --> 00:14:20.760
Developer: Sometimes five.

142
00:14:22.650 --> 00:14:34.890
Developer: In burst periods let's say i'm not sure how to describe that but there's been times, where like as a consultancy, we have downtime we don't have any clients for a month or something like that, or we don't have a big client for a month and.

143
00:14:35.460 --> 00:14:35.790
Developer: we'll just.

144
00:14:35.880 --> 00:14:41.040
Developer: we'll just put all the developers on it like go improve the Open Source and then come back in a month that will do this.

145
00:14:41.790 --> 00:14:42.840
Interviewer: yeah that makes sense to me.

146
00:14:43.650 --> 00:14:47.190
Developer: And then, in addition to that there's a project manager.

147
00:14:50.940 --> 00:14:54.180
Developer: At mgh so radical merging.

148
00:14:56.790 --> 00:15:02.430
Developer: project manager, who I think he's probably like maybe less than 20% efforts.

149
00:15:04.950 --> 00:15:16.440
Developer: And there's also a ux designer ui ux designer, who is also probably less than I have to 10% effort, but he helps companies great.

150
00:15:17.070 --> 00:15:17.760
Okay.

151
00:15:18.840 --> 00:15:26.040
Developer: And then there are, I mean like clinical experts who are definitely less than 5%.

152
00:15:28.020 --> 00:15:34.680
Developer: But who provide input and things like that, on what users would actually want and things like that.

153
00:15:35.370 --> 00:15:35.640
yeah.

154
00:15:38.250 --> 00:15:44.280
Developer: And there's the PA, who is also less than 5% effort against the same job as me basically writing grants and.

155
00:15:46.530 --> 00:15:54.030
Developer: Writing grants meeting with collaborators planning stuff things like that, and I support nurse.

156
00:15:57.510 --> 00:15:57.780
Developer: yeah.

157
00:15:58.590 --> 00:16:00.630
Interviewer: yeah I think that's a very detailed answer, thank you.

158
00:16:01.710 --> 00:16:06.600
Interviewer: So, apart from the core team about the they come the Community.

159
00:16:07.740 --> 00:16:19.050
Interviewer: Is there any contribution from the Community and families have you define a process for accepting new contributions to your team, maybe.

160
00:16:20.310 --> 00:16:22.200
Interviewer: To the contributions from the Community.

161
00:16:23.250 --> 00:16:26.760
Developer: So there definitely is a set of contributors.

162
00:16:29.130 --> 00:16:35.550
Developer: The thing about contributors, is that they really vary in the level of skill.

163
00:16:36.210 --> 00:16:39.330
Developer: And the level of time they have and the level of.

164
00:16:40.830 --> 00:16:47.070
Developer: Like what business level, but like what they actually want to work on, they might choose something to work on that you don't care about.

165
00:16:47.340 --> 00:16:49.170
Developer: Are you talking good enough and.

166
00:16:49.290 --> 00:16:49.650
Okay.

167
00:16:50.760 --> 00:16:56.460
Developer: If they have decided that this one thing really needs to be fixed for their use case but it might.

168
00:16:56.460 --> 00:16:58.710
Developer: Not impact your use case at all.

169
00:16:59.070 --> 00:17:00.810
Developer: Okay, you now.

170
00:17:00.900 --> 00:17:04.500
Developer: Sometimes you can't spend the day fixing their code, because you just don't.

171
00:17:04.830 --> 00:17:05.370
Developer: have time.

172
00:17:05.670 --> 00:17:05.940
Interviewer: yeah.

173
00:17:05.970 --> 00:17:11.220
Developer: And so, like we have contributors, but not everything that gets contributed actually gets merged and I think it's.

174
00:17:11.220 --> 00:17:15.150
Developer: Real the minority of stuff that gets contributed actually ends up getting merged.

175
00:17:15.180 --> 00:17:17.250
Developer: Because we don't Okay, and with the maintain at all.

176
00:17:17.730 --> 00:17:17.940
Interviewer: yeah.

177
00:17:17.970 --> 00:17:20.730
Developer: We don't have the bandwidth to triage contributions.

178
00:17:22.200 --> 00:17:24.270
Developer: We don't have bandwidth to answer all the questions.

179
00:17:24.780 --> 00:17:33.990
Developer: Like if you're talking about less than two full time people if one of them is doing development it's a full time job answering the communities pull requests reviewing things.

180
00:17:34.740 --> 00:17:36.810
Developer: like that and we just don't have the.

181
00:17:36.900 --> 00:17:41.910
Developer: Support for it and so we're trying and that's what we're trying to get funded from Chan Zuckerberg but you know.

182
00:17:42.060 --> 00:17:55.440
Developer: Right now, so we have processes written, but they are fairly short and it's basically sure like make sure your stuff is tested, and this is how you link different repositories but it's really short.

183
00:17:58.320 --> 00:18:05.610
Developer: And that is something that I think it would be nice if it was cleaner, but I don't know if people actually follow it anyway.

184
00:18:06.510 --> 00:18:07.470
Developer: We we have.

185
00:18:07.710 --> 00:18:16.350
Developer: issue we had issue templates and pull request suggestions, but it's probably maybe 5% of the people that actually read that and use it.

186
00:18:18.030 --> 00:18:22.290
Developer: And so he's like generally we're just happy if we get anything back from the Community.

187
00:18:22.980 --> 00:18:27.630
Developer: yeah, of course, in general.

188
00:18:29.340 --> 00:18:36.510
Developer: I mean, sometimes you get people who are just amazing and contribute something awesome out of nowhere and then disappear, and you never hear from them again.

189
00:18:39.090 --> 00:18:57.630
Developer: And sometimes you get people who really want to change one tiny thing for their use case which is like useless and doesn't matter and they'll ask you about it, every week and it's like the process might exist but it's not like it's applied.

190
00:18:58.500 --> 00:18:59.130
Interviewer: yeah gotcha.

191
00:18:59.160 --> 00:19:05.580
Developer: And every time because it depends on their contribution depends on the contributor depends on what they're changing.

192
00:19:06.720 --> 00:19:07.230
Developer: and

193
00:19:07.320 --> 00:19:13.860
Developer: I was trying to find we had a good explanation of issues and see if I can find that one document as well.

194
00:19:17.250 --> 00:19:20.550
Interviewer: Do you guys use github issues for for recordings.

195
00:19:22.230 --> 00:19:25.140
Developer: This one our process, so this is, we tried to.

196
00:19:27.300 --> 00:19:29.550
Developer: I just went to their own it's a.

197
00:19:32.400 --> 00:19:34.110
Developer: We tried to.

198
00:19:35.430 --> 00:19:47.280
Developer: This one our process we try to document the triage process so like what happens if someone files, an issue, what happens if your issue gets put in the backlog, and what happens if you're going to create one hour we're going to.

199
00:19:48.300 --> 00:19:50.070
Developer: Put flags on it and stuff like that.

200
00:19:51.210 --> 00:19:54.810
Developer: But you need people to actually manage that, and right now nobody's.

201
00:19:54.810 --> 00:19:57.240
Interviewer: doing it, which is bad okay so.

202
00:19:57.630 --> 00:19:58.110
Back to that.

203
00:19:59.520 --> 00:20:00.570
Interviewer: Sure thanks.

204
00:20:03.060 --> 00:20:19.230
Interviewer: So for next question is in the background of a developer, so you talked about normally, there are two or three maybe developers, at the same time, you also told me that maybe some of them have backgrounds in medical imaging.

205
00:20:20.370 --> 00:20:24.270
Interviewer: Is there any their background, did you have any may be.

206
00:20:25.530 --> 00:20:28.830
Interviewer: team Member from software engineering, or maybe are their backgrounds.

207
00:20:30.180 --> 00:20:42.540
Developer: yeah so Actually, I think the majority of the people who have contributed have no imaging experience and i've come up with like web developer experience, so we sit at this weird.

208
00:20:43.020 --> 00:20:56.700
Developer: intersection of web development and medical imaging and there's not a lot of people with expertise in both and so Mote it most of the time you get a web developer who's never seen a medical image before.

209
00:20:57.570 --> 00:21:01.290
Developer: And so they come in and they're very confused about all the stuff with like.

210
00:21:01.860 --> 00:21:11.700
Developer: 16 bit integers and window leveling and stuff that imaging people know, but then the imaging people come and they don't know anything about html or CSS or react.

211
00:21:11.880 --> 00:21:26.220
Developer: or whatever, and so we get these sort of two profiles people so either imaging developers like former researchers or subject matter experts.

212
00:21:27.270 --> 00:21:29.610
Developer: slash software engineers.

213
00:21:30.630 --> 00:21:31.320
Interviewer: yeah that makes sense.

214
00:21:31.860 --> 00:21:33.390
Developer: Healthcare companies.

215
00:21:34.860 --> 00:21:35.550
Developer: For.

216
00:21:37.410 --> 00:21:41.340
Developer: web developers that have been thrown into.

217
00:21:43.830 --> 00:21:44.940
Developer: The imaging project.

218
00:21:45.690 --> 00:21:45.900
Interviewer: yeah.

219
00:21:45.960 --> 00:21:53.850
Developer: And so they are very different, because typically, at least in my experience at this point is that the imaging developers and software engineers.

220
00:21:54.390 --> 00:22:12.630
Developer: They have a lot better handle on anything that calls like math and the Web developers they might know how to make a webpage look Nice and responsive and flows smoothly and handle events and set up a web server but they don't know how to rotate a matrix or something like that.

221
00:22:13.170 --> 00:22:24.450
Developer: And so you really need to find the right developer for each task, and so, sometimes people get completely stuck on the task that would take the other profile like 10 minutes.

222
00:22:25.140 --> 00:22:27.600
Developer: yeah, and so we try to have those.

223
00:22:30.060 --> 00:22:36.000
Developer: we've been trying to make sense as unicorn people who know both but it's very difficult because it takes a lot of training.

224
00:22:36.570 --> 00:22:36.810
yeah.

225
00:22:38.280 --> 00:22:41.790
Developer: And so, right now, I think our current.

226
00:22:43.470 --> 00:22:48.000
Developer: TEAM members are more imaging heavy.

227
00:22:49.020 --> 00:22:50.610
Developer: But just recently we had.

228
00:22:52.740 --> 00:22:54.180
Developer: Like more web development.

229
00:22:55.440 --> 00:23:01.410
Developer: People than we had imaging people and that's really hard to maintain, because then you need to do some imaging stuff you just don't have the people to do it.

230
00:23:03.960 --> 00:23:05.550
Developer: And the other problem is.

231
00:23:07.230 --> 00:23:10.320
Developer: There are a lot of job opportunities for web developers nowadays.

232
00:23:10.710 --> 00:23:19.920
Developer: And if you're a good one for you can just go get another job, so we have to compete with like go go work at Facebook, or whatever, and so.

233
00:23:20.490 --> 00:23:21.210
Developer: it's really hard.

234
00:23:23.460 --> 00:23:29.190
Developer: So yeah that's the typical developer, is probably one of those two but.

235
00:23:29.340 --> 00:23:33.060
Developer: I think it's slightly more weighted toward web developers right now.

236
00:23:34.170 --> 00:23:47.790
Interviewer: yeah i'm actually very curious, why did you may make a decision now of using a web APP because, for some of the some of their medical imaging viewers.

237
00:23:48.300 --> 00:23:57.660
Interviewer: They are like desktop applications, I know there are several of the Web Apps and New York project he's whenever the So why did you make a decision.

238
00:23:59.130 --> 00:23:59.640
Developer: Oh.

239
00:24:00.960 --> 00:24:08.490
Developer: The original one of the main funders my group is Gordon harris's group of Massachusetts general hospital.

240
00:24:09.030 --> 00:24:12.180
Developer: And so, they also run another site.

241
00:24:12.870 --> 00:24:18.750
Developer: called precision metrics.org and we'll see if they can get the link for you.

242
00:24:20.220 --> 00:24:21.780
Developer: Which is a.

243
00:24:25.230 --> 00:24:41.550
Developer: So precision metrics it's a clinical trial image management software so it's Okay, they it has a web application for managing clinical trial data that comes in, from a site.

244
00:24:42.120 --> 00:24:49.470
Developer: And like following a patient over time, to see if they respond to treatment or not, or if their disease gets progressively worse.

245
00:24:51.420 --> 00:25:07.650
Developer: And they have this web application for tracking that the clinical clinical research coordinators use, and then they had clear canvas based imaging application that they were using to make the actual measurements on the images.

246
00:25:09.240 --> 00:25:23.580
Developer: And the issue that they had with that is that once you have it installed at a bunch of computers at the hospital and then you need to update it, it can be a pain to get that update each computer the hospitals don't want you downloading.

247
00:25:23.580 --> 00:25:24.450
Interviewer: stuff yeah.

248
00:25:25.170 --> 00:25:31.500
Developer: or they change their version of windows, or they change their firewall and there's like a million different things that can go wrong.

249
00:25:31.860 --> 00:25:33.180
Developer: will break your APP.

250
00:25:33.270 --> 00:25:34.080
On their computer.

251
00:25:35.940 --> 00:25:45.120
Developer: And so that was getting more and more of a pain to maintain and plus the clear canvas had gone closed source basically.

252
00:25:49.080 --> 00:26:00.330
Developer: And so that's why they made the decision before or if really started, but I mean it helped with the funding to go towards a web application.

253
00:26:01.650 --> 00:26:03.720
Developer: But the real the infrastructure wasn't there.

254
00:26:03.810 --> 00:26:04.770
Interviewer: And so we had okay.

255
00:26:05.310 --> 00:26:19.230
Developer: And so, now it is and we have a web APP for precision imaging metrics we call him, and so we have a web viewer built on him to do clinical trial imaging assessments and now it's in production, I think three or four sites.

256
00:26:20.850 --> 00:26:23.940
Developer: doing their cancer clinical trials every day.

257
00:26:26.370 --> 00:26:35.700
Interviewer: Have you seen any ever seen any disadvantages of using a web APP instead of developing a desktop a patient.

258
00:26:37.110 --> 00:26:45.090
Developer: yeah there are definitely some I mean the Web application web platform as an application platform like you're limited to four gigabytes of Ram.

259
00:26:46.170 --> 00:26:51.390
Developer: To use the gpu for a lot of stuff it's a lot harder to do anything computational because the.

260
00:26:51.990 --> 00:26:57.030
Developer: tools are there haven't been there for a long time now you're starting to get web assembly.

261
00:26:58.170 --> 00:27:03.180
Developer: web gpu and so on, so it's starting to become much better platform, but.

262
00:27:03.210 --> 00:27:07.680
Developer: In the last like five years it's been challenging to do a lot of things.

263
00:27:10.050 --> 00:27:20.640
Developer: The other issue is stuff like Internet explorer like we are hosting this at sites or hosting it in the cloud and delivering it to size and some sites are still on I 11.

264
00:27:21.330 --> 00:27:21.840
Interviewer: Okay.

265
00:27:21.900 --> 00:27:23.760
Developer: it's like it's basically end of life but.

266
00:27:24.240 --> 00:27:32.400
Developer: They have some other system like risk like a radiology Information System, or like some other system that only works I 11.

267
00:27:32.850 --> 00:27:34.560
Developer: So can't get rid of I 11.

268
00:27:35.130 --> 00:27:50.700
Developer: yeah their users or clinicians are used to using a 11 so they expect our story tonight 11 which is crazy and because so many things just break it's like impossible so that's a big challenge, and so one thing I forgot to mention or the other thing is now that we switched to the web.

269
00:27:51.990 --> 00:27:56.550
Developer: It makes it easier for them to use it when they're not at the hospital or at the university.

270
00:27:57.000 --> 00:27:57.720
Developer: Okay, so.

271
00:27:57.780 --> 00:27:59.760
Developer: yeah that makes sense to their their imaging.

272
00:27:59.850 --> 00:28:07.200
Developer: Assessments from home normally now they would have to be on vpn and use remote desktop and it would be slow now.

273
00:28:07.380 --> 00:28:08.610
Developer: Just log into the Web APP and do.

274
00:28:08.610 --> 00:28:12.660
Developer: It from wherever they are it's secure and it's really nice and so for code that was great.

275
00:28:13.290 --> 00:28:16.080
Developer: because everyone was suddenly at home and it didn't disrupt.

276
00:28:16.080 --> 00:28:17.790
Developer: Their workflow at all.

277
00:28:18.270 --> 00:28:19.380
Developer: yeah difference.

278
00:28:20.910 --> 00:28:21.360
Developer: and

279
00:28:22.590 --> 00:28:26.520
Developer: yeah I mean desktop Apps have their benefits they also have their drawbacks so.

280
00:28:27.540 --> 00:28:31.170
Interviewer: Sure Okay, I think we already had a bit of behind our schedule.

281
00:28:32.100 --> 00:28:33.420
Interviewer: We can go to yeah.

282
00:28:33.660 --> 00:28:35.460
Interviewer: I can talk forever if you have enough.

283
00:28:35.490 --> 00:28:36.240
time, but I think.

284
00:28:37.470 --> 00:28:38.250
Interviewer: I should give.

285
00:28:38.490 --> 00:28:39.240
Interviewer: A little bit healthier.

286
00:28:40.440 --> 00:28:52.650
Interviewer: And number seven years about the number of users, I know, this question is harder to answer because maybe we don't track the number of users, or maybe you can try to give giving me an estimate.

287
00:28:54.000 --> 00:29:00.390
Developer: So I don't know how many people are just using or directly like as an end user.

288
00:29:02.520 --> 00:29:07.680
Developer: But I know that it's integrated into a bunch of other platforms like X net and.

289
00:29:09.450 --> 00:29:19.920
Developer: The cancer imaging archive and imaging data commons flywheel and there's a few other fairly big ones, plus Pam itself.

290
00:29:21.960 --> 00:29:25.860
Developer: So I think it's probably thousands, I guess, I guess gotta be.

291
00:29:25.890 --> 00:29:28.470
Developer: Okay, maybe one to 5000 or something like that.

292
00:29:29.010 --> 00:29:29.340
Okay.

293
00:29:31.890 --> 00:29:40.470
Developer: But yeah I mean they don't know necessarily that they're using our software it's not like slicer where they have made the choice to download slicer and use it.

294
00:29:41.130 --> 00:29:48.420
Developer: And then we also a slicer they have this ability that you can customize nicer rebranded for your own name on it and sell it.

295
00:29:49.320 --> 00:30:00.570
Developer: it's still using our software, but it might be a different name, and so there are probably thousands of users, but not all of them will even know that they're touching oh if they'll know that they're using X natter that they're using flywheel.

296
00:30:01.830 --> 00:30:07.080
Interviewer: yeah so So what is the typical background of a heavy user.

297
00:30:08.640 --> 00:30:09.870
Developer: Right now.

298
00:30:12.630 --> 00:30:20.070
Developer: Because we don't support a ton of research use cases like segmentation and stuff like that very well, I think most of them are.

299
00:30:21.930 --> 00:30:27.780
Developer: I would say, like clinical researchers doing oncology or.

300
00:30:31.380 --> 00:30:34.020
Developer: or veterinary medicine or.

301
00:30:35.490 --> 00:30:38.490
Developer: No it's like all slide imaging for pathology.

302
00:30:41.490 --> 00:30:49.050
Developer: But they are like they're they could be doctors, but they're not doing their clinical routine in it.

303
00:30:49.110 --> 00:30:50.160
Interviewer: They might be doing something like.

304
00:30:50.160 --> 00:30:52.080
Developer: A research project it if that makes.

305
00:30:52.110 --> 00:30:52.410
Interviewer: Okay.

306
00:30:53.010 --> 00:30:57.480
Developer: yeah that makes sense it's it's not going to be cleared for clinical use unless you take him.

307
00:30:57.480 --> 00:30:59.700
Developer: Through the process and some companies.

308
00:30:59.730 --> 00:31:06.030
Developer: have done that, with it, and I know there are some clinical deployments of it, but I wouldn't say that that's typical.

309
00:31:06.450 --> 00:31:08.370
Developer: But I would say the typical user is.

310
00:31:08.490 --> 00:31:09.300
Developer: A doctor.

311
00:31:09.660 --> 00:31:10.920
Like a radiologist.

312
00:31:12.510 --> 00:31:13.590
Developer: What of our medical.

313
00:31:13.620 --> 00:31:15.630
Interviewer: Like, what do you think of a medical students.

314
00:31:16.050 --> 00:31:16.260
yeah.

315
00:31:17.490 --> 00:31:26.190
Developer: yeah there's probably I mean there's definitely people like my profile where they're not medical doctors with like PhDs doing imaging research.

316
00:31:27.780 --> 00:31:32.130
Developer: For sure there's a lot of people trying to build like a segmentation pipelines and.

317
00:31:32.130 --> 00:31:34.170
Developer: Resolving with they'll have and things like that.

318
00:31:35.610 --> 00:31:42.390
Developer: So I think it's it's going to be a researcher or clinical researcher, or like a software focused researcher.

319
00:31:44.040 --> 00:31:45.720
Developer: I would say that makes sense.

320
00:31:46.320 --> 00:31:47.220
Interviewer: yeah that makes sense.

321
00:31:48.240 --> 00:32:00.870
Interviewer: So next question is about the most significant obstacles in your development process, we talked a little bit about the difficulty of maybe get funding for the project.

322
00:32:02.100 --> 00:32:06.270
Interviewer: If you like you can be given me more details or maybe you can give.

323
00:32:07.290 --> 00:32:10.140
Interviewer: us some examples of other obstacles.

324
00:32:11.730 --> 00:32:16.200
Developer: So yeah I think we talked enough about funding so i'm not sure what other obstacles, I mean.

325
00:32:17.430 --> 00:32:19.140
Developer: One of the obstacles is just knowing what.

326
00:32:20.190 --> 00:32:27.000
Developer: What exactly you want the software to become like it's hard to have a high level roadmap for an open source project when it's a young.

327
00:32:27.660 --> 00:32:31.110
Developer: Okay, because you don't know what everyone's going to do with it.

328
00:32:32.580 --> 00:32:40.860
Developer: And so you can come up with what you think the higher level roadmap should be but at some point, you need to get feedback from the Community and.

329
00:32:41.250 --> 00:32:52.020
Developer: Certainly, an obstacle that it's, a challenge that you need to balance what you want, and what the Community wants with what funding, you have and.

330
00:32:52.170 --> 00:33:03.660
Developer: What you need to continue to be funded like if I went and did everything everyone asks for we would have a terrible product nobody wants us because there's a million happens everywhere.

331
00:33:04.560 --> 00:33:09.480
Developer: So you have to also balance like actually having one unified vision of what you're building.

332
00:33:10.650 --> 00:33:14.520
Developer: And so I think one challenge has been.

333
00:33:16.740 --> 00:33:24.030
Developer: Like rejecting contributions and stuff like that, if it's taking software in the wrong in the wrong path.

334
00:33:24.540 --> 00:33:27.150
Developer: or a path that you don't think you can maintain.

335
00:33:27.690 --> 00:33:38.070
Developer: And so, one of the things is like looking at the next question that we have recently done is trying to do something similar to slicer where we move towards a more plug in architecture.

336
00:33:38.760 --> 00:33:40.350
Developer: And so there's a core viewer.

337
00:33:41.340 --> 00:33:53.040
Developer: But in addition to like the core viewer we're trying to have eXtensible sort of task dependent workflows and so, if you want to do a cardiac imaging workflow where you measure some part of the heart.

338
00:33:53.580 --> 00:33:56.220
Developer: It might require you to these three steps.

339
00:33:58.770 --> 00:34:00.630
Developer: Like valve replacement or something.

340
00:34:02.520 --> 00:34:07.560
Developer: You can build a workflow that gets you through there and only shows you the buttons that you need to do that workflow.

341
00:34:08.220 --> 00:34:17.730
Developer: And then nobody else ever asked to see your button send so the user like one of the biggest complaints we had from radiologist is there's too many things.

342
00:34:19.200 --> 00:34:21.780
Developer: Like there's too many options I don't want to learn.

343
00:34:21.870 --> 00:34:23.730
Developer: These things just give me the ones I need.

344
00:34:24.630 --> 00:34:27.780
Developer: And they don't want to click more than like once i'm and.

345
00:34:28.740 --> 00:34:43.650
Developer: And so, like they're looking at a computer all day, and so they want it to be a streamlined as possible, and so one of the challenges is how to make it streamline for any use case and so we're moving towards more of a plug in architecture with task dependent workflows.

346
00:34:44.880 --> 00:34:47.190
Developer: And we're hoping that that also reduces the.

347
00:34:48.300 --> 00:34:56.670
Developer: comments that we get from people like hey can you merge this functionality in, and we now at least, we will be able to say well.

348
00:34:57.150 --> 00:35:03.030
Developer: Why don't you put it in a plugin or an extension, because we don't think that should be in the core workflow.

349
00:35:03.570 --> 00:35:12.030
Developer: And that's a better reason to tell people, and then we can also say, and you can put it on this website, you can share it with everyone and somebody else to pick it up work with you on.

350
00:35:12.750 --> 00:35:25.140
Interviewer: yeah that sounds a very good idea to me I I totally separate different development teams, I think before your team's nicer wasn't the only one, two days plugins.

351
00:35:26.580 --> 00:35:28.410
Interviewer: To include more more features.

352
00:35:28.770 --> 00:35:30.780
Developer: Have you spoken to the party.

353
00:35:32.760 --> 00:35:33.720
Interviewer: So I say it again.

354
00:35:34.560 --> 00:35:37.020
Developer: No party and a pound a ri.

355
00:35:37.560 --> 00:35:38.970
Developer: i'm going to have the link in there.

356
00:35:41.610 --> 00:35:45.540
Developer: they're also funded actually I think it's out of the cupboard.

357
00:35:48.150 --> 00:35:48.750
Developer: initiative.

358
00:35:49.500 --> 00:35:50.700
Developer: And they.

359
00:35:50.790 --> 00:35:58.830
Developer: it's not for medical I mean it's for medical mission bio imaging it's like smaller but it's a generic multi dimensional image viewer in Python.

360
00:35:59.040 --> 00:36:06.420
Developer: Okay, and the nice thing about it is it's really built from plugins from the ground up like everything is plugin.

361
00:36:07.080 --> 00:36:09.990
Developer: Okay um and so they've already started to get a lot of.

362
00:36:10.890 --> 00:36:15.390
Developer: plugins from that and I know that Nicholas i'm sure you'd be happy to talk to us really nice.

363
00:36:16.440 --> 00:36:16.860
Interviewer: sure.

364
00:36:18.360 --> 00:36:21.450
Interviewer: yeah I bought take a look into this project, it sounds interesting.

365
00:36:22.470 --> 00:36:22.920
Interviewer: and

366
00:36:24.090 --> 00:36:27.150
Developer: So I want to learn from how they're doing it as well.

367
00:36:27.180 --> 00:36:37.710
Developer: Because I mean the heart that when you build a plugin infrastructure, you have to have a good plug in architecture, you have to have good documentation for writing plugins and you have to not break your API which.

368
00:36:38.130 --> 00:36:43.500
Developer: We have had trouble with in the past, because we have too many people working on it, not everyone knows what they're not supposed to break.

369
00:36:44.160 --> 00:36:46.080
Developer: And there's not enough tests and then someone breaks.

370
00:36:46.080 --> 00:36:47.550
Developer: Down thing, and nobody finds out.

371
00:36:49.500 --> 00:36:52.200
Developer: So yeah I think I want to.

372
00:36:53.970 --> 00:36:58.080
Developer: I want to move in that direction slowly and we're getting there but it takes time.

373
00:37:00.750 --> 00:37:19.770
Interviewer: Alright next question is about documentation, so how does he fit into your development process would improvement improvement termination helpful with solving these obstacles, so we talked about maybe a lack of fundings and then maybe the difficulty to manage the contributes.

374
00:37:23.280 --> 00:37:34.410
Developer: yeah we definitely have a lack of documentation and i've been realizing that more and more recently, because i've been working with other groups, and sometimes I see like.

375
00:37:35.040 --> 00:37:40.890
Developer: That they misunderstood something completely like well how did they get to this and they realized oh that thing isn't documented at all.

376
00:37:41.910 --> 00:37:53.490
Developer: And so there's like there's definitely some things that should be better documented, whether or not people would read them is another question.

377
00:37:55.230 --> 00:38:01.080
Developer: One of the things, at least for the core libraries that we're thinking of moving towards our project is in javascript.

378
00:38:01.860 --> 00:38:03.840
Developer: were at least starting to move to typescript.

379
00:38:04.440 --> 00:38:04.710
Interviewer: Okay.

380
00:38:04.770 --> 00:38:05.640
Developer: And so that.

381
00:38:06.750 --> 00:38:17.250
Developer: At least, if your API is typed people know what it's going to return and they know what to expect, and it makes it harder for them to misuse it.

382
00:38:19.800 --> 00:38:22.740
Developer: And it makes you think about what it should do.

383
00:38:24.300 --> 00:38:28.260
Developer: From the consumer view when you're writing it.

384
00:38:30.060 --> 00:38:38.490
Developer: So i'm hoping that that will help sort of self document the code, because the other problem with documentation is you need to maintain it and once someone.

385
00:38:38.580 --> 00:38:41.130
Developer: has something of the code and then the docs are out of date.

386
00:38:41.850 --> 00:38:45.330
Developer: Is it gets even worse, and you just it's terrible and so.

387
00:38:45.480 --> 00:38:45.780
Interviewer: yeah.

388
00:38:46.320 --> 00:38:48.180
Developer: I was self documenting.

389
00:38:48.810 --> 00:38:52.740
Developer: Like it's nice to have high level architecture stuff and that needs to exist.

390
00:38:53.850 --> 00:39:03.870
Developer: The easier each function is understand when you're consuming it like my types and jazz Doc and whatever the equivalent are.

391
00:39:04.860 --> 00:39:05.250
Interviewer: That.

392
00:39:05.460 --> 00:39:09.780
Developer: is definitely important but also yeah the overall architecture for the APP level for or if.

393
00:39:12.870 --> 00:39:18.000
Developer: it's a challenge for stuff like state management in the application slicer.

394
00:39:18.300 --> 00:39:21.090
Developer: Generally nice called minimal, which is like.

395
00:39:22.440 --> 00:39:25.860
Developer: The backbone of their state management in their application, Mr ml.

396
00:39:26.490 --> 00:39:36.900
Developer: Okay, we don't really have that right now we been using some web application libraries one was called redux but it didn't really work as we expected for our use case.

397
00:39:37.410 --> 00:39:37.680
Interviewer: Okay.

398
00:39:37.710 --> 00:39:50.310
Developer: And so now we're experimenting with others, but whatever we decide, I want to be very good about documenting it because it's something that it sounds minor but it causes so many issues when people try to do things that they end up.

399
00:39:50.310 --> 00:39:59.520
Developer: making their own State management or they misuse it and all of a sudden, the application is thrashing the state by like updating it 60 times a second or something like that.

400
00:40:02.490 --> 00:40:02.970
Developer: And so.

401
00:40:03.180 --> 00:40:03.570
Interviewer: yeah.

402
00:40:03.720 --> 00:40:07.470
Developer: Everything around that kind of stuff the core infrastructure needs to be really well documented.

403
00:40:07.800 --> 00:40:09.540
Developer: Otherwise yeah we're able to extend it.

404
00:40:10.410 --> 00:40:20.040
Interviewer: yeah i'm learning a new framework built by Google is he is an open source framework, I found out that to the termination can be really helpful for me to learn.

405
00:40:20.610 --> 00:40:32.130
Interviewer: But you can Google is pushing this framework cardone and still find their documents not perfect, there are others that need to be made 10.

406
00:40:34.500 --> 00:40:36.510
Developer: are too me too hard it's hard to get.

407
00:40:37.950 --> 00:40:39.600
Developer: developers do not want to write dogs.

408
00:40:39.960 --> 00:40:40.260
yeah.

409
00:40:43.560 --> 00:40:46.140
Interviewer: yeah next question is about.

410
00:40:48.210 --> 00:40:49.980
Interviewer: So software development model.

411
00:40:53.250 --> 00:41:03.150
Interviewer: Is there any specific software development model you use maybe wonderful or maybe good kimmy was in jail like his style.

412
00:41:04.230 --> 00:41:12.450
Developer: We sort of I mean we say that it's all agile, but I don't know if it really is because there's too few of us to be.

413
00:41:12.990 --> 00:41:16.830
Developer: In any of these things and it's sort of like you might be agile about some things.

414
00:41:18.090 --> 00:41:25.230
Developer: But then longer projects that might take six months or nine months those get really planned out in more of a waterfall pattern so.

415
00:41:25.260 --> 00:41:26.130
Interviewer: we're good okay like.

416
00:41:26.430 --> 00:41:33.570
Developer: Like I said we just switched from javascript typescript and was the whole thing we also rewrote like the library.

417
00:41:34.140 --> 00:41:36.630
Developer: How we and started using web GL for.

418
00:41:36.630 --> 00:41:39.870
Developer: Everything and that whole project was completely waterfall.

419
00:41:41.070 --> 00:41:47.340
Developer: But, in parallel, the rest of the development work in the front end APP that kind of stuff is more agile, but we try to have.

420
00:41:47.340 --> 00:41:55.080
Developer: High Level goals in mind so it's kind of a mix, I think, and then I don't know like.

421
00:41:56.460 --> 00:41:56.730
yeah.

422
00:41:58.290 --> 00:41:59.160
Interviewer: Just to make that.

423
00:42:00.150 --> 00:42:05.400
Developer: Real agile in big companies now and I don't think we're doing that because ones have like a.

424
00:42:05.400 --> 00:42:08.520
Developer: scrum master and daily stand ups and.

425
00:42:08.820 --> 00:42:09.390
yeah.

426
00:42:10.410 --> 00:42:13.740
Developer: there's no point in having a sprint if there's no deadline and so.

427
00:42:13.770 --> 00:42:14.130
Developer: Okay.

428
00:42:15.000 --> 00:42:16.890
Developer: yeah that makes sense I don't feel like that's.

429
00:42:17.370 --> 00:42:19.290
Developer: where people are putting into sprint for her.

430
00:42:21.210 --> 00:42:23.400
Interviewer: is easier for two people to communication.

431
00:42:23.460 --> 00:42:23.730
talk.

432
00:42:27.240 --> 00:42:30.540
Interviewer: I worked for a company for eight months as an intern.

433
00:42:31.020 --> 00:42:42.720
Interviewer: So basically we have a to bake schedule for each sprint and a way to stand up a meeting every day so yeah I think that's for maybe bigger groups.

434
00:42:42.990 --> 00:42:44.640
Interviewer: More people yeah yeah.

435
00:42:45.390 --> 00:42:45.780
So.

436
00:42:47.070 --> 00:42:54.300
Developer: And also full time part time it's hard to be on a sprint schedule, if the Open Source is the lowest of your priorities like if you have.

437
00:42:54.600 --> 00:42:58.350
Developer: yeah definitely if you have client work and you can't drop the ball on the client work.

438
00:42:58.980 --> 00:43:03.930
Developer: That you delay your Open Source stuff until later because nobody's gonna care they get it for free anyway.

439
00:43:05.760 --> 00:43:06.300
Developer: that's the thing.

440
00:43:06.330 --> 00:43:11.490
Developer: That stuff gets moved around and usually the open sources at the bottom of the low priority list.

441
00:43:12.120 --> 00:43:24.450
Interviewer: yeah alright so next question is about project management your your Twitter, that there is a project manager, maybe spend 20% of his or her time So is there any.

442
00:43:25.470 --> 00:43:34.110
Interviewer: process for this management or do you think improving this process can be solving some problems, some of these kind of problems.

443
00:43:36.000 --> 00:43:38.310
Developer: Definitely, so we had a bunch of problems.

444
00:43:39.630 --> 00:43:48.630
Developer: So the it's weird because we tried using jira so originally we had started with an open access jira.

445
00:43:49.170 --> 00:43:49.470
Interviewer: Okay.

446
00:43:49.500 --> 00:43:50.940
Developer: We were nonprofit at the time.

447
00:43:51.390 --> 00:43:51.660
Interviewer: yeah.

448
00:43:52.020 --> 00:43:54.180
Developer: If you asked your they'll give you a free account.

449
00:43:55.020 --> 00:43:56.160
Developer: of your free instance that.

450
00:43:56.160 --> 00:43:57.090
Developer: Anyone can access.

451
00:43:57.720 --> 00:44:02.100
Developer: And that was nice, because we could really write everything we wanted, we could share with the Community and stuff like.

452
00:44:02.100 --> 00:44:02.820
Interviewer: That yeah.

453
00:44:02.880 --> 00:44:09.840
Developer: But it was also not Nice because there might be like this issue ties into something that we're doing that is private.

454
00:44:10.530 --> 00:44:11.460
Interviewer: And we want to mention.

455
00:44:11.790 --> 00:44:13.650
Developer: That we can't now because it's public.

456
00:44:14.670 --> 00:44:17.820
Developer: And so, now we have a private jira.

457
00:44:19.200 --> 00:44:31.980
Developer: which we use to point to github issues and stuff like that, so we tried to track all the development in github when we're actually going to do something so that the Community knows it's being done.

458
00:44:32.580 --> 00:44:41.550
Developer: And then internally, we have a jira which the idea is that we can use that for stuff that's actually driven by mgh priority.

459
00:44:42.510 --> 00:44:43.050
Interviewer: and

460
00:44:43.200 --> 00:44:47.490
Developer: i'm like really right why we're doing it and how long it's going to take and who's assigned to it.

461
00:44:51.060 --> 00:45:03.510
Developer: Because we also had issues where without project management, if you put a more junior staff member on a task they might take way too long, if nobody's estimated how long it's gonna take their just burned half the budget and they didn't get the thing done.

462
00:45:04.020 --> 00:45:11.340
Developer: Okay, so we needed your stuff like that to keep tabs on more junior people it's not as much of an issue with more senior people.

463
00:45:12.660 --> 00:45:14.820
Developer: Because they might just blow past the task.

464
00:45:15.930 --> 00:45:20.430
Developer: And so that's why we have jira we have like an approval process to make sure that the mgh side.

465
00:45:20.490 --> 00:45:26.850
Developer: Because like I said radicals a subcontractor the mta side is deciding the priorities they're saying this is what you should work on.

466
00:45:27.630 --> 00:45:36.060
Developer: This how long and we work with them, since launch to take roughly and then they also keep tabs to make sure that we're not spending too much on certain things.

467
00:45:38.820 --> 00:45:39.600
Developer: And so.

468
00:45:40.800 --> 00:45:46.800
Developer: That it sort of helps it definitely helps, but it is a pain.

469
00:45:48.450 --> 00:45:53.490
Developer: Because, then you have to sync these two systems, which is really frustrating.

470
00:45:54.540 --> 00:45:54.810
Interviewer: Sorry.

471
00:45:55.860 --> 00:45:57.120
Interviewer: crusades to means to me.

472
00:45:57.120 --> 00:45:58.620
Developer: Here and private and public.

473
00:46:00.960 --> 00:46:02.310
Developer: Private year on the public github.

474
00:46:04.170 --> 00:46:09.270
Developer: So in other projects we've done using Zen hub or with.

475
00:46:11.070 --> 00:46:14.670
Developer: Another github repo that tracks, the project.

476
00:46:15.540 --> 00:46:17.760
Developer: And that does work because it's like one APP.

477
00:46:18.000 --> 00:46:25.050
Developer: Instead of to the problem is most project managers and stuff aren't used to get hub, and so they just go to it they're used to jira and they want to use.

478
00:46:25.050 --> 00:46:26.190
Interviewer: yeah yeah.

479
00:46:26.820 --> 00:46:28.530
Developer: you're a super slow on a huge pain.

480
00:46:30.450 --> 00:46:32.580
Interviewer: yeah I don't really like a jira.

481
00:46:33.090 --> 00:46:33.630
Interviewer: But I think.

482
00:46:34.230 --> 00:46:35.130
Interviewer: Managers may use.

483
00:46:36.030 --> 00:46:48.510
Developer: Like confluence is OK for documentation, but once it's in there that it's stuck in there, it doesn't have collaborative editing like Google docs things like that, so our process.

484
00:46:50.160 --> 00:46:59.460
Developer: isn't really very rigid right now, and I think it could be better, but I don't know how to make it better.

485
00:47:01.770 --> 00:47:10.680
Developer: With like if we had more people than we would really have to force using jira and be more strict about it, but with only a handful of people, it might not be totally required.

486
00:47:13.440 --> 00:47:20.250
Developer: What when the people are quite senior and can work together by themselves and be independent, when you have junior people who.

487
00:47:20.490 --> 00:47:23.640
Developer: might do the wrong thing or might not ask for help when they need to.

488
00:47:24.330 --> 00:47:26.280
Developer: Then I think having the jira.

489
00:47:27.390 --> 00:47:34.260
Developer: Having a project manager checking in with them asking what blockers they have and what's wrong and why something I think too long, is very important.

490
00:47:35.280 --> 00:47:45.780
Interviewer: yeah that makes sense, so you talked about confluence right so so that the humans are the army for private to use or as a public to the Community.

491
00:47:47.040 --> 00:47:54.840
Developer: So confluence we've been using for like internal meeting notes, we have, we also have like so we also have a private.

492
00:47:56.190 --> 00:47:58.350
Developer: collaboration with an industry partner.

493
00:47:58.890 --> 00:48:02.460
Developer: And they've agreed to open source what we've done in the collaboration, but only.

494
00:48:02.460 --> 00:48:03.960
Developer: after a certain period of time.

495
00:48:04.440 --> 00:48:16.020
Developer: Okay, so in that private jira and private confluence we have the documentation for that as it's going on, and then I like in meeting notes and videos and bug reports stuff like that.

496
00:48:17.970 --> 00:48:24.840
Developer: And then, when it's going to be open source we'll just take one branch from the repo and make it into a new repository.

497
00:48:25.440 --> 00:48:26.580
Interviewer: Okay, and I mean.

498
00:48:27.030 --> 00:48:30.870
Developer: that's our plan, right now, I mean this is the first time we've done it so i'll tell you, if it works.

499
00:48:32.520 --> 00:48:40.650
Developer: But yeah it's a weird situation that like normally they're not willing to fund open source and, in this case, they are because them.

500
00:48:40.680 --> 00:48:40.950
Interviewer: yeah.

501
00:48:40.980 --> 00:48:42.330
Developer: Hopes their timeline and so.

502
00:48:42.930 --> 00:49:00.480
Interviewer: yeah I was wondering, is there any way to communicate your roadmap to the Community, for example, these are the features, we like to develop so maybe some Members from the Community, they can pick up some tasks and provide some contribution you really need.

503
00:49:02.040 --> 00:49:05.850
Developer: So that's actually something I really want to figure out we.

504
00:49:06.870 --> 00:49:15.690
Developer: We have now plan to revamp our website and filling it up and we're trying to like commit ourselves to writing quarterly roadmaps.

505
00:49:16.290 --> 00:49:16.650
Interviewer: Like.

506
00:49:16.770 --> 00:49:20.430
Developer: Where we document, this is the funding, we do have, these are the priorities we have.

507
00:49:20.970 --> 00:49:22.620
Developer: These are long time priorities we.

508
00:49:22.620 --> 00:49:27.630
Developer: want, but we can't necessarily fund them, but if you're interested in collaborating we can work on them together.

509
00:49:28.230 --> 00:49:37.380
Developer: Okay, and that's at the high level, and then I think if you know what they are at a specific level like actually doing that specific takes time.

510
00:49:39.540 --> 00:49:47.370
Developer: Then you can put a github issues we've done that in the past and it was hit or miss, we had a couple that people actually did, which was awesome.

511
00:49:47.820 --> 00:49:55.890
Developer: How can we had a couple that people did in their own way we didn't think was good enough to merge, and it became too long to actually get it in.

512
00:49:56.430 --> 00:49:56.760
Okay.

513
00:50:00.480 --> 00:50:08.820
Developer: And so that is definitely something that can work, but it is a lot of upfront effort from someone who asked to know everything, because you can't say.

514
00:50:09.570 --> 00:50:20.190
Developer: This is how this feature should work without coding it yourself like that's a hard task to write that ticket and write that description without spending flowers doing it.

515
00:50:20.880 --> 00:50:21.570
Interviewer: yeah gotcha.

516
00:50:23.580 --> 00:50:23.880
Interviewer: So.

517
00:50:25.380 --> 00:50:39.060
Interviewer: yeah our next question is about crannies what is hard to ensure that correct nice of the software any obstacles and animal lovers to solve the problems develop methods work.

518
00:50:40.560 --> 00:50:48.480
Developer: is definitely hard, because people will make a pull request somebody else will merge it, and then they will have broken something without thinking.

519
00:50:50.190 --> 00:50:53.580
Developer: So we are not doing a great job of it.

520
00:50:55.020 --> 00:50:58.560
Developer: In some libraries are doing better than others who maintain a lot of them.

521
00:51:00.360 --> 00:51:10.710
Developer: Tests you just need tests, you need continuous integration and unit tests and you need continuous deployment, if your tests can't cover your actual functionality.

522
00:51:12.090 --> 00:51:16.080
Developer: You need to continuous deployment and there is an end to end tests.

523
00:51:17.940 --> 00:51:29.910
Developer: In our case there's one that we really like now called Cypress it's not really, but this is for end to end testing from a user perspective.

524
00:51:30.540 --> 00:51:30.930
Okay.

525
00:51:31.980 --> 00:51:43.680
Developer: And so that you actually you write a test that basically launches your application and clicks the buttons and make sure that what you get in the browser is what you expect.

526
00:51:44.280 --> 00:51:44.640
Okay.

527
00:51:48.300 --> 00:51:57.450
Developer: And it's basically a tests continuous integration continuous deployment The other thing we have is that we have.

528
00:51:59.220 --> 00:52:04.920
Developer: staging so we have like nightly it's basically nightly but it's every every commit.

529
00:52:07.950 --> 00:52:14.280
Developer: Continuous deployment server, then we have a staging and then there's a manual.

530
00:52:15.750 --> 00:52:21.750
Developer: Approval to production, which is like viewer.org.org.

531
00:52:22.860 --> 00:52:25.830
Developer: I haven't manually updated in a long time because i've been busy but.

532
00:52:26.070 --> 00:52:29.310
Developer: It turns the processes that we have these three different ones is a.

533
00:52:30.420 --> 00:52:33.600
Developer: reviewer death Dev your staging.

534
00:52:34.740 --> 00:52:35.550
Developer: And you were.

535
00:52:38.910 --> 00:52:47.220
Developer: And so that helps because if somebody discovers something in Dev we can fix it before it ever gets to the DEMO server.

536
00:52:47.760 --> 00:52:48.090
Okay.

537
00:52:50.340 --> 00:53:02.010
Developer: One issue we have is that we haven't been great on doing releases, and so I want to fix that like more tests and a better release cycle, so that we say here it's frozen.

538
00:53:02.670 --> 00:53:10.050
Developer: And here we're gonna have release notes and if a bug fixes this it's in reference that we've been really bad about that because it's a lot of work.

539
00:53:10.740 --> 00:53:12.090
Developer: And I think that that needs to be.

540
00:53:12.090 --> 00:53:14.040
Developer: fixed in the future.

541
00:53:14.070 --> 00:53:25.470
Interviewer: yeah this this is interesting, I also develop web APP Spanish else I am from my environments, I have Dev and a production, but perhaps I should consider staging us.

542
00:53:28.500 --> 00:53:35.880
Interviewer: So next question is about maintain ability, how did you achieve maintain ability and.

543
00:53:38.250 --> 00:53:39.630
Interviewer: yeah basically that's that's it.

544
00:53:40.950 --> 00:53:50.310
Developer: And so, in our case, we push stuff down whenever something has a really unique function, we push it down into lower level libraries.

545
00:53:51.690 --> 00:53:54.780
Developer: into a lower library so.

546
00:53:56.220 --> 00:54:01.740
Developer: i'll give you an example, this link is outdated, but this is the user interface.

547
00:54:01.980 --> 00:54:03.120
Developer: Okay, the library.

548
00:54:03.690 --> 00:54:05.310
Developer: Okay, so.

549
00:54:05.610 --> 00:54:08.100
Developer: We have like a rendering library.

550
00:54:09.360 --> 00:54:12.690
Developer: Which is cornerstone or.

551
00:54:14.100 --> 00:54:22.590
Developer: And we have the cmt, this is what I mean when I say we have a lot of libraries now it's a di calm manipulation.

552
00:54:23.670 --> 00:54:32.010
Developer: That can web client, so this is literally what it sounds like it's a client library for the.com web standard.

553
00:54:32.640 --> 00:54:32.910
yeah.

554
00:54:33.930 --> 00:54:38.730
Developer: Request library and so anytime that we find that there's some sort of.

555
00:54:40.080 --> 00:54:48.540
Developer: functionality, that is getting really repetitive or make sense to be a single library we try to push it down and maintain it as a separate library.

556
00:54:48.960 --> 00:54:59.040
Developer: How do we try to isolate things by sort of velocity at which they change and some of these things very rarely change.

557
00:54:59.070 --> 00:55:06.870
Developer: Whereas some of the APP level state management or user interface things those change much more frequently.

558
00:55:08.970 --> 00:55:26.970
Developer: And that I think helps a lot with me intangibility so isolating and modular rising into individual libraries The other thing that's nice about this is that people might not want to build off of that application, because they have some other goal, whatever.

559
00:55:27.960 --> 00:55:34.290
Developer: But they would be willing to use the rendering layer or they would be willing willing to use the daikon layer and things like that.

560
00:55:34.740 --> 00:55:48.600
Developer: And so, people will pick up each individual library and then those slowly get hardened one by one, at their own speeds and so that helps overall so we're not always a note for everything okay.

561
00:55:50.040 --> 00:55:50.850
Interviewer: yeah that makes sense.

562
00:55:54.450 --> 00:56:11.130
Interviewer: Okay next question is a bout of understand the ability to provide some examples of that users have misunderstood the software, I think you mentioned that some other users or maybe other TEAM members misunderstood or something.

563
00:56:12.450 --> 00:56:12.720
Interviewer: Maybe your.

564
00:56:13.890 --> 00:56:17.250
Developer: end users are developers yeah I mean.

565
00:56:17.340 --> 00:56:21.120
Interviewer: Any users, but you can also give me some examples for the developers.

566
00:56:22.020 --> 00:56:28.980
Developer: I mean for developers and stuff like they don't realize like in a really specific example.

567
00:56:30.750 --> 00:56:43.110
Developer: We do a rendering library and the way rendering works in the browser you can hook into this thing called request animation frame that repaint when the browser does it three paint no it actually looks smooth on your screen.

568
00:56:43.260 --> 00:56:47.490
Developer: So it doesn't refresh too often, for your screen refresh yeah.

569
00:56:49.170 --> 00:56:51.630
Developer: And people don't seem to realize that that's a synchronous.

570
00:56:52.140 --> 00:56:55.950
Developer: And so they assume if they call draw it's going to be drawn, but it's not.

571
00:56:56.310 --> 00:57:00.960
Developer: It will be drawn on the next animation frame and people will do things like.

572
00:57:00.990 --> 00:57:05.040
Developer: called draw and then immediately save the output to a PNG or something like that.

573
00:57:05.370 --> 00:57:06.180
Developer: which will work.

574
00:57:06.210 --> 00:57:12.120
Developer: Because it hasn't drawn yet, and so that would be fixed if we had documented that better.

575
00:57:14.100 --> 00:57:23.250
Developer: So there's understand ability stuff like that, where it's our fault, because we're not documenting it well enough because we don't expect people to use that functionality, very often.

576
00:57:23.460 --> 00:57:27.990
Developer: Or we never we just never figured anyone was touching that, so why bother document it.

577
00:57:30.750 --> 00:57:32.070
Developer: For the users.

578
00:57:33.840 --> 00:57:49.620
Developer: The biggest issue we have, I think, for misunderstanding is not really end users, because to them it's pretty familiar it's more like people who are trying to deploy the software, so not the doctors, but like a software engineer is trying to deploy it.

579
00:57:52.380 --> 00:58:03.960
Developer: A lot of people misunderstand the way it works, because we are a single page application like single page web APP so we don't have a server back end and so everyone seems to expect us to have an API.

580
00:58:04.500 --> 00:58:06.930
Developer: For a back end that there isn't one it's literally just.

581
00:58:07.200 --> 00:58:08.430
Developer: email javascript CSS.

582
00:58:08.970 --> 00:58:11.820
Developer: And even though i've said that a million times and nobody gets it.

583
00:58:12.330 --> 00:58:16.050
Developer: And so I don't know how else to explain it like maybe a diagram or something.

584
00:58:17.910 --> 00:58:22.620
Developer: Because if you tell people you're a web APP people expect that there must be back end but.

585
00:58:22.770 --> 00:58:25.710
Developer: In our case there's no back end, yet we used to have one we got rid of it.

586
00:58:27.360 --> 00:58:38.400
Developer: And stuff like that it's like deployment and things like that are usually the biggest understand mobility issues, because people don't know how to deploy it against their imaging archive.

587
00:58:39.420 --> 00:58:43.830
Developer: They don't know why they're getting security errors from their browser.

588
00:58:46.440 --> 00:58:50.130
Developer: Because they're requesting from one server to the wrong server and can't do that.

589
00:58:52.680 --> 00:58:54.390
Developer: And stuff like that, I think.

590
00:58:55.620 --> 00:58:56.100
Developer: So.

591
00:58:56.130 --> 00:59:03.870
Developer: yeah it's mostly around deployment and security, the end users know how to use it, because it's just like any other imaging application you measure stuff you scroll your window.

592
00:59:03.870 --> 00:59:05.010
Developer: Okay pan yeah.

593
00:59:05.730 --> 00:59:06.960
Interviewer: Okay, I think.

594
00:59:08.250 --> 00:59:18.630
Interviewer: Only if the front end and having the front end and maybe one advantage for Okay, because I think for myself sometimes is expensive to deploy.

595
00:59:18.960 --> 00:59:19.860
Developer: The back end.

596
00:59:20.220 --> 00:59:22.920
Interviewer: I need to pay for the servers so for.

597
00:59:23.790 --> 00:59:25.230
Interviewer: me yeah.

598
00:59:25.860 --> 00:59:32.040
Interviewer: So, first, I mean if you choose, if you want to just try and do some personal research on the the front end, would it be much cheaper.

599
00:59:32.490 --> 00:59:48.960
Interviewer: You also talked about total that the end users, they normally understand the software, so I think that's actually related to the next question question the usability, I think this implies that the source or must be easy to use, because it's easy to understand.

600
00:59:49.170 --> 00:59:51.630
Developer: Actually, I have one more thing to the last question which I just read.

601
00:59:53.640 --> 01:00:02.880
Developer: The we did have issues at the beginning, because people didn't understand that it was a web application, this was really like four or five years ago.

602
01:00:03.150 --> 01:00:12.600
Developer: Okay people assumed, it was a desktop application we're like no no it's in the browser You see, let me go to it in the browser here, it is now, you have the application and they still didn't get it.

603
01:00:13.350 --> 01:00:19.800
Developer: And it took a few years, and now I think everyone is on the same page that okay it's a browser application you go there, through your browser and you have.

604
01:00:20.280 --> 01:00:22.140
Developer: yeah at the beginning, people did not get that.

605
01:00:22.650 --> 01:00:26.190
Developer: And that was really weird they were thinking Okay, but how do I install it like you don't.

606
01:00:27.420 --> 01:00:28.650
Developer: know and so that's the point.

607
01:00:29.730 --> 01:00:33.630
Developer: I don't get so that is definitely one but for usability.

608
01:00:36.720 --> 01:00:42.780
Developer: That is really important, so when I first started, we didn't have the user user interface designer.

609
01:00:43.320 --> 01:00:45.390
Developer: And this was actually something that one of our.

610
01:00:45.660 --> 01:00:56.940
Developer: Colleagues, was really pushing she said, I want to get designer to redo the user interface, and we were like Oh, why we're doing such a good job and looks great.

611
01:00:57.630 --> 01:01:07.980
Developer: And then we actually had him do it and it came out like amazing and we were all astonished, and I think actually having the ui designer go through it.

612
01:01:09.690 --> 01:01:12.540
Developer: made the application just looks so much more polished.

613
01:01:14.220 --> 01:01:21.720
Developer: and professional and if I showed I don't have the images, but if I showed you the original.

614
01:01:23.160 --> 01:01:30.150
Developer: versus redesigned one it's the original looks like it was made by a school child or something.

615
01:01:30.780 --> 01:01:35.130
Developer: It looks like a professional software engineering to you, and so I think that.

616
01:01:35.340 --> 01:01:43.950
Developer: Having a professional ui design has really made it more usable and more approachable and more interesting to people.

617
01:01:44.460 --> 01:01:46.140
Developer: And that I think it's been one of the biggest.

618
01:01:46.140 --> 01:01:51.240
Developer: drivers of our growth is that we actually put effort into the design and it looks good.

619
01:01:53.880 --> 01:02:02.010
Developer: And we've just done, another redesign it's not released yet, but that's coming early next couple months, which will hopefully be looking better, which is great.

620
01:02:03.390 --> 01:02:10.830
Developer: But that was something that like I completely underestimated how good it would turn out by actually having a designer work on it.

621
01:02:11.520 --> 01:02:27.690
Developer: And yeah ever since we did that it was like way more than all the engineering, we did like it seemed to be more important than most of the engineering, we did is just having someone make it look good and then spending the time to make the html and CSS actually look good and.

622
01:02:29.040 --> 01:02:30.690
Developer: pixel perfect and stuff like that.

623
01:02:31.320 --> 01:02:39.660
Interviewer: yeah I think that that makes sense for some web Apps I use, even though they are slow they look good, so I can be more patient.

624
01:02:40.800 --> 01:02:41.430
Developer: more enjoyable.

625
01:02:42.600 --> 01:02:43.920
Developer: yeah yeah.

626
01:02:45.270 --> 01:02:45.840
Developer: So.

627
01:02:48.780 --> 01:02:51.840
Interviewer: yeah easily or any other thing about usability or maybe we can go to.

628
01:02:53.490 --> 01:03:12.090
Developer: The other thing we recently did for usability which I wish we had done earlier, so we did it in the context of a pet CT project is that we actually interviewed I mean we did this at the beginning for another project, but we didn't do a strictly, for all his and I wish we had is that.

629
01:03:14.850 --> 01:03:20.820
Developer: We really did interviews with like a user experience designer Dan needed interview interviews with.

630
01:03:21.990 --> 01:03:24.540
Developer: radiologists and sat down with them and.

631
01:03:26.010 --> 01:03:31.590
Developer: had them go through their workflow and the Apps that they use now and talk about what they like and don't like.

632
01:03:32.130 --> 01:03:40.050
Developer: Because what one issue is that we were taking stuff from stuff we had seen at conferences and said oh this looks good let's build that same feature or whatever.

633
01:03:42.300 --> 01:03:53.790
Developer: or something similar to that, and then we would do that, and then we would talk to people, and it would turn out that that's The thing is, they hated about it and they wish that they never had that button or that icon or those colors and things like that.

634
01:03:56.040 --> 01:04:02.730
Developer: And so we had like actual interviews with radiologists where we watch them do their job.

635
01:04:03.390 --> 01:04:07.770
Developer: And said okay explain what you're doing why you're doing it what part you like what part you don't like.

636
01:04:09.090 --> 01:04:13.800
Developer: And that was really helpful because there was stuff that I would never would have thought about.

637
01:04:14.940 --> 01:04:17.250
Developer: Without them, explaining it and there was stuff that.

638
01:04:19.380 --> 01:04:31.950
Developer: That you think that they know is there and then, if you ask them about it they're like oh yeah i've seen that, on the screen before, but I have no idea what it does and I wouldn't care if it was gone actually it's a huge distraction.

639
01:04:31.980 --> 01:04:32.760
Interviewer: Get rid of it okay.

640
01:04:33.420 --> 01:04:41.970
Developer: Like Okay, and so it's like I think you do you really need to do user interviews and try to get them to be honest about.

641
01:04:44.490 --> 01:04:48.600
Developer: What they hate about current systems, otherwise I don't know how to address usability.

642
01:04:50.400 --> 01:04:54.210
Interviewer: yeah yeah that makes sense, so next question is about.

643
01:04:55.620 --> 01:05:07.770
Interviewer: documentation that documentation current of Malaysian can convey or necessary knowledge to their users, if it, yes, how did you do that, and then know if know any improvements needed.

644
01:05:08.520 --> 01:05:09.600
Developer: Definitely not.

645
01:05:10.980 --> 01:05:23.370
Developer: So, in the current documentation know in the next version which I said we haven't released just yet, but we're in the process of writing stuff is that we were completely missing any user manual at all.

646
01:05:23.790 --> 01:05:30.360
Developer: Okay now at least we're going to have that so if somebody does get stuck where they don't know what something does they're going to be able to click a link and go to the manual.

647
01:05:30.810 --> 01:05:31.020
yeah.

648
01:05:32.280 --> 01:05:35.340
Developer: And so the user side was completely missing before.

649
01:05:38.040 --> 01:05:51.480
Developer: The installation side is OK, but the APP level architecture and how it works was pretty much missing before we have documentation at the library level, but we didn't really have a lot at the APP level.

650
01:05:51.510 --> 01:05:52.920
Developer: And so that's improving now.

651
01:05:55.320 --> 01:06:00.240
Developer: yeah users and APP level over the big things that are missing, but right now it's definitely not good enough.

652
01:06:01.740 --> 01:06:02.130
Interviewer: chairs sure.

653
01:06:03.150 --> 01:06:10.380
Interviewer: do think good documentation can save your time in the future, I mean have you got a lot of questions from the users.

654
01:06:10.380 --> 01:06:13.260
Interviewer: yeah has game for repeated questions yeah.

655
01:06:13.530 --> 01:06:20.190
Developer: Definitely we're trying to get better about tracking things with the frequently asked questions.

656
01:06:20.730 --> 01:06:30.720
Developer: let's say like like i'll give you one example somebody emailed us yesterday saying, can I put my logo on it and sell it can you give me permission.

657
01:06:31.500 --> 01:06:33.480
Developer: And this happens, like all the time.

658
01:06:33.600 --> 01:06:40.680
Developer: And I don't know why we haven't added it to our Frequently Asked Questions like yes go ahead it's MIT license do whatever you want, we don't care.

659
01:06:41.700 --> 01:06:43.140
Developer: Like stuffy like me.

660
01:06:44.880 --> 01:06:57.450
Developer: So that kind of stuff like definitely can, because if we have a page that we can point to, and we know it's a repeat question, we can just respond with a template like yes please check faq it is.

661
01:06:58.080 --> 01:07:01.650
Developer: OK, I think that will definitely see what's time for sure.

662
01:07:02.610 --> 01:07:04.200
Interviewer: Sure thanks alright.

663
01:07:05.250 --> 01:07:18.630
Interviewer: last question is about who reproducibility do you have any concern that your computational results, want to be reproducible in the future and stats to ensure that reproducibility.

664
01:07:20.250 --> 01:07:30.780
Developer: So we don't do a ton of computation because we're just the viewer, but there are some tools like measuring things and stuff like that that do some computation.

665
01:07:32.700 --> 01:07:47.070
Developer: One of the things we try to do is benchmark it against other software when we develop it and include tests for stuff that would be saved, like actual derived annotations to make sure that they are correct.

666
01:07:47.580 --> 01:07:56.100
Developer: And Okay, if the tests are in place, hopefully it won't break in the future, the other thing is like when we're trying to save results, the default.

667
01:07:56.730 --> 01:08:05.520
Developer: way that we're trying to convince the Community that they should adopt for saving results is in standardized formats not like json or something like that.

668
01:08:06.060 --> 01:08:09.420
Developer: And we're trying to get people to save stuff into daikon format.

669
01:08:10.050 --> 01:08:14.730
Developer: With pointers to the original data exact annotation locations.

670
01:08:16.020 --> 01:08:16.890
Developer: And things like that.

671
01:08:17.910 --> 01:08:18.870
Developer: So.

672
01:08:20.100 --> 01:08:35.820
Developer: So that it is reproducible and like reliable and another application in interoperable, because I think if it's not if it's interoperable you'll find those issues more quickly, whereas if it's its own proprietary format, nobody will ever check it against another software.

673
01:08:36.690 --> 01:08:38.610
Developer: And so that's our.

674
01:08:39.720 --> 01:08:45.600
Developer: Our aim, so, especially with slicer we're trying to have our outputs interoperable that there's.

675
01:08:45.900 --> 01:08:55.680
Developer: Okay, and so that's a big goal, and so, hopefully that will quash any flash any reproducibility issues early.

676
01:08:56.340 --> 01:08:57.390
Developer: mm hmm yeah.

677
01:08:58.290 --> 01:09:08.220
Interviewer: yeah I think if it's interoperable with sizer that would be ready to come into your hands at him browser and maybe desktop we have a.

678
01:09:08.220 --> 01:09:08.760
sizer.

679
01:09:10.470 --> 01:09:15.030
Developer: We just noticed already like not a computational result but a rendering issue.

680
01:09:15.330 --> 01:09:21.360
Developer: Okay, with the new library that we're building is that something's not appearing correctly and it looks almost perfect.

681
01:09:21.780 --> 01:09:26.640
Developer: But there's something wrong like one slice of a volume doesn't show up right.

682
01:09:27.120 --> 01:09:32.040
Developer: How can we have slicer open next to the viewer trying to figure out what's going on in this.

683
01:09:32.640 --> 01:09:37.320
Developer: Because we have tested, and that is diet calm, then we can put in there, then we can check.

684
01:09:38.580 --> 01:09:39.600
Developer: Some interoperability.

685
01:09:41.430 --> 01:09:51.960
Interviewer: yeah okay all right, I think those are all of my questions I really appreciate that you provide so detailed and questions answered.

686
01:09:53.070 --> 01:09:53.460
Interviewer: and

687
01:09:53.550 --> 01:10:00.390
Interviewer: Oh, something i'd like to mention is maybe her interest in how we select our safari least.

688
01:10:01.410 --> 01:10:17.460
Interviewer: Because, sometimes it kind of asked, basically, I read some publications I searched online I total with our domain experts initially research about 50 different software packages, then I today.

689
01:10:18.720 --> 01:10:27.480
Interviewer: I did a screening I got rid of those commercial ones, also the free were without source code.

690
01:10:28.920 --> 01:10:30.240
Interviewer: which are not helping source.

691
01:10:30.960 --> 01:10:47.670
Interviewer: And there's some really older ones which haven't been maintaining for 10 years, so the rest remained there are 29 so far pages I ensure that 29 are also for.

692
01:10:49.470 --> 01:10:52.830
Interviewer: Viewing doing it, so they have a viewing function.

693
01:10:53.310 --> 01:10:55.140
Interviewer: So I didn't include maybe which.

694
01:10:55.200 --> 01:10:56.400
Interviewer: K K, which.

695
01:10:57.000 --> 01:10:58.500
Developer: toolkits and libraries yeah.

696
01:10:58.710 --> 01:11:06.420
Interviewer: yeah libraries for this 29 new words we try to measure nine different kinds of qualities.

697
01:11:07.020 --> 01:11:10.800
Interviewer: installed instability in ability and then ability usability.

698
01:11:11.070 --> 01:11:20.460
Interviewer: nine of them to fill the limited time we can measure those surface quality of the nine, and then we tried to contact different.

699
01:11:21.870 --> 01:11:32.400
Interviewer: teams of these projects doing such interviews, we are doing now so yeah i've done eight interviews interview, including this one.

700
01:11:33.480 --> 01:11:34.110
Developer: visor.

701
01:11:35.010 --> 01:11:36.960
Developer: visor Am I taking.

702
01:11:39.150 --> 01:11:43.740
Interviewer: My ticket just give me a moment, let me actually.

703
01:11:45.540 --> 01:11:46.710
Interviewer: Open my record.

704
01:11:47.730 --> 01:11:51.510
Interviewer: It has been, for several weeks, I cannot remember all of them.

705
01:11:51.630 --> 01:11:53.790
Interviewer: Know saturday's there.

706
01:11:54.990 --> 01:11:56.070
Interviewer: and

707
01:11:57.780 --> 01:12:00.300
Interviewer: We have itk snap.

708
01:12:00.810 --> 01:12:00.990
Developer: Oh.

709
01:12:01.260 --> 01:12:01.860
I have.

710
01:12:05.910 --> 01:12:08.430
Interviewer: My we have our I crow.

711
01:12:10.710 --> 01:12:16.260
Interviewer: yeah we have D double D, we have basis and.

712
01:12:16.800 --> 01:12:17.400
Developer: There should be.

713
01:12:17.760 --> 01:12:23.070
Interviewer: A couple of others, including a pace that's eight of them yeah.

714
01:12:23.310 --> 01:12:29.910
Developer: Okay cool yeah no, we know some of the people, pretty well, but some of them i've only interacted with over github but.

715
01:12:30.810 --> 01:12:32.280
Interviewer: yeah so so so.

716
01:12:33.540 --> 01:12:39.810
Interviewer: i'm going to read a report here to interview for my master grade do you want me to send you the result to you.

717
01:12:39.840 --> 01:12:40.740
Interviewer: When they report is.

718
01:12:40.800 --> 01:12:41.550
Interviewer: finished definitely.

719
01:12:42.030 --> 01:12:44.520
Developer: Okay, here we put in the link at the bottom.

720
01:12:44.730 --> 01:12:47.850
Developer: So if you're going to cite it like that paper because it's the newer one.

721
01:12:48.390 --> 01:12:48.540
Developer: yeah.

722
01:12:49.080 --> 01:12:49.620
No problem.

723
01:12:51.120 --> 01:12:56.430
Developer: And yeah no definitely I want to see what's on here what we're doing wrong and what other people are doing right.

724
01:12:57.300 --> 01:13:03.660
Interviewer: Sure yeah We also aim to publish our porch power web number.

725
01:13:06.120 --> 01:13:07.200
Developer: i'm sure takes over.

726
01:13:08.310 --> 01:13:09.780
Developer: Your masters first it's done.

727
01:13:09.900 --> 01:13:10.560
yeah.

728
01:13:11.610 --> 01:13:12.060
Interviewer: Okay.

729
01:13:12.150 --> 01:13:13.950
Interviewer: Well, thank you very much for sharing.

730
01:13:14.040 --> 01:13:18.240
Interviewer: And it came to me, I will take a look right turn Santo.

731
01:13:18.270 --> 01:13:21.270
Developer: Marco norden that's probably the one you want to talk to.

732
01:13:21.660 --> 01:13:23.850
Interviewer: Okay, I have, I have tried to connect.

733
01:13:25.110 --> 01:13:28.260
Developer: Is i'm sure he'll be happy to meet with you actually if you're.

734
01:13:29.850 --> 01:13:31.920
Developer: I don't know if Steve mentioned.

735
01:13:36.210 --> 01:13:40.890
Developer: You might get other people through nemec project week, if you need it.

736
01:13:42.750 --> 01:13:44.160
Developer: I don't know if you do at this point, but.

737
01:13:47.790 --> 01:13:49.200
Interviewer: Okay, so.

738
01:13:50.760 --> 01:13:52.110
Interviewer: yeah yeah but.

739
01:13:53.010 --> 01:13:53.880
Developer: I might be.

740
01:13:55.800 --> 01:13:57.090
Developer: Around through the slicer yeah.

741
01:13:57.600 --> 01:13:58.560
Developer: Sure thanks.

742
01:14:00.900 --> 01:14:01.350
Developer: alright.

743
01:14:02.070 --> 01:14:03.930
Interviewer: Alright, is there, another question.

744
01:14:04.680 --> 01:14:05.070
Interviewer: To me.

745
01:14:05.190 --> 01:14:13.650
Developer: Not from me, I think i'm interested to see what you come up with I also put one other thing that was at the top it's Canadian funding one.

746
01:14:14.550 --> 01:14:16.650
Developer: yeah in there it's called canary.

747
01:14:17.610 --> 01:14:20.220
Developer: Sure it's similar to the.

748
01:14:23.340 --> 01:14:28.890
Developer: cancer research funding but it's from Canada and it's really only for.

749
01:14:31.770 --> 01:14:34.680
Developer: ios calculate was like for research software.

750
01:14:35.520 --> 01:14:38.790
Developer: And so that's something really interesting is that they have this.

751
01:14:39.900 --> 01:14:43.050
Developer: funding specifically for research software which most.

752
01:14:43.140 --> 01:14:48.090
Developer: Okay, so if you're talking about software gaps in area, other than that slicer has.

753
01:14:49.590 --> 01:14:53.940
Developer: that other countries should adopt I would wish that you had that kind of stuff.

754
01:14:54.570 --> 01:14:56.280
Interviewer: yeah that's how they interested in yeah.

755
01:14:57.870 --> 01:14:58.500
Developer: cool.

756
01:15:00.780 --> 01:15:02.850
Developer: Well, it was nice meeting you.

757
01:15:03.570 --> 01:15:10.200
Interviewer: Thank you Eric I really appreciate you joining this meeting and have a good away I do.

